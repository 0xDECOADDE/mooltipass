#
# Makefile
#
# Created: 2014-01-29
# Author: Mikael Albertsson
#

CC      := avr-gcc
OBJCOPY := avr-objcopy
OBJDUMP := avr-objdump
SIZE    := avr-size

# Object files and target name.
OBJECTS := src/mooltipass.o \
		   src/CARD/smartcard.o \
		   src/CARD/smart_card_higher_level_functions.o \
		   src/FLASH/flash_mem.o \
		   src/GRAPHICS/graphics.o \
		   src/interrupts.o \
		   src/OLED/oled.o \
		   src/USB/usb_serial_hid.o \
		   src/UTILS/utils.o
TARGET  := mooltipass

# Compiler and linker configuration.
FORMAT  := ihex
MCU     := atmega32u4

# Set CONFIG=DEBUG in the shell from which you invoke make to build a debug
# build.
CONFIG  ?= RELEASE
DEFINES := F_CPU=16000000UL F_USB=16000000UL

CFLAGS  := -Wall -mmcu=$(MCU) -funsigned-char -funsigned-bitfields -fpack-struct -fshort-enums -ffunction-sections
LDFLAGS := -lm -Wl,-gc-sections

ifeq ($(CONFIG), RELEASE)
  DEFINES += NDEBUG
  CFLAGS  += -Os
else ifeq ($(CONFIG), DEBUG)
  DEFINES += DEBUG
  CFLAGS  += -O1 -g2 -Wa,-g
endif

# Add all defines, each prefixed with -D.
CFLAGS += $(foreach def,$(DEFINES),$(def:%=-D%))

.PHONY: all
all: $(TARGET).hex $(TARGET).eep $(TARGET).lss size

# Display the size of generated elf file
ELFSIZE = $(SIZE) --mcu=$(MCU) --format=avr $(TARGET).elf

size:
	@if test -f $(TARGET).elf; then echo; $(ELFSIZE); 2>/dev/null; echo; fi

# Pattern rule to generate .d files from .c files. The .d files are make-files,
# generated by gcc with all the dependencies of the .c file. They are included
# above and will make all .o files depend on the correct prerequisite sources.
%.d: %.c
	@set -e; $(CC) -M -MT '$(<:.c=.o)' $(CFLAGS) $< | sed -e 's,\($*\)\.o[ :]*,\1.o $@: ,g' > $@

# Include the auto-generated make files that gcc generated in the %.d rule
# above.
-include $(OBJECTS:.o=.d)

# Target to link the object files into the final hex file.
$(TARGET).elf: $(OBJECTS)
	$(CC) $(CFLAGS) $^ -o $@ $(LDFLAGS)

# Extract the sections that should be in the .hex file from the .elf file.
%.hex: %.elf
	$(OBJCOPY) -O $(FORMAT) -R .eeprom -R .fuse -R .lock -R .signature $< $@

# Extract the eeprom parts from the .elf file.
%.eep: %.elf
	-$(OBJCOPY) -j .eeprom --set-section-flags=.eeprom="alloc,load" \
	--change-section-lma .eeprom=0 --no-change-warnings -O $(FORMAT) $< $@ || exit 0

%.lss: %.elf
	$(OBJDUMP) -h -S -z $< > $@

.PHONY: fuses flash clean
# Target to set the fuses of the mooltipass device.
fuses:
	avrdude -p $(MCU) -U lfuse:w:0xff:m
	avrdude -p $(MCU) -U hfuse:w:0xd9:m
	avrdude -p $(MCU) -U efuse:w:0xfb:m

# Target to flash the hex image to the mooltipass device.
flash: $(TARGET).hex
	avrdude -p $(MCU) -U flash:w:$<:i

clean:
	-rm -f $(OBJECTS) $(OBJECTS:.o=.d) $(TARGET).hex $(TARGET).eep $(TARGET).lss $(TARGET).elf
