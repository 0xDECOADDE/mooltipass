   1               		.file	"Caterina.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.text
   8               	.Ltext0:
   9               		.cfi_sections	.debug_frame
  10               		.section	.text.FetchNextCommandByte,"ax",@progbits
  12               	FetchNextCommandByte:
  13               	.LFB103:
  14               		.file 1 "Caterina.c"
   1:Caterina.c    **** /*
   2:Caterina.c    ****              LUFA Library
   3:Caterina.c    ****      Copyright (C) Dean Camera, 2011.
   4:Caterina.c    **** 
   5:Caterina.c    ****   dean [at] fourwalledcubicle [dot] com
   6:Caterina.c    ****            www.lufa-lib.org
   7:Caterina.c    **** */
   8:Caterina.c    **** 
   9:Caterina.c    **** /*
  10:Caterina.c    ****   Copyright 2011  Dean Camera (dean [at] fourwalledcubicle [dot] com)
  11:Caterina.c    **** 
  12:Caterina.c    ****   Permission to use, copy, modify, distribute, and sell this
  13:Caterina.c    ****   software and its documentation for any purpose is hereby granted
  14:Caterina.c    ****   without fee, provided that the above copyright notice appear in
  15:Caterina.c    ****   all copies and that both that the copyright notice and this
  16:Caterina.c    ****   permission notice and warranty disclaimer appear in supporting
  17:Caterina.c    ****   documentation, and that the name of the author not be used in
  18:Caterina.c    ****   advertising or publicity pertaining to distribution of the
  19:Caterina.c    ****   software without specific, written prior permission.
  20:Caterina.c    **** 
  21:Caterina.c    ****   The author disclaim all warranties with regard to this
  22:Caterina.c    ****   software, including all implied warranties of merchantability
  23:Caterina.c    ****   and fitness.  In no event shall the author be liable for any
  24:Caterina.c    ****   special, indirect or consequential damages or any damages
  25:Caterina.c    ****   whatsoever resulting from loss of use, data or profits, whether
  26:Caterina.c    ****   in an action of contract, negligence or other tortious action,
  27:Caterina.c    ****   arising out of or in connection with the use or performance of
  28:Caterina.c    ****   this software.
  29:Caterina.c    **** */
  30:Caterina.c    **** 
  31:Caterina.c    **** /** \file
  32:Caterina.c    ****  *
  33:Caterina.c    ****  *  Main source file for the CDC class bootloader. This file contains the complete bootloader logic
  34:Caterina.c    ****  */
  35:Caterina.c    **** 
  36:Caterina.c    **** #define  INCLUDE_FROM_CATERINA_C
  37:Caterina.c    **** #include "Caterina.h"
  38:Caterina.c    **** 
  39:Caterina.c    **** /** Contains the current baud rate and other settings of the first virtual serial port. This must b
  40:Caterina.c    ****  *  operating systems will not open the port unless the settings can be set successfully.
  41:Caterina.c    ****  */
  42:Caterina.c    **** static CDC_LineEncoding_t LineEncoding = { .BaudRateBPS = 0,
  43:Caterina.c    ****                                            .CharFormat  = CDC_LINEENCODING_OneStopBit,
  44:Caterina.c    ****                                            .ParityType  = CDC_PARITY_None,
  45:Caterina.c    ****                                            .DataBits    = 8                            };
  46:Caterina.c    **** 
  47:Caterina.c    **** /** Current address counter. This stores the current address of the FLASH or EEPROM as set by the h
  48:Caterina.c    ****  *  and is used when reading or writing to the AVRs memory (either FLASH or EEPROM depending on the
  49:Caterina.c    ****  *  command.)
  50:Caterina.c    ****  */
  51:Caterina.c    **** static uint32_t CurrAddress;
  52:Caterina.c    **** 
  53:Caterina.c    **** /** Flag to indicate if the bootloader should be running, or should exit and allow the application 
  54:Caterina.c    ****  *  via a watchdog reset. When cleared the bootloader will exit, starting the watchdog and entering
  55:Caterina.c    ****  *  loop until the AVR restarts and the application runs.
  56:Caterina.c    ****  */
  57:Caterina.c    **** static bool RunBootloader = true;
  58:Caterina.c    **** 
  59:Caterina.c    **** /* Pulse generation counters to keep track of the time remaining for each pulse type */
  60:Caterina.c    **** #define TX_RX_LED_PULSE_PERIOD 100
  61:Caterina.c    **** uint16_t TxLEDPulse = 0; // time remaining for Tx LED pulse
  62:Caterina.c    **** uint16_t RxLEDPulse = 0; // time remaining for Rx LED pulse
  63:Caterina.c    **** 
  64:Caterina.c    **** /* Bootloader timeout timer */
  65:Caterina.c    **** #define TIMEOUT_PERIOD	8000
  66:Caterina.c    **** uint16_t Timeout = 0;
  67:Caterina.c    **** 
  68:Caterina.c    **** uint16_t bootKey = 0x7777;
  69:Caterina.c    **** volatile uint16_t *const bootKeyPtr = (volatile uint16_t *)0x0800;
  70:Caterina.c    **** 
  71:Caterina.c    **** void StartSketch(void)
  72:Caterina.c    **** {
  73:Caterina.c    **** 	cli();
  74:Caterina.c    **** 	
  75:Caterina.c    **** 	/* Undo TIMER1 setup and clear the count before running the sketch */
  76:Caterina.c    **** 	TIMSK1 = 0;
  77:Caterina.c    **** 	TCCR1B = 0;
  78:Caterina.c    **** 	TCNT1H = 0;		// 16-bit write to TCNT1 requires high byte be written first
  79:Caterina.c    **** 	TCNT1L = 0;
  80:Caterina.c    **** 	
  81:Caterina.c    **** 	/* Relocate the interrupt vector table to the application section */
  82:Caterina.c    **** 	MCUCR = (1 << IVCE);
  83:Caterina.c    **** 	MCUCR = 0;
  84:Caterina.c    **** 
  85:Caterina.c    **** 	L_LED_OFF();
  86:Caterina.c    **** 	TX_LED_OFF();
  87:Caterina.c    **** 	RX_LED_OFF();
  88:Caterina.c    **** 
  89:Caterina.c    **** 	/* jump to beginning of application space */
  90:Caterina.c    **** 	__asm__ volatile("jmp 0x0000");
  91:Caterina.c    **** }
  92:Caterina.c    **** 
  93:Caterina.c    **** /*	Breathing animation on L LED indicates bootloader is running */
  94:Caterina.c    **** uint16_t LLEDPulse;
  95:Caterina.c    **** void LEDPulse(void)
  96:Caterina.c    **** {
  97:Caterina.c    **** 	LLEDPulse++;
  98:Caterina.c    **** 	uint8_t p = LLEDPulse >> 8;
  99:Caterina.c    **** 	if (p > 127)
 100:Caterina.c    **** 		p = 254-p;
 101:Caterina.c    **** 	p += p;
 102:Caterina.c    **** 	if (((uint8_t)LLEDPulse) > p)
 103:Caterina.c    **** 		L_LED_OFF();
 104:Caterina.c    **** 	else
 105:Caterina.c    **** 		L_LED_ON();
 106:Caterina.c    **** }
 107:Caterina.c    **** 
 108:Caterina.c    **** /** Main program entry point. This routine configures the hardware required by the bootloader, then
 109:Caterina.c    ****  *  runs the bootloader processing routine until it times out or is instructed to exit.
 110:Caterina.c    ****  */
 111:Caterina.c    **** int main(void)
 112:Caterina.c    **** {
 113:Caterina.c    **** 	/* Save the value of the boot key memory before it is overwritten */
 114:Caterina.c    **** 	uint16_t bootKeyPtrVal = *bootKeyPtr;
 115:Caterina.c    **** 	*bootKeyPtr = 0;
 116:Caterina.c    **** 
 117:Caterina.c    **** 	/* Check the reason for the reset so we can act accordingly */
 118:Caterina.c    **** 	uint8_t  mcusr_state = MCUSR;		// store the initial state of the Status register
 119:Caterina.c    **** 	MCUSR = 0;							// clear all reset flags	
 120:Caterina.c    **** 
 121:Caterina.c    **** 	/* Watchdog may be configured with a 15 ms period so must disable it before going any further */
 122:Caterina.c    **** 	wdt_disable();
 123:Caterina.c    **** 	
 124:Caterina.c    **** 	/* Setup hardware required for the bootloader */
 125:Caterina.c    **** 	SetupHardware();
 126:Caterina.c    **** 
 127:Caterina.c    **** 	/* Enable global interrupts so that the USB stack can function */
 128:Caterina.c    **** 	sei();
 129:Caterina.c    **** 	
 130:Caterina.c    **** 	Timeout = 0;
 131:Caterina.c    **** 	
 132:Caterina.c    **** 	while (RunBootloader)
 133:Caterina.c    **** 	{
 134:Caterina.c    **** 		CDC_Task();
 135:Caterina.c    **** 		USB_USBTask();
 136:Caterina.c    **** 		/* Time out and start the sketch if one is present */
 137:Caterina.c    **** 		if (Timeout > TIMEOUT_PERIOD)
 138:Caterina.c    **** 			RunBootloader = false;
 139:Caterina.c    **** 
 140:Caterina.c    **** 		LEDPulse();
 141:Caterina.c    **** 	}
 142:Caterina.c    **** 
 143:Caterina.c    **** 	/* Disconnect from the host - USB interface will be reset later along with the AVR */
 144:Caterina.c    **** 	USB_Detach();
 145:Caterina.c    **** 
 146:Caterina.c    **** 	/* Jump to beginning of application space to run the sketch - do not reset */	
 147:Caterina.c    **** 	StartSketch();
 148:Caterina.c    **** }
 149:Caterina.c    **** 
 150:Caterina.c    **** /** Configures all hardware required for the bootloader. */
 151:Caterina.c    **** void SetupHardware(void)
 152:Caterina.c    **** {
 153:Caterina.c    **** 	/* Disable watchdog if enabled by bootloader/fuses */
 154:Caterina.c    **** 	MCUSR &= ~(1 << WDRF);
 155:Caterina.c    **** 	wdt_disable();
 156:Caterina.c    **** 
 157:Caterina.c    **** 	/* Disable clock division */
 158:Caterina.c    **** 	clock_prescale_set(clock_div_1);
 159:Caterina.c    **** 
 160:Caterina.c    **** 	/* Relocate the interrupt vector table to the bootloader section */
 161:Caterina.c    **** 	MCUCR = (1 << IVCE);
 162:Caterina.c    **** 	MCUCR = (1 << IVSEL);
 163:Caterina.c    **** 	
 164:Caterina.c    **** 	LED_SETUP();
 165:Caterina.c    **** 	CPU_PRESCALE(0); 
 166:Caterina.c    **** 	L_LED_OFF();
 167:Caterina.c    **** 	TX_LED_OFF();
 168:Caterina.c    **** 	RX_LED_OFF();
 169:Caterina.c    **** 	
 170:Caterina.c    **** 	/* Initialize TIMER1 to handle bootloader timeout and LED tasks.  
 171:Caterina.c    **** 	 * With 16 MHz clock and 1/64 prescaler, timer 1 is clocked at 250 kHz
 172:Caterina.c    **** 	 * Our chosen compare match generates an interrupt every 1 ms.
 173:Caterina.c    **** 	 * This interrupt is disabled selectively when doing memory reading, erasing,
 174:Caterina.c    **** 	 * or writing since SPM has tight timing requirements.
 175:Caterina.c    **** 	 */ 
 176:Caterina.c    **** 	OCR1AH = 0;
 177:Caterina.c    **** 	OCR1AL = 250;
 178:Caterina.c    **** 	TIMSK1 = (1 << OCIE1A);					// enable timer 1 output compare A match interrupt
 179:Caterina.c    **** 	TCCR1B = ((1 << CS11) | (1 << CS10));	// 1/64 prescaler on timer 1 input
 180:Caterina.c    **** 
 181:Caterina.c    **** 	/* Initialize USB Subsystem */
 182:Caterina.c    **** 	USB_Init();
 183:Caterina.c    **** }
 184:Caterina.c    **** 
 185:Caterina.c    **** //uint16_t ctr = 0;
 186:Caterina.c    **** ISR(TIMER1_COMPA_vect, ISR_BLOCK)
 187:Caterina.c    **** {
 188:Caterina.c    **** 	/* Reset counter */
 189:Caterina.c    **** 	TCNT1H = 0;
 190:Caterina.c    **** 	TCNT1L = 0;
 191:Caterina.c    **** 
 192:Caterina.c    **** 	/* Check whether the TX or RX LED one-shot period has elapsed.  if so, turn off the LED */
 193:Caterina.c    **** 	if (TxLEDPulse && !(--TxLEDPulse))
 194:Caterina.c    **** 		TX_LED_OFF();
 195:Caterina.c    **** 	if (RxLEDPulse && !(--RxLEDPulse))
 196:Caterina.c    **** 		RX_LED_OFF();
 197:Caterina.c    **** 	
 198:Caterina.c    **** 	if (pgm_read_word(0) != 0xFFFF)
 199:Caterina.c    **** 		Timeout++;
 200:Caterina.c    **** }
 201:Caterina.c    **** 
 202:Caterina.c    **** /** Event handler for the USB_ConfigurationChanged event. This configures the device's endpoints re
 203:Caterina.c    ****  *  to relay data to and from the attached USB host.
 204:Caterina.c    ****  */
 205:Caterina.c    **** void EVENT_USB_Device_ConfigurationChanged(void)
 206:Caterina.c    **** {
 207:Caterina.c    **** 	/* Setup CDC Notification, Rx and Tx Endpoints */
 208:Caterina.c    **** 	Endpoint_ConfigureEndpoint(CDC_NOTIFICATION_EPNUM, EP_TYPE_INTERRUPT,
 209:Caterina.c    **** 	                           ENDPOINT_DIR_IN, CDC_NOTIFICATION_EPSIZE,
 210:Caterina.c    **** 	                           ENDPOINT_BANK_SINGLE);
 211:Caterina.c    **** 
 212:Caterina.c    **** 	Endpoint_ConfigureEndpoint(CDC_TX_EPNUM, EP_TYPE_BULK,
 213:Caterina.c    **** 	                           ENDPOINT_DIR_IN, CDC_TXRX_EPSIZE,
 214:Caterina.c    **** 	                           ENDPOINT_BANK_SINGLE);
 215:Caterina.c    **** 
 216:Caterina.c    **** 	Endpoint_ConfigureEndpoint(CDC_RX_EPNUM, EP_TYPE_BULK,
 217:Caterina.c    **** 	                           ENDPOINT_DIR_OUT, CDC_TXRX_EPSIZE,
 218:Caterina.c    **** 	                           ENDPOINT_BANK_SINGLE);
 219:Caterina.c    **** }
 220:Caterina.c    **** 
 221:Caterina.c    **** /** Event handler for the USB_ControlRequest event. This is used to catch and process control reque
 222:Caterina.c    ****  *  the device from the USB host before passing along unhandled control requests to the library for
 223:Caterina.c    ****  *  internally.
 224:Caterina.c    ****  */
 225:Caterina.c    **** void EVENT_USB_Device_ControlRequest(void)
 226:Caterina.c    **** {
 227:Caterina.c    **** 	/* Ignore any requests that aren't directed to the CDC interface */
 228:Caterina.c    **** 	if ((USB_ControlRequest.bmRequestType & (CONTROL_REQTYPE_TYPE | CONTROL_REQTYPE_RECIPIENT)) !=
 229:Caterina.c    **** 	    (REQTYPE_CLASS | REQREC_INTERFACE))
 230:Caterina.c    **** 	{
 231:Caterina.c    **** 		return;
 232:Caterina.c    **** 	}
 233:Caterina.c    **** 
 234:Caterina.c    **** 	/* Process CDC specific control requests */
 235:Caterina.c    **** 	switch (USB_ControlRequest.bRequest)
 236:Caterina.c    **** 	{
 237:Caterina.c    **** 		case CDC_REQ_GetLineEncoding:
 238:Caterina.c    **** 			if (USB_ControlRequest.bmRequestType == (REQDIR_DEVICETOHOST | REQTYPE_CLASS | REQREC_INTERFACE)
 239:Caterina.c    **** 			{
 240:Caterina.c    **** 				Endpoint_ClearSETUP();
 241:Caterina.c    **** 
 242:Caterina.c    **** 				/* Write the line coding data to the control endpoint */
 243:Caterina.c    **** 				Endpoint_Write_Control_Stream_LE(&LineEncoding, sizeof(CDC_LineEncoding_t));
 244:Caterina.c    **** 				Endpoint_ClearOUT();
 245:Caterina.c    **** 			}
 246:Caterina.c    **** 
 247:Caterina.c    **** 			break;
 248:Caterina.c    **** 		case CDC_REQ_SetLineEncoding:
 249:Caterina.c    **** 			if (USB_ControlRequest.bmRequestType == (REQDIR_HOSTTODEVICE | REQTYPE_CLASS | REQREC_INTERFACE)
 250:Caterina.c    **** 			{
 251:Caterina.c    **** 				Endpoint_ClearSETUP();
 252:Caterina.c    **** 
 253:Caterina.c    **** 				/* Read the line coding data in from the host into the global struct */
 254:Caterina.c    **** 				Endpoint_Read_Control_Stream_LE(&LineEncoding, sizeof(CDC_LineEncoding_t));
 255:Caterina.c    **** 				Endpoint_ClearIN();
 256:Caterina.c    **** 			}
 257:Caterina.c    **** 
 258:Caterina.c    **** 			break;
 259:Caterina.c    **** 	}
 260:Caterina.c    **** }
 261:Caterina.c    **** 
 262:Caterina.c    **** #if !defined(NO_BLOCK_SUPPORT)
 263:Caterina.c    **** /** Reads or writes a block of EEPROM or FLASH memory to or from the appropriate CDC data endpoint,
 264:Caterina.c    ****  *  on the AVR910 protocol command issued.
 265:Caterina.c    ****  *
 266:Caterina.c    ****  *  \param[in] Command  Single character AVR910 protocol command indicating what memory operation t
 267:Caterina.c    ****  */
 268:Caterina.c    **** static void ReadWriteMemoryBlock(const uint8_t Command)
 269:Caterina.c    **** {
 270:Caterina.c    **** 	uint16_t BlockSize;
 271:Caterina.c    **** 	char     MemoryType;
 272:Caterina.c    **** 
 273:Caterina.c    **** 	bool     HighByte = false;
 274:Caterina.c    **** 	uint8_t  LowByte  = 0;
 275:Caterina.c    **** 
 276:Caterina.c    **** 	BlockSize  = (FetchNextCommandByte() << 8);
 277:Caterina.c    **** 	BlockSize |=  FetchNextCommandByte();
 278:Caterina.c    **** 
 279:Caterina.c    **** 	MemoryType =  FetchNextCommandByte();
 280:Caterina.c    **** 
 281:Caterina.c    **** 	if ((MemoryType != 'E') && (MemoryType != 'F'))
 282:Caterina.c    **** 	{
 283:Caterina.c    **** 		/* Send error byte back to the host */
 284:Caterina.c    **** 		WriteNextResponseByte('?');
 285:Caterina.c    **** 
 286:Caterina.c    **** 		return;
 287:Caterina.c    **** 	}
 288:Caterina.c    **** 
 289:Caterina.c    **** 	/* Disable timer 1 interrupt - can't afford to process nonessential interrupts
 290:Caterina.c    **** 	 * while doing SPM tasks */
 291:Caterina.c    **** 	TIMSK1 = 0;
 292:Caterina.c    **** 
 293:Caterina.c    **** 	/* Check if command is to read memory */
 294:Caterina.c    **** 	if (Command == 'g')
 295:Caterina.c    **** 	{		
 296:Caterina.c    **** 		/* Re-enable RWW section */
 297:Caterina.c    **** 		boot_rww_enable();
 298:Caterina.c    **** 
 299:Caterina.c    **** 		while (BlockSize--)
 300:Caterina.c    **** 		{
 301:Caterina.c    **** 			if (MemoryType == 'F')
 302:Caterina.c    **** 			{
 303:Caterina.c    **** 				/* Read the next FLASH byte from the current FLASH page */
 304:Caterina.c    **** 				#if (FLASHEND > 0xFFFF)
 305:Caterina.c    **** 				WriteNextResponseByte(pgm_read_byte_far(CurrAddress | HighByte));
 306:Caterina.c    **** 				#else
 307:Caterina.c    **** 				WriteNextResponseByte(pgm_read_byte(CurrAddress | HighByte));
 308:Caterina.c    **** 				#endif
 309:Caterina.c    **** 
 310:Caterina.c    **** 				/* If both bytes in current word have been read, increment the address counter */
 311:Caterina.c    **** 				if (HighByte)
 312:Caterina.c    **** 				  CurrAddress += 2;
 313:Caterina.c    **** 
 314:Caterina.c    **** 				HighByte = !HighByte;
 315:Caterina.c    **** 			}
 316:Caterina.c    **** 			else
 317:Caterina.c    **** 			{
 318:Caterina.c    **** 				/* Read the next EEPROM byte into the endpoint */
 319:Caterina.c    **** 				WriteNextResponseByte(eeprom_read_byte((uint8_t*)(intptr_t)(CurrAddress >> 1)));
 320:Caterina.c    **** 
 321:Caterina.c    **** 				/* Increment the address counter after use */
 322:Caterina.c    **** 				CurrAddress += 2;
 323:Caterina.c    **** 			}
 324:Caterina.c    **** 		}
 325:Caterina.c    **** 	}
 326:Caterina.c    **** 	else
 327:Caterina.c    **** 	{
 328:Caterina.c    **** 		uint32_t PageStartAddress = CurrAddress;
 329:Caterina.c    **** 
 330:Caterina.c    **** 		if (MemoryType == 'F')
 331:Caterina.c    **** 		{
 332:Caterina.c    **** 			boot_page_erase(PageStartAddress);
 333:Caterina.c    **** 			boot_spm_busy_wait();
 334:Caterina.c    **** 		}
 335:Caterina.c    **** 
 336:Caterina.c    **** 		while (BlockSize--)
 337:Caterina.c    **** 		{
 338:Caterina.c    **** 			if (MemoryType == 'F')
 339:Caterina.c    **** 			{
 340:Caterina.c    **** 				/* If both bytes in current word have been written, increment the address counter */
 341:Caterina.c    **** 				if (HighByte)
 342:Caterina.c    **** 				{
 343:Caterina.c    **** 					/* Write the next FLASH word to the current FLASH page */
 344:Caterina.c    **** 					boot_page_fill(CurrAddress, ((FetchNextCommandByte() << 8) | LowByte));
 345:Caterina.c    **** 
 346:Caterina.c    **** 					/* Increment the address counter after use */
 347:Caterina.c    **** 					CurrAddress += 2;
 348:Caterina.c    **** 				}
 349:Caterina.c    **** 				else
 350:Caterina.c    **** 				{
 351:Caterina.c    **** 					LowByte = FetchNextCommandByte();
 352:Caterina.c    **** 				}
 353:Caterina.c    **** 				
 354:Caterina.c    **** 				HighByte = !HighByte;
 355:Caterina.c    **** 			}
 356:Caterina.c    **** 			else
 357:Caterina.c    **** 			{
 358:Caterina.c    **** 				/* Write the next EEPROM byte from the endpoint */
 359:Caterina.c    **** 				eeprom_write_byte((uint8_t*)((intptr_t)(CurrAddress >> 1)), FetchNextCommandByte());
 360:Caterina.c    **** 
 361:Caterina.c    **** 				/* Increment the address counter after use */
 362:Caterina.c    **** 				CurrAddress += 2;
 363:Caterina.c    **** 			}
 364:Caterina.c    **** 		}
 365:Caterina.c    **** 
 366:Caterina.c    **** 		/* If in FLASH programming mode, commit the page after writing */
 367:Caterina.c    **** 		if (MemoryType == 'F')
 368:Caterina.c    **** 		{
 369:Caterina.c    **** 			/* Commit the flash page to memory */
 370:Caterina.c    **** 			boot_page_write(PageStartAddress);
 371:Caterina.c    **** 
 372:Caterina.c    **** 			/* Wait until write operation has completed */
 373:Caterina.c    **** 			boot_spm_busy_wait();
 374:Caterina.c    **** 		}
 375:Caterina.c    **** 
 376:Caterina.c    **** 		/* Send response byte back to the host */
 377:Caterina.c    **** 		WriteNextResponseByte('\r');
 378:Caterina.c    **** 	}
 379:Caterina.c    **** 
 380:Caterina.c    **** 	/* Re-enable timer 1 interrupt disabled earlier in this routine */	
 381:Caterina.c    **** 	TIMSK1 = (1 << OCIE1A);
 382:Caterina.c    **** }
 383:Caterina.c    **** #endif
 384:Caterina.c    **** 
 385:Caterina.c    **** /** Retrieves the next byte from the host in the CDC data OUT endpoint, and clears the endpoint ban
 386:Caterina.c    ****  *  to allow reception of the next data packet from the host.
 387:Caterina.c    ****  *
 388:Caterina.c    ****  *  \return Next received byte from the host in the CDC data OUT endpoint
 389:Caterina.c    ****  */
 390:Caterina.c    **** static uint8_t FetchNextCommandByte(void)
 391:Caterina.c    **** {
  15               		.loc 1 391 0
  16               		.cfi_startproc
  17               	/* prologue: function */
  18               	/* frame size = 0 */
  19               	/* stack size = 0 */
  20               	.L__stack_usage = 0
  21               	.LVL0:
  22               	.LBB76:
  23               	.LBB77:
  24               		.file 2 "./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h"
   1:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** /*
   2:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****              LUFA Library
   3:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****      Copyright (C) Dean Camera, 2011.
   4:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
   5:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****   dean [at] fourwalledcubicle [dot] com
   6:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****            www.lufa-lib.org
   7:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** */
   8:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
   9:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** /*
  10:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****   Copyright 2011  Dean Camera (dean [at] fourwalledcubicle [dot] com)
  11:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
  12:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****   Permission to use, copy, modify, distribute, and sell this
  13:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****   software and its documentation for any purpose is hereby granted
  14:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****   without fee, provided that the above copyright notice appear in
  15:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****   all copies and that both that the copyright notice and this
  16:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****   permission notice and warranty disclaimer appear in supporting
  17:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****   documentation, and that the name of the author not be used in
  18:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****   advertising or publicity pertaining to distribution of the
  19:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****   software without specific, written prior permission.
  20:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
  21:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****   The author disclaim all warranties with regard to this
  22:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****   software, including all implied warranties of merchantability
  23:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****   and fitness.  In no event shall the author be liable for any
  24:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****   special, indirect or consequential damages or any damages
  25:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****   whatsoever resulting from loss of use, data or profits, whether
  26:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****   in an action of contract, negligence or other tortious action,
  27:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****   arising out of or in connection with the use or performance of
  28:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****   this software.
  29:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** */
  30:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
  31:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** /** \file
  32:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  \brief USB Endpoint definitions for the AVR8 microcontrollers.
  33:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  \copydetails Group_EndpointManagement_AVR8
  34:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *
  35:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  \note This file should not be included directly. It is automatically included as needed by the 
  36:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *        dispatch header located in LUFA/Drivers/USB/USB.h.
  37:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  */
  38:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
  39:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** /** \ingroup Group_EndpointRW
  40:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  \defgroup Group_EndpointRW_AVR8 Endpoint Data Reading and Writing (AVR8)
  41:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  \brief Endpoint data read/write definitions for the Atmel AVR8 architecture.
  42:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *
  43:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  Functions, macros, variables, enums and types related to data reading and writing from and to e
  44:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  */
  45:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
  46:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** /** \ingroup Group_EndpointPrimitiveRW
  47:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  \defgroup Group_EndpointPrimitiveRW_AVR8 Read/Write of Primitive Data Types (AVR8)
  48:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  \brief Endpoint primitive read/write definitions for the Atmel AVR8 architecture.
  49:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *
  50:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  Functions, macros, variables, enums and types related to data reading and writing of primitive 
  51:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  from and to endpoints.
  52:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  */
  53:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
  54:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** /** \ingroup Group_EndpointPacketManagement
  55:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  \defgroup Group_EndpointPacketManagement_AVR8 Endpoint Packet Management (AVR8)
  56:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  \brief Endpoint packet management definitions for the Atmel AVR8 architecture.
  57:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *
  58:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  Functions, macros, variables, enums and types related to packet management of endpoints.
  59:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  */
  60:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
  61:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** /** \ingroup Group_EndpointManagement
  62:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  \defgroup Group_EndpointManagement_AVR8 Endpoint Management (AVR8)
  63:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  \brief Endpoint management definitions for the Atmel AVR8 architecture.
  64:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *
  65:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  Functions, macros and enums related to endpoint management when in USB Device mode. This
  66:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  module contains the endpoint management macros, as well as endpoint interrupt and data
  67:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  send/receive functions for various data types.
  68:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *
  69:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  @{
  70:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  */
  71:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
  72:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** #ifndef __ENDPOINT_AVR8_H__
  73:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** #define __ENDPOINT_AVR8_H__
  74:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
  75:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 	/* Includes: */
  76:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 		#include "../../../../Common/Common.h"
  77:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 		#include "../USBTask.h"
  78:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 		#include "../USBInterrupt.h"
  79:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
  80:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 	/* Enable C linkage for C++ Compilers: */
  81:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 		#if defined(__cplusplus)
  82:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			extern "C" {
  83:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 		#endif
  84:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
  85:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 	/* Preprocessor Checks: */
  86:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 		#if !defined(__INCLUDE_FROM_USB_DRIVER)
  87:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			#error Do not include this file directly. Include LUFA/Drivers/USB/USB.h instead.
  88:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 		#endif
  89:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
  90:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 	/* Private Interface - For use in library only: */
  91:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 	#if !defined(__DOXYGEN__)
  92:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 		/* Macros: */
  93:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			#define _ENDPOINT_GET_MAXSIZE(EPIndex)         _ENDPOINT_GET_MAXSIZE2(ENDPOINT_DETAILS_EP ## EPI
  94:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			#define _ENDPOINT_GET_MAXSIZE2(EPDetails)      _ENDPOINT_GET_MAXSIZE3(EPDetails)
  95:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			#define _ENDPOINT_GET_MAXSIZE3(MaxSize, Banks) (MaxSize)
  96:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
  97:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			#define _ENDPOINT_GET_BANKS(EPIndex)           _ENDPOINT_GET_BANKS2(ENDPOINT_DETAILS_EP ## EPInd
  98:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			#define _ENDPOINT_GET_BANKS2(EPDetails)        _ENDPOINT_GET_BANKS3(EPDetails)
  99:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			#define _ENDPOINT_GET_BANKS3(MaxSize, Banks)   (Banks)
 100:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 101:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			#if defined(USB_SERIES_4_AVR) || defined(USB_SERIES_6_AVR) || defined(USB_SERIES_7_AVR)
 102:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#define ENDPOINT_DETAILS_MAXEP             7
 103:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 104:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#define ENDPOINT_DETAILS_EP0               64,  1
 105:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#define ENDPOINT_DETAILS_EP1               256, 2
 106:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#define ENDPOINT_DETAILS_EP2               64,  2
 107:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#define ENDPOINT_DETAILS_EP3               64,  2
 108:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#define ENDPOINT_DETAILS_EP4               64,  2
 109:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#define ENDPOINT_DETAILS_EP5               64,  2
 110:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#define ENDPOINT_DETAILS_EP6               64,  2
 111:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			#else
 112:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#define ENDPOINT_DETAILS_MAXEP             5
 113:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 114:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#define ENDPOINT_DETAILS_EP0               64,  1
 115:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#define ENDPOINT_DETAILS_EP1               64,  1
 116:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#define ENDPOINT_DETAILS_EP2               64,  1
 117:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#define ENDPOINT_DETAILS_EP3               64,  2
 118:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#define ENDPOINT_DETAILS_EP4               64,  2
 119:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			#endif
 120:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 121:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 		/* Inline Functions: */
 122:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline uint8_t Endpoint_BytesToEPSizeMask(const uint16_t Bytes) ATTR_WARN_UNUSED_RESULT A
 123:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			                                                                       ATTR_ALWAYS_INLINE;
 124:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline uint8_t Endpoint_BytesToEPSizeMask(const uint16_t Bytes)
 125:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 126:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				uint8_t  MaskVal    = 0;
 127:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				uint16_t CheckBytes = 8;
 128:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 129:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				while (CheckBytes < Bytes)
 130:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				{
 131:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					MaskVal++;
 132:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					CheckBytes <<= 1;
 133:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				}
 134:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 135:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return (MaskVal << EPSIZE0);
 136:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 137:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 138:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 		/* Function Prototypes: */
 139:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			void Endpoint_ClearEndpoints(void);
 140:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			bool Endpoint_ConfigureEndpoint_Prv(const uint8_t Number,
 141:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			                                    const uint8_t UECFG0XData,
 142:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			                                    const uint8_t UECFG1XData);
 143:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 144:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 	#endif
 145:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 146:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 	/* Public Interface - May be used in end-application: */
 147:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 		/* Macros: */			
 148:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** \name Endpoint Bank Mode Masks */
 149:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			//@{
 150:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Mask for the bank mode selection for the \ref Endpoint_ConfigureEndpoint() macro. This indic
 151:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  that the endpoint should have one single bank, which requires less USB FIFO memory but resul
 152:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  in slower transfers as only one USB device (the AVR or the host) can access the endpoint's
 153:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  bank at the one time.
 154:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 155:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			#define ENDPOINT_BANK_SINGLE                    (0 << EPBK0)
 156:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 157:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Mask for the bank mode selection for the \ref Endpoint_ConfigureEndpoint() macro. This indic
 158:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  that the endpoint should have two banks, which requires more USB FIFO memory but results
 159:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  in faster transfers as one USB device (the AVR or the host) can access one bank while the ot
 160:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  accesses the second bank.
 161:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 162:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			#define ENDPOINT_BANK_DOUBLE                    (1 << EPBK0)
 163:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			//@}
 164:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 165:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			#if (!defined(FIXED_CONTROL_ENDPOINT_SIZE) || defined(__DOXYGEN__))
 166:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				/** Default size of the default control endpoint's bank, until altered by the control endpoint 
 167:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				 *  value in the device descriptor. Not available if the \c FIXED_CONTROL_ENDPOINT_SIZE token i
 168:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				 */
 169:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#define ENDPOINT_CONTROLEP_DEFAULT_SIZE     8
 170:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			#endif
 171:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 172:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Retrieves the maximum bank size in bytes of a given endpoint.
 173:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 174:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \note This macro will only work correctly on endpoint indexes that are compile-time constant
 175:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *        defined by the preprocessor.
 176:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 177:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \param[in] EPIndex  Endpoint number, a value between 0 and (\ref ENDPOINT_TOTAL_ENDPOINTS - 
 178:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 179:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			#define ENDPOINT_MAX_SIZE(EPIndex)              _ENDPOINT_GET_MAXSIZE(EPIndex)
 180:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 181:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Retrieves the total number of banks supported by the given endpoint.
 182:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 183:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \note This macro will only work correctly on endpoint indexes that are compile-time constant
 184:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *        defined by the preprocessor.
 185:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 186:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \param[in] EPIndex  Endpoint number, a value between 0 and (\ref ENDPOINT_TOTAL_ENDPOINTS - 
 187:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 188:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			#define ENDPOINT_BANKS_SUPPORTED(EPIndex)       _ENDPOINT_GET_BANKS(EPIndex)
 189:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 190:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			#if !defined(CONTROL_ONLY_DEVICE) || defined(__DOXYGEN__)
 191:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				/** Total number of endpoints (including the default control endpoint at address 0) which may
 192:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				 *  be used in the device. Different USB AVR models support different amounts of endpoints,
 193:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				 *  this value reflects the maximum number of endpoints for the currently selected AVR model.
 194:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				 */
 195:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#define ENDPOINT_TOTAL_ENDPOINTS            ENDPOINT_DETAILS_MAXEP
 196:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			#else
 197:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#define ENDPOINT_TOTAL_ENDPOINTS            1
 198:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			#endif
 199:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 200:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 		/* Enums: */
 201:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Enum for the possible error return codes of the \ref Endpoint_WaitUntilReady() function.
 202:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 203:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointRW_AVR8
 204:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 205:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			enum Endpoint_WaitUntilReady_ErrorCodes_t
 206:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 207:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				ENDPOINT_READYWAIT_NoError                 = 0, /**< Endpoint is ready for next packet, no erro
 208:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				ENDPOINT_READYWAIT_EndpointStalled         = 1, /**< The endpoint was stalled during the stream
 209:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				                                                 *   transfer by the host or device.
 210:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				                                                 */
 211:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				ENDPOINT_READYWAIT_DeviceDisconnected      = 2,	/**< Device was disconnected from the host whil
 212:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				                                                 *   waiting for the endpoint to become ready.
 213:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				                                                 */
 214:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				ENDPOINT_READYWAIT_BusSuspended            = 3, /**< The USB bus has been suspended by the host
 215:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				                                                 *   no USB endpoint traffic can occur until th
 216:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				                                                 *   has resumed.
 217:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				                                                 */
 218:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				ENDPOINT_READYWAIT_Timeout                 = 4, /**< The host failed to accept or send the next
 219:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				                                                 *   within the software timeout period set by 
 220:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				                                                 *   \ref USB_STREAM_TIMEOUT_MS macro.
 221:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				                                                 */
 222:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			};
 223:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 224:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 		/* Inline Functions: */
 225:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Configures the specified endpoint number with the given endpoint type, direction, bank size
 226:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  and banking mode. Once configured, the endpoint may be read from or written to, depending
 227:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  on its direction.
 228:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 229:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \param[in] Number     Endpoint number to configure. This must be more than 0 and less than
 230:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *                        \ref ENDPOINT_TOTAL_ENDPOINTS.
 231:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 232:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \param[in] Type       Type of endpoint to configure, a \c EP_TYPE_* mask. Not all endpoint t
 233:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *                        are available on Low Speed USB devices - refer to the USB 2.0 specific
 234:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 235:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \param[in] Direction  Endpoint data direction, either \ref ENDPOINT_DIR_OUT or \ref ENDPOINT
 236:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *                        All endpoints (except Control type) are unidirectional - data may only
 237:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *                        from or written to the endpoint bank based on its direction, not both.
 238:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 239:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \param[in] Size       Size of the endpoint's bank, where packets are stored before they are 
 240:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *                        to the USB host, or after they have been received from the USB host (d
 241:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *                        the endpoint's data direction). The bank size must indicate the maximu
 242:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *                        that the endpoint can handle.
 243:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 244:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \param[in] Banks      Number of banks to use for the endpoint being configured, an \c ENDPOI
 245:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *                        More banks uses more USB DPRAM, but offers better performance. Isochro
 246:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *                        endpoints <b>must</b> have at least two banks.
 247:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 248:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \note When the \c ORDERED_EP_CONFIG compile time option is used, Endpoints <b>must</b> be co
 249:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *        ascending order, or bank corruption will occur.
 250:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *        \n\n
 251:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 252:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \note Different endpoints may have different maximum packet sizes based on the endpoint's in
 253:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *        the chosen microcontroller model's datasheet to determine the maximum bank size for ea
 254:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *        \n\n
 255:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 256:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \note The default control endpoint should not be manually configured by the user application
 257:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *        it is automatically configured by the library internally.
 258:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *        \n\n
 259:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 260:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \note This routine will automatically select the specified endpoint upon success. Upon failu
 261:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *        which failed to reconfigure correctly will be selected.
 262:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 263:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \return Boolean \c true if the configuration succeeded, \c false otherwise.
 264:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 265:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_ConfigureEndpoint(const uint8_t Number,
 266:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			                                              const uint8_t Type,
 267:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			                                              const uint8_t Direction,
 268:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			                                              const uint16_t Size,
 269:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			                                              const uint8_t Banks) ATTR_ALWAYS_INLINE;
 270:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_ConfigureEndpoint(const uint8_t Number,
 271:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			                                              const uint8_t Type,
 272:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			                                              const uint8_t Direction,
 273:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			                                              const uint16_t Size,
 274:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			                                              const uint8_t Banks)
 275:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 276:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return Endpoint_ConfigureEndpoint_Prv(Number, ((Type << EPTYPE0) | (Direction ? (1 << EPDIR) : 
 277:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				                                      ((1 << ALLOC) | Banks | Endpoint_BytesToEPSizeMask(Size))
 278:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 279:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 280:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Indicates the number of bytes currently stored in the current endpoint's selected bank.
 281:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 282:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \note The return width of this function may differ, depending on the maximum endpoint bank s
 283:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *        of the selected AVR model.
 284:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 285:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointRW_AVR8
 286:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 287:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \return Total number of bytes in the currently selected Endpoint's FIFO buffer.
 288:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 289:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline uint16_t Endpoint_BytesInEndpoint(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE
 290:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline uint16_t Endpoint_BytesInEndpoint(void)
 291:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 292:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#if defined(USB_SERIES_6_AVR) || defined(USB_SERIES_7_AVR)
 293:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					return UEBCX;
 294:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#elif defined(USB_SERIES_4_AVR)
 295:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					return (((uint16_t)UEBCHX << 8) | UEBCLX);
 296:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#elif defined(USB_SERIES_2_AVR)
 297:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					return UEBCLX;
 298:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#endif
 299:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 300:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 301:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Get the endpoint address of the currently selected endpoint. This is typically used to save
 302:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  the currently selected endpoint number so that it can be restored after another endpoint has
 303:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  been manipulated.
 304:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 305:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \return Index of the currently selected endpoint.
 306:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 307:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline uint8_t Endpoint_GetCurrentEndpoint(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLI
 308:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline uint8_t Endpoint_GetCurrentEndpoint(void)
 309:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 310:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#if !defined(CONTROL_ONLY_DEVICE)
 311:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					return (UENUM & ENDPOINT_EPNUM_MASK);
 312:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#else
 313:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					return ENDPOINT_CONTROLEP;
 314:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#endif
 315:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 316:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 317:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Selects the given endpoint number. If the address from the device descriptors is used, the
 318:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  value should be masked with the \ref ENDPOINT_EPNUM_MASK constant to extract only the endpoi
 319:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  number (and discarding the endpoint direction bit).
 320:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 321:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  Any endpoint operations which do not require the endpoint number to be indicated will operat
 322:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  the currently selected endpoint.
 323:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 324:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \param[in] EndpointNumber Endpoint number to select.
 325:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 326:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_SelectEndpoint(const uint8_t EndpointNumber) ATTR_ALWAYS_INLINE;
 327:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_SelectEndpoint(const uint8_t EndpointNumber)
 328:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 329:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#if !defined(CONTROL_ONLY_DEVICE)
 330:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					UENUM = EndpointNumber;
  25               		.loc 2 330 0
  26 0000 84E0      		ldi r24,lo8(4)
  27 0002 8093 E900 		sts 233,r24
  28 0006 00C0      		rjmp .L2
  29               	.L6:
  30               	.LBE77:
  31               	.LBE76:
  32               	.LBB78:
  33               	.LBB79:
 331:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#endif
 332:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 333:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 334:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Resets the endpoint bank FIFO. This clears all the endpoint banks and resets the USB control
 335:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  data In and Out pointers to the bank's contents.
 336:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 337:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \param[in] EndpointNumber Endpoint number whose FIFO buffers are to be reset.
 338:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 339:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_ResetEndpoint(const uint8_t EndpointNumber) ATTR_ALWAYS_INLINE;
 340:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_ResetEndpoint(const uint8_t EndpointNumber)
 341:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 342:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				UERST = (1 << EndpointNumber);
 343:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				UERST = 0;
 344:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 345:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 346:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Enables the currently selected endpoint so that data can be sent and received through it to
 347:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  and from a host.
 348:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 349:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \note Endpoints must first be configured properly via \ref Endpoint_ConfigureEndpoint().
 350:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 351:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_EnableEndpoint(void) ATTR_ALWAYS_INLINE;
 352:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_EnableEndpoint(void)
 353:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 354:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				UECONX |= (1 << EPEN);
 355:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 356:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 357:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Disables the currently selected endpoint so that data cannot be sent and received through it
 358:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  to and from a host.
 359:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 360:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_DisableEndpoint(void) ATTR_ALWAYS_INLINE;
 361:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_DisableEndpoint(void)
 362:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 363:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				UECONX &= ~(1 << EPEN);
 364:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 365:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 366:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Determines if the currently selected endpoint is enabled, but not necessarily configured.
 367:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 368:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 * \return Boolean \c true if the currently selected endpoint is enabled, \c false otherwise.
 369:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 370:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_IsEnabled(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
 371:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_IsEnabled(void)
 372:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 373:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return ((UECONX & (1 << EPEN)) ? true : false);
 374:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 375:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 376:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Retrieves the number of busy banks in the currently selected endpoint, which have been queue
 377:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  transmission via the \ref Endpoint_ClearIN() command, or are awaiting acknowledgement via th
 378:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ref Endpoint_ClearOUT() command.
 379:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 380:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointPacketManagement_AVR8
 381:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 382:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \return Total number of busy banks in the selected endpoint.
 383:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 384:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline uint8_t Endpoint_GetBusyBanks(void) ATTR_ALWAYS_INLINE ATTR_WARN_UNUSED_RESULT;
 385:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline uint8_t Endpoint_GetBusyBanks(void)
 386:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 387:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return (UESTA0X & (0x03 << NBUSYBK0));
 388:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 389:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 390:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Aborts all pending IN transactions on the currently selected endpoint, once the bank
 391:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  has been queued for transmission to the host via \ref Endpoint_ClearIN(). This function
 392:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  will terminate all queued transactions, resetting the endpoint banks ready for a new
 393:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  packet.
 394:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 395:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointPacketManagement_AVR8
 396:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 397:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_AbortPendingIN(void)
 398:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 399:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				while (Endpoint_GetBusyBanks() != 0)
 400:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				{
 401:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					UEINTX |= (1 << RXOUTI);
 402:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					while (UEINTX & (1 << RXOUTI));
 403:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				}
 404:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 405:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 406:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Determines if the currently selected endpoint may be read from (if data is waiting in the en
 407:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  bank and the endpoint is an OUT direction, or if the bank is not yet full if the endpoint is
 408:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  direction). This function will return false if an error has occurred in the endpoint, if the
 409:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  is an OUT direction and no packet (or an empty packet) has been received, or if the endpoint
 410:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  direction and the endpoint bank is full.
 411:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 412:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointPacketManagement_AVR8
 413:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 414:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \return Boolean \c true if the currently selected endpoint may be read from or written to, d
 415:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *          on its direction.
 416:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 417:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_IsReadWriteAllowed(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
 418:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_IsReadWriteAllowed(void)
 419:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 420:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return ((UEINTX & (1 << RWAL)) ? true : false);
 421:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 422:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 423:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Determines if the currently selected endpoint is configured.
 424:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 425:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \return Boolean \c true if the currently selected endpoint has been configured, \c false oth
 426:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 427:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_IsConfigured(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
 428:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_IsConfigured(void)
 429:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 430:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return ((UESTA0X & (1 << CFGOK)) ? true : false);
 431:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 432:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 433:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Returns a mask indicating which INTERRUPT type endpoints have interrupted - i.e. their
 434:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  interrupt duration has elapsed. Which endpoints have interrupted can be determined by
 435:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  masking the return value against <tt>(1 << <i>{Endpoint Number}</i>)</tt>.
 436:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 437:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \return Mask whose bits indicate which endpoints have interrupted.
 438:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 439:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline uint8_t Endpoint_GetEndpointInterrupts(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_I
 440:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline uint8_t Endpoint_GetEndpointInterrupts(void)
 441:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 442:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return UEINT;
 443:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 444:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 445:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Determines if the specified endpoint number has interrupted (valid only for INTERRUPT type
 446:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  endpoints).
 447:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 448:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \param[in] EndpointNumber  Index of the endpoint whose interrupt flag should be tested.
 449:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 450:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \return Boolean \c true if the specified endpoint has interrupted, \c false otherwise.
 451:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 452:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_HasEndpointInterrupted(const uint8_t EndpointNumber) ATTR_WARN_UNUSE
 453:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_HasEndpointInterrupted(const uint8_t EndpointNumber)
 454:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 455:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return ((Endpoint_GetEndpointInterrupts() & (1 << EndpointNumber)) ? true : false);
 456:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 457:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 458:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Determines if the selected IN endpoint is ready for a new packet to be sent to the host.
 459:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 460:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointPacketManagement_AVR8
 461:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 462:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \return Boolean \c true if the current endpoint is ready for an IN packet, \c false otherwis
 463:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 464:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_IsINReady(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
 465:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_IsINReady(void)
 466:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 467:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return ((UEINTX & (1 << TXINI)) ? true : false);
 468:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 469:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 470:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Determines if the selected OUT endpoint has received new packet from the host.
 471:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 472:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointPacketManagement_AVR8
 473:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 474:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \return Boolean \c true if current endpoint is has received an OUT packet, \c false otherwis
 475:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 476:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_IsOUTReceived(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
 477:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_IsOUTReceived(void)
 478:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 479:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return ((UEINTX & (1 << RXOUTI)) ? true : false);
 480:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 481:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 482:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Determines if the current CONTROL type endpoint has received a SETUP packet.
 483:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 484:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointPacketManagement_AVR8
 485:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 486:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \return Boolean \c true if the selected endpoint has received a SETUP packet, \c false other
 487:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 488:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_IsSETUPReceived(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
 489:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_IsSETUPReceived(void)
 490:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 491:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return ((UEINTX & (1 << RXSTPI)) ? true : false);
 492:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 493:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 494:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Clears a received SETUP packet on the currently selected CONTROL type endpoint, freeing up t
 495:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  endpoint for the next packet.
 496:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 497:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointPacketManagement_AVR8
 498:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 499:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \note This is not applicable for non CONTROL type endpoints.
 500:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 501:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_ClearSETUP(void) ATTR_ALWAYS_INLINE;
 502:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_ClearSETUP(void)
 503:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 504:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				UEINTX &= ~(1 << RXSTPI);
 505:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 506:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 507:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Sends an IN packet to the host on the currently selected endpoint, freeing up the endpoint f
 508:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  next packet and switching to the alternative endpoint bank if double banked.
 509:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 510:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointPacketManagement_AVR8
 511:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 512:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_ClearIN(void) ATTR_ALWAYS_INLINE;
 513:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_ClearIN(void)
 514:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 515:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#if !defined(CONTROL_ONLY_DEVICE)
 516:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					UEINTX &= ~((1 << TXINI) | (1 << FIFOCON));
 517:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#else
 518:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					UEINTX &= ~(1 << TXINI);
 519:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#endif
 520:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 521:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 522:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Acknowledges an OUT packet to the host on the currently selected endpoint, freeing up the en
 523:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  for the next packet and switching to the alternative endpoint bank if double banked.
 524:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 525:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointPacketManagement_AVR8
 526:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 527:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_ClearOUT(void) ATTR_ALWAYS_INLINE;
 528:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_ClearOUT(void)
 529:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 530:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#if !defined(CONTROL_ONLY_DEVICE)
 531:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					UEINTX &= ~((1 << RXOUTI) | (1 << FIFOCON));
  34               		.loc 2 531 0
  35 0008 8091 E800 		lds r24,232
  36 000c 8B77      		andi r24,lo8(123)
  37 000e 8093 E800 		sts 232,r24
  38 0012 00C0      		rjmp .L3
  39               	.L5:
  40               	.LBE79:
  41               	.LBE78:
 392:Caterina.c    **** 	/* Select the OUT endpoint so that the next data byte can be read */
 393:Caterina.c    **** 	Endpoint_SelectEndpoint(CDC_RX_EPNUM);
 394:Caterina.c    **** 
 395:Caterina.c    **** 	/* If OUT endpoint empty, clear it and wait for the next packet from the host */
 396:Caterina.c    **** 	while (!(Endpoint_IsReadWriteAllowed()))
 397:Caterina.c    **** 	{
 398:Caterina.c    **** 		Endpoint_ClearOUT();
 399:Caterina.c    **** 
 400:Caterina.c    **** 		while (!(Endpoint_IsOUTReceived()))
 401:Caterina.c    **** 		{
 402:Caterina.c    **** 			if (USB_DeviceState == DEVICE_STATE_Unattached)
  42               		.loc 1 402 0
  43 0014 8EB3      		in r24,0x1e
  44 0016 8823      		tst r24
  45 0018 01F0      		breq .L7
  46               	.L3:
  47               	.LBB80:
  48               	.LBB81:
 479:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return ((UEINTX & (1 << RXOUTI)) ? true : false);
  49               		.loc 2 479 0 discriminator 1
  50 001a 8091 E800 		lds r24,232
  51               	.LBE81:
  52               	.LBE80:
 400:Caterina.c    **** 		while (!(Endpoint_IsOUTReceived()))
  53               		.loc 1 400 0 discriminator 1
  54 001e 82FF      		sbrs r24,2
  55 0020 00C0      		rjmp .L5
  56               	.L2:
  57               	.LBB82:
  58               	.LBB83:
 420:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return ((UEINTX & (1 << RWAL)) ? true : false);
  59               		.loc 2 420 0 discriminator 1
  60 0022 8091 E800 		lds r24,232
  61               	.LBE83:
  62               	.LBE82:
 396:Caterina.c    **** 	while (!(Endpoint_IsReadWriteAllowed()))
  63               		.loc 1 396 0 discriminator 1
  64 0026 85FF      		sbrs r24,5
  65 0028 00C0      		rjmp .L6
  66               	.LBB84:
  67               	.LBB85:
 532:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#else
 533:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					UEINTX &= ~(1 << RXOUTI);
 534:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#endif
 535:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 536:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 537:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Stalls the current endpoint, indicating to the host that a logical problem occurred with the
 538:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  indicated endpoint and that the current transfer sequence should be aborted. This provides a
 539:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  way for devices to indicate invalid commands to the host so that the current transfer can be
 540:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  aborted and the host can begin its own recovery sequence.
 541:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 542:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  The currently selected endpoint remains stalled until either the \ref Endpoint_ClearStall() 
 543:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  is called, or the host issues a CLEAR FEATURE request to the device for the currently select
 544:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  endpoint.
 545:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 546:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointPacketManagement_AVR8
 547:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 548:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_StallTransaction(void) ATTR_ALWAYS_INLINE;
 549:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_StallTransaction(void)
 550:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 551:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				UECONX |= (1 << STALLRQ);
 552:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 553:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 554:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Clears the STALL condition on the currently selected endpoint.
 555:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 556:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointPacketManagement_AVR8
 557:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 558:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_ClearStall(void) ATTR_ALWAYS_INLINE;
 559:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_ClearStall(void)
 560:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 561:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				UECONX |= (1 << STALLRQC);
 562:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 563:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 564:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Determines if the currently selected endpoint is stalled, false otherwise.
 565:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 566:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointPacketManagement_AVR8
 567:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 568:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \return Boolean \c true if the currently selected endpoint is stalled, \c false otherwise.
 569:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 570:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_IsStalled(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
 571:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_IsStalled(void)
 572:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 573:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return ((UECONX & (1 << STALLRQ)) ? true : false);
 574:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 575:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 576:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Resets the data toggle of the currently selected endpoint. */
 577:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_ResetDataToggle(void) ATTR_ALWAYS_INLINE;
 578:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_ResetDataToggle(void)
 579:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 580:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				UECONX |= (1 << RSTDT);
 581:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 582:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 583:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Determines the currently selected endpoint's direction.
 584:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 585:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \return The currently selected endpoint's direction, as a \c ENDPOINT_DIR_* mask.
 586:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 587:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline uint8_t Endpoint_GetEndpointDirection(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_IN
 588:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline uint8_t Endpoint_GetEndpointDirection(void)
 589:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 590:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return (UECFG0X & (1 << EPDIR)) ? ENDPOINT_DIR_IN : ENDPOINT_DIR_OUT;
 591:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 592:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 593:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Sets the direction of the currently selected endpoint.
 594:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 595:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \param[in] DirectionMask  New endpoint direction, as a \c ENDPOINT_DIR_* mask.
 596:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 597:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_SetEndpointDirection(const uint8_t DirectionMask) ATTR_ALWAYS_INLINE
 598:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_SetEndpointDirection(const uint8_t DirectionMask)
 599:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 600:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				UECFG0X = ((UECFG0X & ~(1 << EPDIR)) | (DirectionMask ? (1 << EPDIR) : 0));
 601:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 602:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 603:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Reads one byte from the currently selected endpoint's bank, for OUT direction endpoints.
 604:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 605:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointPrimitiveRW_AVR8
 606:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 607:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \return Next byte in the currently selected endpoint's FIFO buffer.
 608:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 609:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline uint8_t Endpoint_Read_8(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
 610:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline uint8_t Endpoint_Read_8(void)
 611:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 612:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return UEDATX;
  68               		.loc 2 612 0
  69 002a 8091 F100 		lds r24,241
  70               	.LBE85:
  71               	.LBE84:
 403:Caterina.c    **** 			  return 0;
 404:Caterina.c    **** 		}
 405:Caterina.c    **** 	}
 406:Caterina.c    **** 
 407:Caterina.c    **** 	/* Fetch the next byte from the OUT endpoint */
 408:Caterina.c    **** 	return Endpoint_Read_8();
  72               		.loc 1 408 0
  73 002e 0895      		ret
  74               	.L7:
 403:Caterina.c    **** 			  return 0;
  75               		.loc 1 403 0
  76 0030 80E0      		ldi r24,0
 409:Caterina.c    **** }
  77               		.loc 1 409 0
  78 0032 0895      		ret
  79               		.cfi_endproc
  80               	.LFE103:
  82               		.section	.text.WriteNextResponseByte,"ax",@progbits
  84               	WriteNextResponseByte:
  85               	.LFB104:
 410:Caterina.c    **** 
 411:Caterina.c    **** /** Writes the next response byte to the CDC data IN endpoint, and sends the endpoint back if neede
 412:Caterina.c    ****  *  bank when full ready for the next byte in the packet to the host.
 413:Caterina.c    ****  *
 414:Caterina.c    ****  *  \param[in] Response  Next response byte to send to the host
 415:Caterina.c    ****  */
 416:Caterina.c    **** static void WriteNextResponseByte(const uint8_t Response)
 417:Caterina.c    **** {
  86               		.loc 1 417 0
  87               		.cfi_startproc
  88               	.LVL1:
  89               	/* prologue: function */
  90               	/* frame size = 0 */
  91               	/* stack size = 0 */
  92               	.L__stack_usage = 0
  93               	.LBB86:
  94               	.LBB87:
 330:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					UENUM = EndpointNumber;
  95               		.loc 2 330 0
  96 0000 93E0      		ldi r25,lo8(3)
  97 0002 9093 E900 		sts 233,r25
  98               	.LBE87:
  99               	.LBE86:
 100               	.LBB88:
 101               	.LBB89:
 420:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return ((UEINTX & (1 << RWAL)) ? true : false);
 102               		.loc 2 420 0
 103 0006 9091 E800 		lds r25,232
 104               	.LBE89:
 105               	.LBE88:
 418:Caterina.c    **** 	/* Select the IN endpoint so that the next data byte can be written */
 419:Caterina.c    **** 	Endpoint_SelectEndpoint(CDC_TX_EPNUM);
 420:Caterina.c    **** 
 421:Caterina.c    **** 	/* If IN endpoint full, clear it and wait until ready for the next packet to the host */
 422:Caterina.c    **** 	if (!(Endpoint_IsReadWriteAllowed()))
 106               		.loc 1 422 0
 107 000a 95FF      		sbrs r25,5
 108 000c 00C0      		rjmp .L9
 109               	.L13:
 110               	.LVL2:
 111               	.LBB90:
 112               	.LBB91:
 613:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 614:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 615:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Writes one byte to the currently selected endpoint's bank, for IN direction endpoints.
 616:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 617:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointPrimitiveRW_AVR8
 618:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 619:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \param[in] Data  Data to write into the the currently selected endpoint's FIFO buffer.
 620:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 621:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_Write_8(const uint8_t Data) ATTR_ALWAYS_INLINE;
 622:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_Write_8(const uint8_t Data)
 623:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 624:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				UEDATX = Data;
 113               		.loc 2 624 0
 114 000e 8093 F100 		sts 241,r24
 115               	.LBE91:
 116               	.LBE90:
 423:Caterina.c    **** 	{
 424:Caterina.c    **** 		Endpoint_ClearIN();
 425:Caterina.c    **** 
 426:Caterina.c    **** 		while (!(Endpoint_IsINReady()))
 427:Caterina.c    **** 		{
 428:Caterina.c    **** 			if (USB_DeviceState == DEVICE_STATE_Unattached)
 429:Caterina.c    **** 			  return;
 430:Caterina.c    **** 		}
 431:Caterina.c    **** 	}
 432:Caterina.c    **** 
 433:Caterina.c    **** 	/* Write the next byte to the IN endpoint */
 434:Caterina.c    **** 	Endpoint_Write_8(Response);
 435:Caterina.c    **** 	
 436:Caterina.c    **** 	TX_LED_ON();
 437:Caterina.c    **** 	TxLEDPulse = TX_RX_LED_PULSE_PERIOD;
 117               		.loc 1 437 0
 118 0012 84E6      		ldi r24,lo8(100)
 119 0014 90E0      		ldi r25,0
 120               	.LVL3:
 121 0016 9093 0000 		sts TxLEDPulse+1,r25
 122 001a 8093 0000 		sts TxLEDPulse,r24
 123 001e 0895      		ret
 124               	.LVL4:
 125               	.L9:
 126               	.LBB92:
 127               	.LBB93:
 516:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					UEINTX &= ~((1 << TXINI) | (1 << FIFOCON));
 128               		.loc 2 516 0
 129 0020 9091 E800 		lds r25,232
 130 0024 9E77      		andi r25,lo8(126)
 131 0026 9093 E800 		sts 232,r25
 132 002a 00C0      		rjmp .L11
 133               	.L12:
 134               	.LBE93:
 135               	.LBE92:
 428:Caterina.c    **** 			if (USB_DeviceState == DEVICE_STATE_Unattached)
 136               		.loc 1 428 0
 137 002c 9EB3      		in r25,0x1e
 138 002e 9923      		tst r25
 139 0030 01F0      		breq .L8
 140               	.L11:
 141               	.LBB94:
 142               	.LBB95:
 467:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return ((UEINTX & (1 << TXINI)) ? true : false);
 143               		.loc 2 467 0 discriminator 1
 144 0032 9091 E800 		lds r25,232
 145               	.LBE95:
 146               	.LBE94:
 426:Caterina.c    **** 		while (!(Endpoint_IsINReady()))
 147               		.loc 1 426 0 discriminator 1
 148 0036 90FF      		sbrs r25,0
 149 0038 00C0      		rjmp .L12
 150 003a 00C0      		rjmp .L13
 151               	.L8:
 152 003c 0895      		ret
 153               		.cfi_endproc
 154               	.LFE104:
 156               		.section	.text.StartSketch,"ax",@progbits
 157               	.global	StartSketch
 159               	StartSketch:
 160               	.LFB95:
  72:Caterina.c    **** {
 161               		.loc 1 72 0
 162               		.cfi_startproc
 163               	/* prologue: function */
 164               	/* frame size = 0 */
 165               	/* stack size = 0 */
 166               	.L__stack_usage = 0
  73:Caterina.c    **** 	cli();
 167               		.loc 1 73 0
 168               	/* #APP */
 169               	 ;  73 "Caterina.c" 1
 170 0000 F894      		cli
 171               	 ;  0 "" 2
  76:Caterina.c    **** 	TIMSK1 = 0;
 172               		.loc 1 76 0
 173               	/* #NOAPP */
 174 0002 1092 6F00 		sts 111,__zero_reg__
  77:Caterina.c    **** 	TCCR1B = 0;
 175               		.loc 1 77 0
 176 0006 1092 8100 		sts 129,__zero_reg__
  78:Caterina.c    **** 	TCNT1H = 0;		// 16-bit write to TCNT1 requires high byte be written first
 177               		.loc 1 78 0
 178 000a 1092 8500 		sts 133,__zero_reg__
  79:Caterina.c    **** 	TCNT1L = 0;
 179               		.loc 1 79 0
 180 000e 1092 8400 		sts 132,__zero_reg__
  82:Caterina.c    **** 	MCUCR = (1 << IVCE);
 181               		.loc 1 82 0
 182 0012 81E0      		ldi r24,lo8(1)
 183 0014 85BF      		out 0x35,r24
  83:Caterina.c    **** 	MCUCR = 0;
 184               		.loc 1 83 0
 185 0016 15BE      		out 0x35,__zero_reg__
  90:Caterina.c    **** 	__asm__ volatile("jmp 0x0000");
 186               		.loc 1 90 0
 187               	/* #APP */
 188               	 ;  90 "Caterina.c" 1
 189 0018 0C94 0000 		jmp 0x0000
 190               	 ;  0 "" 2
 191               	/* #NOAPP */
 192 001c 0895      		ret
 193               		.cfi_endproc
 194               	.LFE95:
 196               		.section	.text.LEDPulse,"ax",@progbits
 197               	.global	LEDPulse
 199               	LEDPulse:
 200               	.LFB96:
  96:Caterina.c    **** {
 201               		.loc 1 96 0
 202               		.cfi_startproc
 203               	/* prologue: function */
 204               	/* frame size = 0 */
 205               	/* stack size = 0 */
 206               	.L__stack_usage = 0
  97:Caterina.c    **** 	LLEDPulse++;
 207               		.loc 1 97 0
 208 0000 8091 0000 		lds r24,LLEDPulse
 209 0004 9091 0000 		lds r25,LLEDPulse+1
 210 0008 0196      		adiw r24,1
 211 000a 9093 0000 		sts LLEDPulse+1,r25
 212 000e 8093 0000 		sts LLEDPulse,r24
 213 0012 0895      		ret
 214               		.cfi_endproc
 215               	.LFE96:
 217               		.section	.text.SetupHardware,"ax",@progbits
 218               	.global	SetupHardware
 220               	SetupHardware:
 221               	.LFB98:
 152:Caterina.c    **** {
 222               		.loc 1 152 0
 223               		.cfi_startproc
 224               	/* prologue: function */
 225               	/* frame size = 0 */
 226               	/* stack size = 0 */
 227               	.L__stack_usage = 0
 154:Caterina.c    **** 	MCUSR &= ~(1 << WDRF);
 228               		.loc 1 154 0
 229 0000 84B7      		in r24,0x34
 230 0002 877F      		andi r24,lo8(-9)
 231 0004 84BF      		out 0x34,r24
 155:Caterina.c    **** 	wdt_disable();
 232               		.loc 1 155 0
 233 0006 88E1      		ldi r24,lo8(24)
 234               	/* #APP */
 235               	 ;  155 "Caterina.c" 1
 236 0008 0FB6      		in __tmp_reg__, __SREG__
 237 000a F894      		cli
 238 000c 8093 6000 		sts 96, r24
 239 0010 1092 6000 		sts 96, __zero_reg__
 240 0014 0FBE      		out __SREG__,__tmp_reg__
 241               		
 242               	 ;  0 "" 2
 243               	.LVL5:
 244               	/* #NOAPP */
 245               	.LBB96:
 246               	.LBB97:
 247               		.file 3 "c:\\program files (x86)\\atmel\\avr tools\\avr toolchain\\bin\\../lib/gcc/avr/4.7.2/../..
   1:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** /* Copyright (c) 2006, 2007, 2008  Eric B. Weddington
   2:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****    All rights reserved.
   3:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
   4:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****    Redistribution and use in source and binary forms, with or without
   5:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****    modification, are permitted provided that the following conditions are met:
   6:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
   7:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****    * Redistributions of source code must retain the above copyright
   8:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****      notice, this list of conditions and the following disclaimer.
   9:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****    * Redistributions in binary form must reproduce the above copyright
  10:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****      notice, this list of conditions and the following disclaimer in
  11:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****      the documentation and/or other materials provided with the
  12:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****      distribution.
  13:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****    * Neither the name of the copyright holders nor the names of
  14:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****      contributors may be used to endorse or promote products derived
  15:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****      from this software without specific prior written permission.
  16:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
  17:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  18:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  19:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  20:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
  21:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  22:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  23:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  24:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  25:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  26:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  27:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   POSSIBILITY OF SUCH DAMAGE. */
  28:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
  29:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** /* $Id: power.h 2254 2011-09-26 15:06:50Z arcanum $ */
  30:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
  31:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #ifndef _AVR_POWER_H_
  32:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define _AVR_POWER_H_   1
  33:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
  34:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #include <avr/io.h>
  35:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #include <stdint.h>
  36:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
  37:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
  38:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** /** \file */
  39:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** /** \defgroup avr_power <avr/power.h>: Power Reduction Management
  40:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
  41:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** \code #include <avr/power.h>\endcode
  42:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
  43:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** Many AVRs contain a Power Reduction Register (PRR) or Registers (PRRx) that 
  44:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** allow you to reduce power consumption by disabling or enabling various on-board 
  45:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** peripherals as needed.
  46:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
  47:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** There are many macros in this header file that provide an easy interface
  48:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** to enable or disable on-board peripherals to reduce power. See the table below.
  49:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
  50:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** \note Not all AVR devices have a Power Reduction Register (for example
  51:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** the ATmega128). On those devices without a Power Reduction Register, these 
  52:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** macros are not available.
  53:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
  54:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** \note Not all AVR devices contain the same peripherals (for example, the LCD
  55:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** interface), or they will be named differently (for example, USART and 
  56:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** USART0). Please consult your device's datasheet, or the header file, to 
  57:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** find out which macros are applicable to your device.
  58:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
  59:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** */
  60:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
  61:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
  62:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** /** \addtogroup avr_power
  63:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
  64:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** \anchor avr_powermacros
  65:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** <small>
  66:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** <center>
  67:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** <table border="3">
  68:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   <tr>
  69:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     <td width="10%"><strong>Power Macro</strong></td>
  70:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     <td width="15%"><strong>Description</strong></td>
  71:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     <td width="75%"><strong>Applicable for device</strong></td>
  72:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   </tr>
  73:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
  74:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   <tr>
  75:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****    <td>power_aca_disable()</td>
  76:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****      <td> Disable The Analog Comparator On PortA </td>
  77:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     <td>ATxmega16C4, ATxmega32C4, ATxmega64C3, ATxmega128C3, ATxmega192C3, ATxmega256C3, ATxmega16A
  78:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   </tr>
  79:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
  80:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   <tr>
  81:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****    <td>power_aca_enable()</td>
  82:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****      <td> Enable The Analog Comparator On PortA </td>
  83:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     <td>ATxmega16C4, ATxmega32C4, ATxmega64C3, ATxmega128C3, ATxmega192C3, ATxmega256C3, ATxmega16A
  84:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   </tr>
  85:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
  86:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   <tr>
  87:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****    <td>power_acb_disable()</td>
  88:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****      <td> Disable The Analog Comparator On PortB </td>
  89:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     <td>ATxmega16A4, ATxmega16A4U, ATxmega16D4, ATxmega32A4, ATxmega32A4U, ATxmega32D4, ATxmega64A1
  90:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   </tr>
  91:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
  92:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   <tr>
  93:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****    <td>power_acb_enable()</td>
  94:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****      <td> Enable The Analog Comparator On PortB </td>
  95:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     <td>ATxmega16A4, ATxmega16A4U, ATxmega16D4, ATxmega32A4, ATxmega32A4U, ATxmega32D4, ATxmega64A1
  96:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   </tr>
  97:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
  98:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   <tr>
  99:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****    <td>power_adc_disable()</td>
 100:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****       <td>Disable the Analog to Digital Converter module.</td>
 101:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     <td>ATmega640, ATmega1280, ATmega1281, ATmega2560, ATmega2561, ATmega128RFA1, ATmega1284RFR2, A
 102:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   </tr>
 103:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
 104:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   <tr>
 105:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****    <td>power_adc_enable()</td>
 106:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****       <td>Enable the Analog to Digital Converter module.</td>
 107:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     <td>ATmega640, ATmega1280, ATmega1281, ATmega2560, ATmega2561, ATmega128RFA1, ATmega1284RFR2, A
 108:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   </tr>
 109:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
 110:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   <tr>
 111:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****    <td>power_adca_disable()</td>
 112:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****      <td> Disable the Analog to Digital Converter module On PortA </td>
 113:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     <td>ATxmega16C4, ATxmega32C4, ATxmega64C3, ATxmega128C3, ATxmega192C3, ATxmega256C3, ATxmega16A
 114:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   </tr>
 115:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
 116:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   <tr>
 117:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****    <td>power_adca_enable()</td>
 118:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****      <td> Enable the Analog to Digital Converter module On PortA </td>
 119:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     <td>ATxmega16C4, ATxmega32C4, ATxmega64C3, ATxmega128C3, ATxmega192C3, ATxmega256C3, ATxmega16A
 120:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   </tr>
 121:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
 122:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   <tr>
 123:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****    <td>power_adcb_disable()</td>
 124:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****      <td> Disable the Analog to Digital Converter module On PortB </td>
 125:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     <td>ATxmega16A4, ATxmega16A4U, ATxmega16D4, ATxmega32A4, ATxmega32A4U, ATxmega32D4, ATxmega64A1
 126:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   </tr>
 127:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
 128:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   <tr>
 129:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****    <td>power_adcb_enable()</td>
 130:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****      <td> Enable the Analog to Digital Converter module On PortB </td>
 131:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     <td>ATxmega16A4, ATxmega16A4U, ATxmega16D4, ATxmega32A4, ATxmega32A4U, ATxmega32D4, ATxmega64A1
 132:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   </tr>
 133:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
 134:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   <tr>
 135:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****    <td>power_aes_disable()</td>
 136:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****      <td> Disable the AES module </td>
 137:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     <td>ATxmega16A4, ATxmega16A4U, ATxmega32A4U, ATxmega32A4, ATxmega64A1, ATxmega64A1U, ATxmega64A
 138:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   </tr>
 139:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
 140:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   <tr>
 141:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****    <td>power_aes_enable()</td>
 142:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****      <td> Enable the AES module </td>
 143:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     <td>ATxmega16A4, ATxmega16A4U, ATxmega32A4U, ATxmega32A4, ATxmega64A1, ATxmega64A1U, ATxmega64A
 144:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   </tr>
 145:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
 146:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   <tr>
 147:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****    <td>power_all_disable()</td>
 148:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****       <td>Disable all modules.</td>
 149:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     <td>ATxmega384C3, ATxmega256A3BU, ATxmega16A4U, ATxmega32A4U, ATxmega64A3U, ATxmega64A4U, ATxme
 150:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   </tr>
 151:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
 152:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   <tr>
 153:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****    <td>power_all_enable()</td>
 154:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****       <td>Enable all modules.</td>
 155:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     <td>ATxmega384C3, ATxmega256A3BU, ATxmega16A4U, ATxmega32A4U, ATxmega64A3U, ATxmega64A4U, ATxme
 156:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   </tr>
 157:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
 158:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   <tr>
 159:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****    <td>power_can_disable()</td>
 160:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****      <td> Disable the CAN module </td>
 161:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     <td>ATmega16M1, ATmega32C1, ATmega32M1, ATmega64C1, ATmega64M1</td>
 162:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   </tr>
 163:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
 164:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   <tr>
 165:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****    <td>power_can_enable()</td>
 166:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****      <td> Enable the CAN module </td>
 167:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     <td>ATmega16M1, ATmega32C1, ATmega32M1, ATmega64C1, ATmega64M1</td>
 168:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   </tr>
 169:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
 170:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   <tr>
 171:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****    <td>power_cinterface_disable()</td>
 172:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****      <td> Disable the CINTERFACE module </td>
 173:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     <td>ATA5790, ATA5790N, ATA5795</td>
 174:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   </tr>
 175:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
 176:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   <tr>
 177:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****    <td>power_cinterface_enable()</td>
 178:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****      <td> Enable the CINTERFACE module </td>
 179:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     <td>ATA5790, ATA5790N, ATA5795</td>
 180:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   </tr>
 181:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
 182:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   <tr>
 183:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****    <td>power_clock_output_disable()</td>
 184:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****      <td>Enable clock output module</td>
 185:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     <td>ATA5831</td>
 186:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   </tr>
 187:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
 188:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   <tr>
 189:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****    <td>power_clock_output_enable()</td>
 190:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****      <td>Enable clock output module</td>
 191:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     <td>ATA5831</td>
 192:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   </tr>
 193:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
 194:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   <tr>
 195:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****    <td>power_crc_disable()</td>
 196:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****      <td>Disable CRC module</td>
 197:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     <td>ATA5831</td>
 198:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   </tr>
 199:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
 200:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   <tr>
 201:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****    <td>power_crc_enable()</td>
 202:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****      <td>Enable CRC module</td>
 203:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     <td>ATA5831</td>
 204:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   </tr>
 205:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
 206:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   <tr>
 207:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****    <td>power_crypto_disable()</td>
 208:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****      <td> Disable the CRYPTO module </td>
 209:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     <td>ATA5790, ATA5790N, ATA5795</td>
 210:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   </tr>
 211:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
 212:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   <tr>
 213:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****    <td>power_crypto_enable()</td>
 214:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****      <td> Enable the CRYPTO module </td>
 215:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     <td>ATA5790, ATA5790N, ATA5795</td>
 216:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   </tr>
 217:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
 218:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   <tr>
 219:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****    <td>power_ctm_disable()</td>
 220:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     <td> Disable CTM module </td>
 221:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     <td>ATMXT112SL, ATMXT224, ATMXT224E, ATMXT336S, ATMXT540S, ATMXT540SREVA</td>
 222:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   </tr>
 223:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
 224:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   <tr>
 225:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****    <td>power_ctm_enable()</td>
 226:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     <td> Enable CTM module </td>
 227:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     <td>ATMXT112SL, ATMXT224, ATMXT224E, ATMXT336S, ATMXT540S, ATMXT540SREVA</td>
 228:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   </tr>
 229:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
 230:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   <tr>
 231:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****    <td>power_daca_disable()</td>
 232:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****      <td> Disable the DAC module on PortA </td>
 233:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     <td>ATxmega16A4, ATxmega16A4U, ATxmega32A4U, ATxmega32A4, ATxmega64A1, ATxmega64A1U, ATxmega64A
 234:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   </tr>
 235:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
 236:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   <tr>
 237:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****    <td>power_daca_enable()</td>
 238:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****      <td> Enable the DAC module on PortA </td>
 239:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     <td>ATxmega16A4, ATxmega16A4U, ATxmega32A4U, ATxmega32A4, ATxmega64A1, ATxmega64A1U, ATxmega64A
 240:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   </tr>
 241:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
 242:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   <tr>
 243:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****    <td>power_dacb_disable()</td>
 244:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****      <td> Disable the DAC module on PortB </td>
 245:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     <td>ATxmega16A4, ATxmega16A4U, ATxmega32A4U, ATxmega32A4, ATxmega64A1, ATxmega64A1U, ATxmega64A
 246:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   </tr>
 247:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
 248:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   <tr>
 249:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****    <td>power_dacb_enable()</td>
 250:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****      <td> Enable the DAC module on PortB </td>
 251:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     <td>ATxmega16A4, ATxmega16A4U, ATxmega32A4U, ATxmega32A4, ATxmega64A1, ATxmega64A1U, ATxmega64A
 252:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   </tr>
 253:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
 254:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   <tr>
 255:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****    <td>power_data_fifo_disable()</td>
 256:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****      <td>Disable data FIFO</td>
 257:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     <td>ATA5831</td>
 258:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   </tr>
 259:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
 260:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   <tr>
 261:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****    <td>power_data_fifo_enable()</td>
 262:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****      <td>Enable data FIFO</td>
 263:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     <td>ATA5831</td>
 264:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   </tr>
 265:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
 266:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   <tr>
 267:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****    <td>power_dma_disable()</td>
 268:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****      <td> Disable the DMA module </td>
 269:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     <td>ATxmega16A4, ATxmega16A4U, ATxmega32A4U, ATxmega32A4, ATxmega64A1, ATxmega64A1U, ATxmega64A
 270:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   </tr>
 271:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
 272:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   <tr>
 273:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****    <td>power_dma_enable()</td>
 274:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****      <td> Enable the DMA module </td>
 275:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     <td>ATxmega16A4, ATxmega16A4U, ATxmega32A4U, ATxmega32A4, ATxmega64A1, ATxmega64A1U, ATxmega64A
 276:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   </tr>
 277:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
 278:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   <tr>
 279:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****    <td>power_ebi_disable()</td>
 280:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****      <td> Disable the EBI module </td>
 281:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     <td>ATxmega16A4, ATxmega16A4U, ATxmega32A4U, ATxmega32A4, ATxmega64A1, ATxmega64A1U, ATxmega64A
 282:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   </tr>
 283:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
 284:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   <tr>
 285:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****    <td>power_ebi_enable()</td>
 286:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****      <td> Enable the EBI module </td>
 287:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     <td>ATxmega16A4, ATxmega16A4U, ATxmega32A4U, ATxmega32A4, ATxmega64A1, ATxmega64A1U, ATxmega64A
 288:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   </tr>
 289:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
 290:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   <tr>
 291:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****    <td>power_edma_disable()</td>
 292:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     <td> Disable EDMA module </td>
 293:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     <td>ATxmega32E5, ATxmega16E5, ATxmega8E5</td>
 294:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   </tr>
 295:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
 296:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   <tr>
 297:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****    <td>power_edma_enable()</td>
 298:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     <td> Enable EDMA module </td>
 299:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     <td>ATxmega32E5, ATxmega16E5, ATxmega8E5</td>
 300:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   </tr>
 301:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
 302:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   <tr>
 303:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****    <td>power_evsys_disable()</td>
 304:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****      <td> Disable the EVSYS module </td>
 305:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     <td>ATxmega16C4, ATxmega32C4, ATxmega64C3, ATxmega128C3, ATxmega192C3, ATxmega256C3, ATxmega16A
 306:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   </tr>
 307:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
 308:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   <tr>
 309:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****    <td>power_evsys_enable()</td>
 310:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****      <td> Enable the EVSYS module </td>
 311:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     <td>ATxmega16C4, ATxmega32C4, ATxmega64C3, ATxmega128C3, ATxmega192C3, ATxmega256C3, ATxmega16A
 312:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   </tr>
 313:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
 314:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   <tr>
 315:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****    <td>power_hiresc_disable()</td>
 316:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****      <td> Disable the HIRES module on PortC </td>
 317:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     <td>ATxmega16C4, ATxmega32C4, ATxmega64C3, ATxmega128C3, ATxmega192C3, ATxmega256C3, ATxmega16A
 318:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   </tr>
 319:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
 320:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   <tr>
 321:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****    <td>power_hiresc_enable()</td>
 322:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****      <td> Enable the HIRES module on PortC </td>
 323:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     <td>ATxmega16C4, ATxmega32C4, ATxmega64C3, ATxmega128C3, ATxmega192C3, ATxmega256C3, ATxmega16A
 324:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   </tr>
 325:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
 326:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   <tr>
 327:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****    <td>power_hiresd_disable()</td>
 328:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****      <td> Disable the HIRES module on PortD </td>
 329:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     <td>ATxmega16A4, ATxmega16A4U, ATxmega16D4, ATxmega32A4, ATxmega32A4U, ATxmega32D4, ATxmega64A1
 330:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   </tr>
 331:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
 332:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   <tr>
 333:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****    <td>power_hiresd_enable()</td>
 334:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****      <td> Enable the HIRES module on PortD </td>
 335:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     <td>ATxmega16A4, ATxmega16A4U, ATxmega16D4, ATxmega32A4, ATxmega32A4U, ATxmega32D4, ATxmega64A1
 336:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   </tr>
 337:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
 338:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   <tr>
 339:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****    <td>power_hirese_disable()</td>
 340:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****      <td> Disable the HIRES module on PortE </td>
 341:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     <td>ATxmega16A4, ATxmega16A4U, ATxmega16D4, ATxmega32A4, ATxmega32A4U, ATxmega32D4, ATxmega64A1
 342:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   </tr>
 343:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
 344:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   <tr>
 345:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****    <td>power_hirese_enable()</td>
 346:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****      <td> Enable the HIRES module on PortE </td>
 347:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     <td>ATxmega16A4, ATxmega16A4U, ATxmega16D4, ATxmega32A4, ATxmega32A4U, ATxmega32D4, ATxmega64A1
 348:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   </tr>
 349:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
 350:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   <tr>
 351:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****    <td>power_hiresf_disable()</td>
 352:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****      <td> Disable the HIRES module on PortF </td>
 353:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     <td>ATxmega16A4, ATxmega16A4U, ATxmega16D4, ATxmega32A4, ATxmega32A4U, ATxmega32D4, ATxmega64A1
 354:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   </tr>
 355:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
 356:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   <tr>
 357:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****    <td>power_hiresf_enable()</td>
 358:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****      <td> Enable the HIRES module on PortF </td>
 359:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     <td>ATxmega16A4, ATxmega16A4U, ATxmega16D4, ATxmega32A4, ATxmega32A4U, ATxmega32D4, ATxmega64A1
 360:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   </tr>
 361:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
 362:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   <tr>
 363:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****    <td>power_hsspi_disable()</td>
 364:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****      <td> Disable the HSPPI module </td>
 365:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     <td>AT90SCR100</td>
 366:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   </tr>
 367:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
 368:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   <tr>
 369:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****    <td>power_hsspi_enable()</td>
 370:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****      <td> Enable the HSPPI module </td>
 371:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     <td>AT90SCR100</td>
 372:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   </tr>
 373:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
 374:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   <tr>
 375:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****    <td>power_id_scan_disable()</td>
 376:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****      <td>Disable ID Scan</td>
 377:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     <td>ATA5831</td>
 378:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   </tr>
 379:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
 380:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   <tr>
 381:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****    <td>power_id_scan_enable()</td>
 382:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****      <td>Enable ID Scan</td>
 383:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     <td>ATA5831</td>
 384:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   </tr>
 385:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
 386:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   <tr>
 387:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****    <td>power_irdriver_disable()</td>
 388:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****      <td> Disable the IRDRIVER module </td>
 389:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     <td>ATA5790, ATA5790N, ATA5795</td>
 390:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   </tr>
 391:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
 392:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   <tr>
 393:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****    <td>power_irdriver_enable()</td>
 394:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****      <td> Enable the IRDRIVER module </td>
 395:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     <td>ATA5790, ATA5790N, ATA5795</td>
 396:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   </tr>
 397:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
 398:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   <tr>
 399:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****    <td>power_kb_disable()</td>
 400:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****      <td> Disable the KB module </td>
 401:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     <td>AT90SCR100</td>
 402:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   </tr>
 403:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
 404:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   <tr>
 405:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****    <td>power_kb_enable()</td>
 406:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****      <td> Enable the KB module </td>
 407:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     <td>AT90SCR100</td>
 408:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   </tr>
 409:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
 410:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   <tr>
 411:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****    <td>power_lcd_disable()</td>
 412:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****       <td>Disable the LCD module.</td>
 413:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     <td>ATxmega64B1, ATxmega64B3, ATxmega128B1, ATxmega128B3, ATmega169, ATmega169A, ATmega169P, AT
 414:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   </tr>
 415:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
 416:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   <tr>
 417:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****    <td>power_lcd_enable()</td>
 418:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****       <td>Enable the LCD module.</td>
 419:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     <td>ATxmega64B1, ATxmega64B3, ATxmega128B1, ATxmega128B3, ATmega169, ATmega169A, ATmega169P, AT
 420:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   </tr>
 421:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
 422:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   <tr>
 423:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****    <td>power_lfreceiver_disable()</td>
 424:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****      <td> Disable the LFRECEIVER module </td>
 425:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     <td>ATA5790, ATA5790N</td>
 426:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   </tr>
 427:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
 428:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   <tr>
 429:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****    <td>power_lfreceiver_enable()</td>
 430:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****      <td> Enable the LFRECEIVER module </td>
 431:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     <td>ATA5790, ATA5790N</td>
 432:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   </tr>
 433:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
 434:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   <tr>
 435:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****    <td>power_lin_disable()</td>
 436:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****      <td> Disable the LIN module </td>
 437:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     <td>ATmega16M1, ATmega32C1, ATmega32M1, ATmega64C1, ATmega64M1, ATtiny167, ATtiny87, ATA5505, A
 438:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   </tr>
 439:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
 440:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   <tr>
 441:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****    <td>power_lin_enable()</td>
 442:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****      <td> Enable the LIN module </td>
 443:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     <td>ATmega16M1, ATmega32C1, ATmega32M1, ATmega64C1, ATmega64M1, ATtiny167, ATtiny87, ATA5505, A
 444:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   </tr>
 445:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
 446:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   <tr>
 447:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****    <td>power_pga_disable()</td>
 448:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     <td> Disable PGA module </td>
 449:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     <td>ATmega1284RFR2, ATmega2564RFR2, ATmega644RFR2, ATmega256RFR2, ATmega128RFR2, ATmega64RFR2, 
 450:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   </tr>
 451:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
 452:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   <tr>
 453:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****    <td>power_pga_enable()</td>
 454:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     <td> Enable PGA module </td>
 455:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     <td>ATmega1284RFR2, ATmega2564RFR2, ATmega644RFR2, ATmega256RFR2, ATmega128RFR2, ATmega64RFR2, 
 456:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   </tr>
 457:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
 458:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   <tr>
 459:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****    <td>power_preamble_rssi_fifo_disable()</td>
 460:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****      <td>Disable preamble/RSSI FIFO</td>
 461:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     <td>ATA5831</td>
 462:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   </tr>
 463:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
 464:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   <tr>
 465:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****    <td>power_preamble_rssi_fifo_enable()</td>
 466:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****      <td>Enable preamble/RSSI FIFO</td>
 467:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     <td>ATA5831</td>
 468:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   </tr>
 469:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
 470:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   <tr>
 471:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****    <td>power_psc0_disable()</td>
 472:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****       <td>Disable the Power Stage Controller 0 module.</td>
 473:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     <td>AT90PWM1, AT90PWM2, AT90PWM2B, AT90PWM3, AT90PWM3B, AT90PWM216, AT90PWM316</td>
 474:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   </tr>
 475:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
 476:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   <tr>
 477:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****    <td>power_psc0_enable()</td>
 478:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****       <td>Enable the Power Stage Controller 0 module.</td>
 479:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     <td>AT90PWM1, AT90PWM2, AT90PWM2B, AT90PWM3, AT90PWM3B, AT90PWM216, AT90PWM316</td>
 480:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   </tr>
 481:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
 482:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   <tr>
 483:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****    <td>power_psc1_disable()</td>
 484:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****       <td>Disable the Power Stage Controller 1 module.</td>
 485:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     <td>AT90PWM1, AT90PWM2, AT90PWM2B, AT90PWM3, AT90PWM3B, AT90PWM216, AT90PWM316</td>
 486:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   </tr>
 487:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
 488:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   <tr>
 489:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****    <td>power_psc1_enable()</td>
 490:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****       <td>Enable the Power Stage Controller 1 module.</td>
 491:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     <td>AT90PWM1, AT90PWM2, AT90PWM2B, AT90PWM3, AT90PWM3B, AT90PWM216, AT90PWM316</td>
 492:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   </tr>
 493:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
 494:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   <tr>
 495:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****    <td>power_psc2_disable()</td>
 496:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****       <td>Disable the Power Stage Controller 2 module.</td>
 497:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     <td>AT90PWM1, AT90PWM2, AT90PWM2B, AT90PWM3, AT90PWM3B, AT90PWM216, AT90PWM316, AT90PWM81, AT90
 498:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   </tr>
 499:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
 500:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   <tr>
 501:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****    <td>power_psc2_enable()</td>
 502:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****       <td>Enable the Power Stage Controller 2 module.</td>
 503:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     <td>AT90PWM1, AT90PWM2, AT90PWM2B, AT90PWM3, AT90PWM3B, AT90PWM216, AT90PWM316, AT90PWM81, AT90
 504:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   </tr>
 505:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
 506:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   <tr>
 507:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****    <td>power_psc_disable()</td>
 508:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****      <td> Disable the Power Stage Controller module </td>
 509:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     <td>ATmega16M1, ATmega32C1, ATmega32M1, ATmega64C1, ATmega64M1</td>
 510:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   </tr>
 511:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
 512:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   <tr>
 513:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****    <td>power_psc_enable()</td>
 514:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****      <td> Enable the Power Stage Controller module </td>
 515:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     <td>ATmega16M1, ATmega32C1, ATmega32M1, ATmega64C1, ATmega64M1</td>
 516:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   </tr>
 517:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
 518:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   <tr>
 519:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****    <td>power_pscr_disable()</td>
 520:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****       <td>Disable the Reduced Power Stage Controller module.</td>
 521:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     <td>AT90PWM81, AT90PWM161</td>
 522:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   </tr>
 523:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
 524:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   <tr>
 525:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****    <td>power_pscr_enable()</td>
 526:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****       <td>Enable the Reduced Power Stage Controller module.</td>
 527:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     <td>AT90PWM81, AT90PWM161</td>
 528:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   </tr>
 529:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
 530:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   <tr>
 531:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****    <td>power_ram0_disable()</td>
 532:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     <td> Disable Ram0 module </td>
 533:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     <td>ATmega1284RFR2, ATmega2564RFR2, ATmega644RFR2, ATmega256RFR2, ATmega128RFR2, ATmega64RFR2, 
 534:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   </tr>
 535:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
 536:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   <tr>
 537:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****    <td>power_ram0_enable()</td>
 538:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     <td> Enable Ram0 module </td>
 539:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     <td>ATmega1284RFR2, ATmega2564RFR2, ATmega644RFR2, ATmega256RFR2, ATmega128RFR2, ATmega64RFR2, 
 540:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   </tr>
 541:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
 542:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   <tr>
 543:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****    <td>power_ram1_disable()</td>
 544:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     <td> Disable Ram1 module </td>
 545:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     <td>ATmega1284RFR2, ATmega2564RFR2, ATmega644RFR2, ATmega256RFR2, ATmega128RFR2, ATmega64RFR2, 
 546:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   </tr>
 547:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
 548:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   <tr>
 549:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****    <td>power_ram1_enable()</td>
 550:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     <td> Enable Ram1 module </td>
 551:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     <td>ATmega1284RFR2, ATmega2564RFR2, ATmega644RFR2, ATmega256RFR2, ATmega128RFR2, ATmega64RFR2, 
 552:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   </tr>
 553:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
 554:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   <tr>
 555:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****    <td>power_ram2_disable()</td>
 556:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     <td> Disable Ram2 module </td>
 557:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     <td>ATmega1284RFR2, ATmega2564RFR2, ATmega644RFR2, ATmega256RFR2, ATmega128RFR2, ATmega64RFR2, 
 558:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   </tr>
 559:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
 560:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   <tr>
 561:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****    <td>power_ram2_enable()</td>
 562:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     <td> Enable Ram2 module </td>
 563:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     <td>ATmega1284RFR2, ATmega2564RFR2, ATmega644RFR2, ATmega256RFR2, ATmega128RFR2, ATmega64RFR2, 
 564:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   </tr>
 565:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
 566:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   <tr>
 567:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****    <td>power_ram3_disable()</td>
 568:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     <td> Disable Ram3 module </td>
 569:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     <td>ATmega1284RFR2, ATmega2564RFR2, ATmega644RFR2, ATmega256RFR2, ATmega128RFR2, ATmega64RFR2, 
 570:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   </tr>
 571:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
 572:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   <tr>
 573:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****    <td>power_ram3_enable()</td>
 574:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     <td> Enable Ram3 module </td>
 575:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     <td>ATmega1284RFR2, ATmega2564RFR2, ATmega644RFR2, ATmega256RFR2, ATmega128RFR2, ATmega64RFR2, 
 576:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   </tr>
 577:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
 578:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   <tr>
 579:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****    <td>power_receive_dsp_control_disable()</td>
 580:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****      <td>Disable Receive DSP control module</td>
 581:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     <td>ATA5831</td>
 582:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   </tr>
 583:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
 584:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   <tr>
 585:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****    <td>power_receive_dsp_control_enable()</td>
 586:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****      <td>Enable Receive DSP control module</td>
 587:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     <td>ATA5831</td>
 588:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   </tr>
 589:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
 590:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   <tr>
 591:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****    <td>power_rssi_buffer_disable()</td>
 592:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****      <td>Disable RSSI buffer</td>
 593:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     <td>ATA5831</td>
 594:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   </tr>
 595:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
 596:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   <tr>
 597:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****    <td>power_rssi_buffer_enable()</td>
 598:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****      <td>Enable RSSI buffer</td>
 599:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     <td>ATA5831</td>
 600:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   </tr>
 601:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
 602:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   <tr>
 603:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****    <td>power_rtc_disable()</td>
 604:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****      <td> Disable the RTC module </td>
 605:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     <td>ATxmega16C4, ATxmega32C4, ATxmega64C3, ATxmega128C3, ATxmega192C3, ATxmega256C3, ATxmega16A
 606:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   </tr>
 607:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
 608:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   <tr>
 609:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****    <td>power_rtc_enable()</td>
 610:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****      <td> Enable the RTC module </td>
 611:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     <td>ATxmega16C4, ATxmega32C4, ATxmega64C3, ATxmega128C3, ATxmega192C3, ATxmega256C3, ATxmega16A
 612:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   </tr>
 613:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
 614:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   <tr>
 615:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****    <td>power_sci_disable()</td>
 616:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****      <td> Disable the SCI module </td>
 617:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     <td>AT90SCR100</td>
 618:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   </tr>
 619:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
 620:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   <tr>
 621:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****    <td>power_sci_enable()</td>
 622:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****      <td> Enable the SCI module </td>
 623:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     <td>AT90SCR100</td>
 624:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   </tr>
 625:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
 626:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   <tr>
 627:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****    <td>power_sequencer_state_machine_disable()</td>
 628:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****      <td>Disable power sequencer state machine</td>
 629:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     <td>ATA5831</td>
 630:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   </tr>
 631:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
 632:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   <tr>
 633:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****    <td>power_sequencer_state_machine_enable()</td>
 634:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****      <td>Enable power sequencer state machine</td>
 635:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     <td>ATA5831</td>
 636:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   </tr>
 637:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
 638:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   <tr>
 639:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****    <td>power_spi_disable()</td>
 640:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****       <td>Disable the Serial Peripheral Interface module.</td>
 641:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     <td>ATmega640, ATmega1280, ATmega1281, ATmega2560, ATmega2561, ATmega128RFA1, ATmega1284RFR2, A
 642:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   </tr>
 643:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
 644:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   <tr>
 645:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****    <td>power_spi_enable()</td>
 646:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****       <td>Enable the Serial Peripheral Interface module.</td>
 647:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     <td>ATmega640, ATmega1280, ATmega1281, ATmega2560, ATmega2561, ATmega128RFA1, ATmega1284RFR2, A
 648:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   </tr>
 649:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
 650:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   <tr>
 651:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****    <td>power_spic_disable()</td>
 652:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****      <td> Disable the SPI module on PortC </td>
 653:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     <td>ATxmega16C4, ATxmega32C4, ATxmega64C3, ATxmega128C3, ATxmega192C3, ATxmega256C3, ATxmega16A
 654:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   </tr>
 655:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
 656:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   <tr>
 657:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****    <td>power_spic_enable()</td>
 658:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****      <td> Enable the SPI module on PortC </td>
 659:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     <td>ATxmega16C4, ATxmega32C4, ATxmega64C3, ATxmega128C3, ATxmega192C3, ATxmega256C3, ATxmega16A
 660:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   </tr>
 661:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
 662:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   <tr>
 663:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****    <td>power_spid_disable()</td>
 664:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****      <td> Disable the SPI module on PortD </td>
 665:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     <td>ATxmega16C4, ATxmega32C4, ATxmega64C3, ATxmega128C3, ATxmega192C3, ATxmega256C3, ATxmega16A
 666:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   </tr>
 667:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
 668:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   <tr>
 669:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****    <td>power_spid_enable()</td>
 670:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****      <td> Enable the SPI module on PortD </td>
 671:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     <td>ATxmega16C4, ATxmega32C4, ATxmega64C3, ATxmega128C3, ATxmega192C3, ATxmega256C3, ATxmega16A
 672:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   </tr>
 673:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
 674:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   <tr>
 675:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****    <td>power_spie_disable()</td>
 676:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****      <td> Disable the SPI module on PortE </td>
 677:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     <td>ATxmega16A4, ATxmega16A4U, ATxmega16D4, ATxmega32A4, ATxmega32A4U, ATxmega32D4, ATxmega64A1
 678:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   </tr>
 679:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
 680:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   <tr>
 681:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****    <td>power_spie_enable()</td>
 682:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****      <td> Enable the SPI module on PortE </td>
 683:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     <td>ATxmega16A4, ATxmega16A4U, ATxmega16D4, ATxmega32A4, ATxmega32A4U, ATxmega32D4, ATxmega64A1
 684:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   </tr>
 685:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
 686:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   <tr>
 687:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****    <td>power_spif_disable()</td>
 688:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****      <td> Disable the SPI module on PortF </td>
 689:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     <td>ATxmega16A4, ATxmega16A4U, ATxmega16D4, ATxmega32A4, ATxmega32A4U, ATxmega32D4, ATxmega64A1
 690:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   </tr>
 691:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
 692:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   <tr>
 693:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****    <td>power_spif_enable()</td>
 694:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****      <td> Enable the SPI module on PortF </td>
 695:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     <td>ATxmega16A4, ATxmega16A4U, ATxmega16D4, ATxmega32A4, ATxmega32A4U, ATxmega32D4, ATxmega64A1
 696:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   </tr>
 697:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
 698:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   <tr>
 699:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****    <td>power_tc0c_disable()</td>
 700:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****      <td> Disable the TC0 module on PortC </td>
 701:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     <td>ATxmega16C4, ATxmega32C4, ATxmega64C3, ATxmega128C3, ATxmega192C3, ATxmega256C3, ATxmega16A
 702:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   </tr>
 703:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
 704:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   <tr>
 705:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****    <td>power_tc0c_enable()</td>
 706:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****      <td> Enable the TC0 module on PortC </td>
 707:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     <td>ATxmega16C4, ATxmega32C4, ATxmega64C3, ATxmega128C3, ATxmega192C3, ATxmega256C3, ATxmega16A
 708:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   </tr>
 709:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
 710:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   <tr>
 711:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****    <td>power_tc0d_disable()</td>
 712:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****      <td> Disable the TC0 module on PortD </td>
 713:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     <td>ATxmega16C4, ATxmega32C4, ATxmega64C3, ATxmega128C3, ATxmega192C3, ATxmega256C3, ATxmega16A
 714:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   </tr>
 715:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
 716:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   <tr>
 717:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****    <td>power_tc0d_enable()</td>
 718:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****      <td> Enable the TC0 module on PortD </td>
 719:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     <td>ATxmega16C4, ATxmega32C4, ATxmega64C3, ATxmega128C3, ATxmega192C3, ATxmega256C3, ATxmega16A
 720:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   </tr>
 721:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
 722:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   <tr>
 723:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****    <td>power_tc0e_disable()</td>
 724:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****      <td> Disable the TC0 module on PortE </td>
 725:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     <td>ATxmega16C4, ATxmega32C4, ATxmega64C3, ATxmega128C3, ATxmega192C3, ATxmega256C3, ATxmega16A
 726:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   </tr>
 727:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
 728:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   <tr>
 729:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****    <td>power_tc0e_enable()</td>
 730:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****      <td> Enable the TC0 module on PortE </td>
 731:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     <td>ATxmega16C4, ATxmega32C4, ATxmega64C3, ATxmega128C3, ATxmega192C3, ATxmega256C3, ATxmega16A
 732:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   </tr>
 733:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
 734:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   <tr>
 735:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****    <td>power_tc0f_disable()</td>
 736:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****      <td> Disable the TC0 module on PortF </td>
 737:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     <td>ATxmega16C4, ATxmega32C4, ATxmega64C3, ATxmega128C3, ATxmega192C3, ATxmega256C3, ATxmega16A
 738:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   </tr>
 739:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
 740:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   <tr>
 741:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****    <td>power_tc0f_enable()</td>
 742:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****      <td> Enable the TC0 module on PortF </td>
 743:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     <td>ATxmega16C4, ATxmega32C4, ATxmega64C3, ATxmega128C3, ATxmega192C3, ATxmega256C3, ATxmega16A
 744:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   </tr>
 745:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
 746:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   <tr>
 747:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****    <td>power_tc1c_disable()</td>
 748:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****      <td> Disable the TC1 module on PortC </td>
 749:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     <td>ATxmega16C4, ATxmega32C4, ATxmega64C3, ATxmega128C3, ATxmega192C3, ATxmega256C3, ATxmega16A
 750:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   </tr>
 751:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
 752:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   <tr>
 753:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****    <td>power_tc1c_enable()</td>
 754:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****      <td> Enable the TC1 module on PortC </td>
 755:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     <td>ATxmega16C4, ATxmega32C4, ATxmega64C3, ATxmega128C3, ATxmega192C3, ATxmega256C3, ATxmega16A
 756:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   </tr>
 757:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
 758:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   <tr>
 759:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****    <td>power_tc1d_disable()</td>
 760:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****      <td> Disable the TC1 module on PortD </td>
 761:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     <td>ATxmega16A4, ATxmega16A4U, ATxmega16D4, ATxmega32A4, ATxmega32A4U, ATxmega32D4, ATxmega64A1
 762:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   </tr>
 763:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
 764:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   <tr>
 765:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****    <td>power_tc1d_enable()</td>
 766:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****      <td> Enable the TC1 module on PortD </td>
 767:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     <td>ATxmega16A4, ATxmega16A4U, ATxmega16D4, ATxmega32A4, ATxmega32A4U, ATxmega32D4, ATxmega64A1
 768:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   </tr>
 769:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
 770:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   <tr>
 771:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****    <td>power_tc1e_disable()</td>
 772:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****      <td> Disable the TC1 module on PortE </td>
 773:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     <td>ATxmega16A4, ATxmega16A4U, ATxmega16D4, ATxmega32A4, ATxmega32A4U, ATxmega32D4, ATxmega64A1
 774:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   </tr>
 775:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
 776:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   <tr>
 777:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****    <td>power_tc1e_enable()</td>
 778:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****      <td> Enable the TC1 module on PortE </td>
 779:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     <td>ATxmega16A4, ATxmega16A4U, ATxmega16D4, ATxmega32A4, ATxmega32A4U, ATxmega32D4, ATxmega64A1
 780:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   </tr>
 781:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
 782:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   <tr>
 783:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****    <td>power_tc1f_disable()</td>
 784:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****      <td> Disable the TC1 module on PortF </td>
 785:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     <td>ATxmega16A4, ATxmega16A4U, ATxmega16D4, ATxmega32A4, ATxmega32A4U, ATxmega32D4, ATxmega64A1
 786:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   </tr>
 787:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
 788:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   <tr>
 789:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****    <td>power_tc1f_enable()</td>
 790:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****      <td> Enable the TC1 module on PortF </td>
 791:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     <td>ATxmega16A4, ATxmega16A4U, ATxmega16D4, ATxmega32A4, ATxmega32A4U, ATxmega32D4, ATxmega64A1
 792:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   </tr>
 793:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
 794:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   <tr>
 795:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****    <td>power_tc4c_disable()</td>
 796:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     <td> Disable The TC4 module on Port C </td>
 797:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     <td>ATxmega32E5, ATxmega16E5, ATxmega8E5</td>
 798:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   </tr>
 799:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
 800:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   <tr>
 801:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****    <td>power_tc4c_enable()</td>
 802:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     <td> Enable The TC4 module on Port C </td>
 803:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     <td>ATxmega32E5, ATxmega16E5, ATxmega8E5</td>
 804:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   </tr>
 805:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
 806:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   <tr>
 807:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****    <td>power_tc5c_disable()</td>
 808:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     <td> Disable The TC5 module on Port C </td>
 809:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     <td>ATxmega32E5, ATxmega16E5, ATxmega8E5</td>
 810:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   </tr>
 811:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
 812:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   <tr>
 813:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****    <td>power_tc5c_enable()</td>
 814:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     <td> Enable The TC5 module on Port C </td>
 815:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     <td>ATxmega32E5, ATxmega16E5, ATxmega8E5</td>
 816:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   </tr>
 817:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
 818:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   <tr>
 819:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****    <td>power_tc5d_disable()</td>
 820:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     <td> Disable The TC5 module on Port D </td>
 821:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     <td>ATxmega32E5, ATxmega16E5, ATxmega8E5</td>
 822:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   </tr>
 823:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
 824:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   <tr>
 825:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****    <td>power_tc5d_enable()</td>
 826:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     <td> Enable The TC5 module on Port D </td>
 827:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     <td>ATxmega32E5, ATxmega16E5, ATxmega8E5</td>
 828:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   </tr>
 829:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
 830:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   <tr>
 831:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****    <td>power_timer0_disable()</td>
 832:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****       <td>Disable the Timer 0 module.</td>
 833:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     <td>ATmega640, ATmega1280, ATmega1281, ATmega2560, ATmega2561, ATmega128RFA1, ATmega1284RFR2, A
 834:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   </tr>
 835:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
 836:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   <tr>
 837:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****    <td>power_timer0_enable()</td>
 838:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****       <td>Enable the Timer 0 module.</td>
 839:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     <td>ATmega640, ATmega1280, ATmega1281, ATmega2560, ATmega2561, ATmega128RFA1, ATmega1284RFR2, A
 840:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   </tr>
 841:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
 842:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   <tr>
 843:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****    <td>power_timer1_disable()</td>
 844:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****       <td>Disable the Timer 1 module.</td>
 845:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     <td>ATmega640, ATmega1280, ATmega1281, ATmega2560, ATmega2561, ATmega128RFA1, ATmega1284RFR2, A
 846:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   </tr>
 847:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
 848:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   <tr>
 849:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****    <td>power_timer1_enable()</td>
 850:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****       <td>Enable the Timer 1 module.</td>
 851:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     <td>ATmega640, ATmega1280, ATmega1281, ATmega2560, ATmega2561, ATmega128RFA1, ATmega1284RFR2, A
 852:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   </tr>
 853:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
 854:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   <tr>
 855:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****    <td>power_timer2_disable()</td>
 856:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****       <td>Disable the Timer 2 module.</td>
 857:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     <td>ATmega640, ATmega1280, ATmega1281, ATmega2560, ATmega2561, ATmega128RFA1, ATmega1284RFR2, A
 858:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   </tr>
 859:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
 860:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   <tr>
 861:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****    <td>power_timer2_enable()</td>
 862:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****       <td>Enable the Timer 2 module.</td>
 863:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     <td>ATmega640, ATmega1280, ATmega1281, ATmega2560, ATmega2561, ATmega128RFA1, ATmega1284RFR2, A
 864:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   </tr>
 865:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
 866:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   <tr>
 867:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****    <td>power_timer3_disable()</td>
 868:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****       <td>Disable the Timer 3 module.</td>
 869:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     <td>ATmega640, ATmega1280, ATmega1281, ATmega2560, ATmega2561, ATmega128RFA1, ATmega1284RFR2, A
 870:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   </tr>
 871:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
 872:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   <tr>
 873:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****    <td>power_timer3_enable()</td>
 874:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****       <td>Enable the Timer 3 module.</td>
 875:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     <td>ATmega640, ATmega1280, ATmega1281, ATmega2560, ATmega2561, ATmega128RFA1, ATmega1284RFR2, A
 876:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   </tr>
 877:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
 878:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   <tr>
 879:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****    <td>power_timer4_disable()</td>
 880:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****       <td>Disable the Timer 4 module.</td>
 881:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     <td>ATmega640, ATmega1280, ATmega1281, ATmega2560, ATmega2561, ATmega128RFA1, ATmega1284RFR2, A
 882:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   </tr>
 883:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
 884:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   <tr>
 885:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****    <td>power_timer4_enable()</td>
 886:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****       <td>Enable the Timer 4 module.</td>
 887:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     <td>ATmega640, ATmega1280, ATmega1281, ATmega2560, ATmega2561, ATmega128RFA1, ATmega1284RFR2, A
 888:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   </tr>
 889:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
 890:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   <tr>
 891:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****    <td>power_timer5_disable()</td>
 892:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     <td> Enter Description Here </td>
 893:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     <td>ATmega640, ATmega1280, ATmega1281, ATmega2560, ATmega2561, ATmega128RFA1, ATmega1284RFR2, A
 894:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   </tr>
 895:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
 896:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   <tr>
 897:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****    <td>power_timer5_enable()</td>
 898:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     <td> Enter Description Here </td>
 899:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     <td>ATmega640, ATmega1280, ATmega1281, ATmega2560, ATmega2561, ATmega128RFA1, ATmega1284RFR2, A
 900:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   </tr>
 901:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
 902:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   <tr>
 903:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****    <td>power_timermodulator_disable()</td>
 904:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****      <td> Disable the TIMERMODULATOR module </td>
 905:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     <td>ATA5790, ATA5790N, ATA5795</td>
 906:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   </tr>
 907:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
 908:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   <tr>
 909:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****    <td>power_timermodulator_enable()</td>
 910:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****      <td> Enable the TIMERMODULATOR module </td>
 911:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     <td>ATA5790, ATA5790N, ATA5795</td>
 912:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   </tr>
 913:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
 914:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   <tr>
 915:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****    <td>power_transceiver_disable()</td>
 916:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     <td> Disable transceiver module </td>
 917:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     <td>ATmega1284RFR2, ATmega2564RFR2, ATmega644RFR2, ATmega256RFR2, ATmega128RFR2, ATmega64RFR2, 
 918:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   </tr>
 919:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
 920:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   <tr>
 921:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****    <td>power_transceiver_enable()</td>
 922:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     <td> Enable transceiver module </td>
 923:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     <td>ATmega1284RFR2, ATmega2564RFR2, ATmega644RFR2, ATmega256RFR2, ATmega128RFR2, ATmega64RFR2, 
 924:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   </tr>
 925:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
 926:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   <tr>
 927:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****    <td>power_transmit_dsp_control_disable()</td>
 928:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****      <td>Disable Transmit DSP control module</td>
 929:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     <td>ATA5831</td>
 930:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   </tr>
 931:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
 932:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   <tr>
 933:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****    <td>power_transmit_dsp_control_enable()</td>
 934:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****      <td>Enable Transmit DSP control module</td>
 935:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     <td>ATA5831</td>
 936:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   </tr>
 937:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
 938:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   <tr>
 939:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****    <td>power_twi_disable()</td>
 940:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****       <td>Disable the Two Wire Interface module.</td>
 941:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     <td>ATmega640, ATmega1280, ATmega1281, ATmega2560, ATmega2561, ATmega128RFA1, ATmega1284RFR2, A
 942:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   </tr>
 943:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
 944:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   <tr>
 945:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****    <td>power_twi_enable()</td>
 946:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****       <td>Enable the Two Wire Interface module.</td>
 947:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     <td>ATmega640, ATmega1280, ATmega1281, ATmega2560, ATmega2561, ATmega128RFA1, ATmega1284RFR2, A
 948:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   </tr>
 949:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
 950:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   <tr>
 951:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****    <td>power_twic_disable()</td>
 952:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****      <td>Disable the Two Wire Interface module on PortC </td>
 953:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     <td>ATxmega16C4, ATxmega32C4, ATxmega64C3, ATxmega128C3, ATxmega192C3, ATxmega256C3, ATxmega16A
 954:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   </tr>
 955:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
 956:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   <tr>
 957:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****    <td>power_twic_enable()</td>
 958:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****      <td>Enable the Two Wire Interface module on PortC </td>
 959:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     <td>ATxmega16C4, ATxmega32C4, ATxmega64C3, ATxmega128C3, ATxmega192C3, ATxmega256C3, ATxmega16A
 960:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   </tr>
 961:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
 962:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   <tr>
 963:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****    <td>power_twid_disable()</td>
 964:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****      <td>Disable the Two Wire Interface module on PortD </td>
 965:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     <td>ATxmega16A4, ATxmega16A4U, ATxmega16D4, ATxmega32A4, ATxmega32A4U, ATxmega32D4, ATxmega64A1
 966:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   </tr>
 967:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
 968:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   <tr>
 969:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****    <td>power_twid_enable()</td>
 970:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****      <td>Enable the Two Wire Interface module on PortD </td>
 971:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     <td>ATxmega16A4, ATxmega16A4U, ATxmega16D4, ATxmega32A4, ATxmega32A4U, ATxmega32D4, ATxmega64A1
 972:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   </tr>
 973:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
 974:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   <tr>
 975:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****    <td>power_twie_disable()</td>
 976:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****      <td>Disable the Two Wire Interface module on PortE </td>
 977:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     <td>ATxmega16C4, ATxmega32C4, ATxmega64C3, ATxmega128C3, ATxmega192C3, ATxmega256C3, ATxmega16A
 978:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   </tr>
 979:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
 980:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   <tr>
 981:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****    <td>power_twie_enable()</td>
 982:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****      <td>Enable the Two Wire Interface module on PortE </td>
 983:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     <td>ATxmega16C4, ATxmega32C4, ATxmega64C3, ATxmega128C3, ATxmega192C3, ATxmega256C3, ATxmega16A
 984:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   </tr>
 985:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
 986:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   <tr>
 987:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****    <td>power_twif_disable()</td>
 988:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****      <td>Disable the Two Wire Interface module on PortF </td>
 989:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     <td>ATxmega16A4, ATxmega16A4U, ATxmega16D4, ATxmega32A4, ATxmega32A4U, ATxmega32D4, ATxmega64A1
 990:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   </tr>
 991:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
 992:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   <tr>
 993:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****    <td>power_twif_enable()</td>
 994:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****      <td>Disable the Two Wire Interface module on PortF </td>
 995:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     <td>ATxmega16A4, ATxmega16A4U, ATxmega16D4, ATxmega32A4, ATxmega32A4U, ATxmega32D4, ATxmega64A1
 996:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   </tr>
 997:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
 998:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   <tr>
 999:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****    <td>power_tx_modulator_disable()</td>
1000:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****      <td>Disable Tx modulator</td>
1001:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     <td>ATA5831</td>
1002:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   </tr>
1003:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
1004:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   <tr>
1005:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****    <td>power_tx_modulator_enable()</td>
1006:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****      <td>Enable Tx modulator</td>
1007:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     <td>ATA5831</td>
1008:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   </tr>
1009:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
1010:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   <tr>
1011:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****    <td>power_usart0_disable()</td>
1012:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****       <td>Disable the USART 0 module.</td>
1013:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     <td>ATmega640, ATmega1280, ATmega1281, ATmega2560, ATmega2561, ATmega128RFA1, ATmega1284RFR2, A
1014:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   </tr>
1015:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
1016:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   <tr>
1017:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****    <td>power_usart0_enable()</td>
1018:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****       <td>Enable the USART 0 module.</td>
1019:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     <td>ATmega640, ATmega1280, ATmega1281, ATmega2560, ATmega2561, ATmega128RFA1, ATmega1284RFR2, A
1020:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   </tr>
1021:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
1022:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   <tr>
1023:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****    <td>power_usart1_disable()</td>
1024:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****       <td>Disable the USART 1 module.</td>
1025:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     <td>ATmega640, ATmega1280, ATmega1281, ATmega2560, ATmega2561, ATmega128RFA1, ATmega1284RFR2, A
1026:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   </tr>
1027:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
1028:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   <tr>
1029:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****    <td>power_usart1_enable()</td>
1030:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****       <td>Enable the USART 1 module.</td>
1031:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     <td>ATmega640, ATmega1280, ATmega1281, ATmega2560, ATmega2561, ATmega128RFA1, ATmega1284RFR2, A
1032:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   </tr>
1033:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
1034:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   <tr>
1035:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****    <td>power_usart2_disable()</td>
1036:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****       <td>Disable the USART 2 module.</td>
1037:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     <td>ATmega640, ATmega1280, ATmega1281, ATmega2560, ATmega2561</td>
1038:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   </tr>
1039:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
1040:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   <tr>
1041:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****    <td>power_usart2_enable()</td>
1042:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****       <td>Enable the USART 2 module.</td>
1043:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     <td>ATmega640, ATmega1280, ATmega1281, ATmega2560, ATmega2561</td>
1044:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   </tr>
1045:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
1046:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   <tr>
1047:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****    <td>power_usart3_disable()</td>
1048:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****       <td>Disable the USART 3 module.</td>
1049:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     <td>ATmega640, ATmega1280, ATmega1281, ATmega2560, ATmega2561</td>
1050:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   </tr>
1051:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
1052:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   <tr>
1053:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****    <td>power_usart3_enable()</td>
1054:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****       <td>Enable the USART 3 module.</td>
1055:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     <td>ATmega640, ATmega1280, ATmega1281, ATmega2560, ATmega2561</td>
1056:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   </tr>
1057:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
1058:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   <tr>
1059:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****    <td>power_usart_disable()</td>
1060:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****       <td>Disable the USART module.</td>
1061:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     <td>AT90PWM2, AT90PWM2B, AT90PWM3, AT90PWM3B, AT90PWM216, AT90PWM316</td>
1062:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   </tr>
1063:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
1064:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   <tr>
1065:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****    <td>power_usart_enable()</td>
1066:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****       <td>Enable the USART module.</td>
1067:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     <td>AT90PWM2, AT90PWM2B, AT90PWM3, AT90PWM3B, AT90PWM216, AT90PWM316</td>
1068:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   </tr>
1069:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
1070:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   <tr>
1071:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****    <td>power_usartc0_disable()</td>
1072:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****      <td> Disable the USART0 module on PortC </td>
1073:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     <td>ATxmega16C4, ATxmega32C4, ATxmega64C3, ATxmega128C3, ATxmega192C3, ATxmega256C3, ATxmega16A
1074:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   </tr>
1075:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
1076:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   <tr>
1077:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****    <td>power_usartc0_enable()</td>
1078:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****      <td> Enable the USART0 module on PortC </td>
1079:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     <td>ATxmega16C4, ATxmega32C4, ATxmega64C3, ATxmega128C3, ATxmega192C3, ATxmega256C3, ATxmega16A
1080:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   </tr>
1081:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
1082:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   <tr>
1083:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****    <td>power_usartc1_disable()</td>
1084:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****      <td> Disable the USART1 module on PortC </td>
1085:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     <td>ATxmega16A4, ATxmega16A4U, ATxmega32A4U, ATxmega32A4, ATxmega64A1, ATxmega64A1U, ATxmega64A
1086:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   </tr>
1087:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
1088:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   <tr>
1089:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****    <td>power_usartc1_enable()</td>
1090:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****      <td> Enable the USART1 module on PortC </td>
1091:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     <td>ATxmega16A4, ATxmega16A4U, ATxmega32A4U, ATxmega32A4, ATxmega64A1, ATxmega64A1U, ATxmega64A
1092:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   </tr>
1093:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
1094:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   <tr>
1095:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****    <td>power_usartd0_disable()</td>
1096:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****      <td> Disable the USART0 module on PortD </td>
1097:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     <td>ATxmega16C4, ATxmega32C4, ATxmega64C3, ATxmega128C3, ATxmega192C3, ATxmega256C3, ATxmega16A
1098:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   </tr>
1099:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
1100:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   <tr>
1101:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****    <td>power_usartd0_enable()</td>
1102:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****      <td> Enable the USART0 module on PortD </td>
1103:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     <td>ATxmega16C4, ATxmega32C4, ATxmega64C3, ATxmega128C3, ATxmega192C3, ATxmega256C3, ATxmega16A
1104:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   </tr>
1105:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
1106:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   <tr>
1107:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****    <td>power_usartd1_disable()</td>
1108:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****      <td> Disable the USART1 module on PortD </td>
1109:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     <td>ATxmega16A4, ATxmega16A4U, ATxmega32A4U, ATxmega32A4, ATxmega64A1, ATxmega64A1U, ATxmega64A
1110:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   </tr>
1111:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
1112:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   <tr>
1113:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****    <td>power_usartd1_enable()</td>
1114:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****      <td> Enable the USART1 module on PortE </td>
1115:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     <td>ATxmega16A4, ATxmega16A4U, ATxmega32A4U, ATxmega32A4, ATxmega64A1, ATxmega64A1U, ATxmega64A
1116:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   </tr>
1117:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
1118:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   <tr>
1119:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****    <td>power_usarte0_disable()</td>
1120:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****      <td> Disable the USART0 module on PortE </td>
1121:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     <td>ATxmega16C4, ATxmega32C4, ATxmega64C3, ATxmega128C3, ATxmega192C3, ATxmega256C3, ATxmega16A
1122:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   </tr>
1123:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
1124:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   <tr>
1125:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****    <td>power_usarte0_enable()</td>
1126:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****      <td> Enable the USART0 module on PortE </td>
1127:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     <td>ATxmega16C4, ATxmega32C4, ATxmega64C3, ATxmega128C3, ATxmega192C3, ATxmega256C3, ATxmega16A
1128:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   </tr>
1129:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
1130:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   <tr>
1131:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****    <td>power_usarte1_disable()</td>
1132:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****      <td> Disable the USART1 module on PortE </td>
1133:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     <td>ATxmega16A4, ATxmega16A4U, ATxmega32A4U, ATxmega32A4, ATxmega64A1, ATxmega64A1U, ATxmega64A
1134:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   </tr>
1135:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
1136:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   <tr>
1137:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****    <td>power_usarte1_enable()</td>
1138:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****      <td> Enable the USART1 module on PortE </td>
1139:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     <td>ATxmega16A4, ATxmega16A4U, ATxmega32A4U, ATxmega32A4, ATxmega64A1, ATxmega64A1U, ATxmega64A
1140:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   </tr>
1141:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
1142:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   <tr>
1143:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****    <td>power_usartf0_disable()</td>
1144:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****      <td> Disable the USART0 module on PortF </td>
1145:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     <td>ATxmega16C4, ATxmega32C4, ATxmega64C3, ATxmega128C3, ATxmega192C3, ATxmega256C3, ATxmega16A
1146:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   </tr>
1147:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
1148:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   <tr>
1149:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****    <td>power_usartf0_enable()</td>
1150:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****      <td> Enable the USART0 module on PortF </td>
1151:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     <td>ATxmega16C4, ATxmega32C4, ATxmega64C3, ATxmega128C3, ATxmega192C3, ATxmega256C3, ATxmega16A
1152:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   </tr>
1153:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
1154:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   <tr>
1155:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****    <td>power_usartf1_disable()</td>
1156:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****      <td> Disable the USART1 module on PortF </td>
1157:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     <td>ATxmega16A4, ATxmega16A4U, ATxmega32A4U, ATxmega32A4, ATxmega64A1, ATxmega64A1U, ATxmega64A
1158:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   </tr>
1159:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
1160:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   <tr>
1161:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****    <td>power_usartf1_enable()</td>
1162:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****      <td> Enable the USART1 module on PortF </td>
1163:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     <td>ATxmega16A4, ATxmega16A4U, ATxmega32A4U, ATxmega32A4, ATxmega64A1, ATxmega64A1U, ATxmega64A
1164:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   </tr>
1165:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
1166:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   <tr>
1167:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****    <td>power_usb_disable()</td>
1168:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****       <td>Disable the USB module.</td>
1169:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     <td>ATxmega384C3, ATxmega256A3BU, ATxmega16A4U, ATxmega32A4U, ATxmega64A3U, ATxmega64A4U, ATxme
1170:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   </tr>
1171:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
1172:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   <tr>
1173:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****    <td>power_usb_enable()</td>
1174:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****       <td>Enable the USB module.</td>
1175:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     <td>ATxmega384C3, ATxmega256A3BU, ATxmega16A4U, ATxmega32A4U, ATxmega64A3U, ATxmega64A4U, ATxme
1176:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   </tr>
1177:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
1178:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   <tr>
1179:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****    <td>power_usbh_disable()</td>
1180:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****      <td> Disable the USBH module </td>
1181:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     <td>AT90SCR100</td>
1182:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   </tr>
1183:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
1184:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   <tr>
1185:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****    <td>power_usbh_enable()</td>
1186:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****      <td> Enable the USBH module </td>
1187:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     <td>AT90SCR100</td>
1188:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   </tr>
1189:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
1190:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   <tr>
1191:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****    <td>power_usi_disable()</td>
1192:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****       <td>Disable the Universal Serial Interface module.</td>
1193:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     <td>ATtiny24, ATtiny24A, ATtiny44, ATtiny44A, ATtiny84, ATtiny84A, ATtiny25, ATtiny45, ATtiny85
1194:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   </tr>
1195:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
1196:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   <tr>
1197:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****    <td>power_usi_enable()</td>
1198:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****       <td>Enable the Universal Serial Interface module.</td>
1199:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     <td>ATtiny24, ATtiny24A, ATtiny44, ATtiny44A, ATtiny84, ATtiny84A, ATtiny25, ATtiny45, ATtiny85
1200:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   </tr>
1201:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
1202:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   <tr>
1203:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****    <td>power_vadc_disable()</td>
1204:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****       <td>Disable the Voltage ADC module.</td>
1205:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     <td>ATmega406, ATmega32HVB, ATmega32HVBREVB, ATmega16HVB, ATmega16HVBREVB, ATmega26HVG, ATmega4
1206:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   </tr>
1207:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
1208:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   <tr>
1209:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****    <td>power_vadc_enable()</td>
1210:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****       <td>Enable the Voltage ADC module.</td>
1211:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     <td>ATmega406, ATmega32HVB, ATmega32HVBREVB, ATmega16HVB, ATmega16HVBREVB, ATmega26HVG, ATmega4
1212:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   </tr>
1213:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
1214:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   <tr>
1215:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****    <td>power_vmonitor_disable()</td>
1216:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****      <td> Disable the VMONITOR module </td>
1217:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     <td>ATA5790, ATA5790N, ATA5795</td>
1218:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   </tr>
1219:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
1220:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   <tr>
1221:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****    <td>power_vmonitor_enable()</td>
1222:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****      <td> Enable the VMONITOR module </td>
1223:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     <td>ATA5790, ATA5790N, ATA5795</td>
1224:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   </tr>
1225:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
1226:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   <tr>
1227:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****    <td>power_voltage_monitor_disable()</td>
1228:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****      <td>Disable voltage monitor module</td>
1229:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     <td>ATA5831</td>
1230:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   </tr>
1231:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
1232:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   <tr>
1233:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****    <td>power_voltage_monitor_enable()</td>
1234:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****      <td>Enable voltage monitor module</td>
1235:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     <td>ATA5831</td>
1236:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   </tr>
1237:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
1238:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   <tr>
1239:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****    <td>power_vrm_disable()</td>
1240:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****      <td> Disable the VRM module </td>
1241:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     <td>ATmega32HVB, ATmega32HVBREVB, ATmega16HVB, ATmega16HVBREVB, ATmega26HVG, ATmega48HVF</td>
1242:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   </tr>
1243:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
1244:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   <tr>
1245:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****    <td>power_vrm_enable()</td>
1246:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****      <td> Enable the VRM module </td>
1247:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     <td>ATmega32HVB, ATmega32HVBREVB, ATmega16HVB, ATmega16HVBREVB, ATmega26HVG, ATmega48HVF</td>
1248:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   </tr>
1249:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
1250:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   <tr>
1251:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****    <td>power_xcl_disable()</td>
1252:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     <td> Disable XCL module </td>
1253:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     <td>ATxmega32E5, ATxmega16E5, ATxmega8E5</td>
1254:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   </tr>
1255:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
1256:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   <tr>
1257:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****    <td>power_xcl_enable()</td>
1258:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     <td> Enable XCL module </td>
1259:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     <td>ATxmega32E5, ATxmega16E5, ATxmega8E5</td>
1260:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   </tr>
1261:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** </table>
1262:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** </center>
1263:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** </small>
1264:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
1265:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** @} */
1266:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
1267:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** // Xmega A series has AES, EBI and DMA bits
1268:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** // Include any other device on need basis
1269:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #if defined(__AVR_ATxmega16A4__) \
1270:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATxmega16A4U__) \
1271:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATxmega32A4U__) \
1272:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATxmega32A4__) \
1273:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATxmega64A1__) \
1274:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATxmega64A1U__) \
1275:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATxmega64A3__) \
1276:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATxmega64A3U__) \
1277:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATxmega64A4U__) \
1278:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATxmega128A1__) \
1279:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATxmega128A1U__) \
1280:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATxmega128A3__) \
1281:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATxmega128A3U__) \
1282:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATxmega128A4U__) \
1283:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATxmega192A3__) \
1284:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATxmega192A3U__) \
1285:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATxmega256A3__) \
1286:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATxmega256A3U__) \
1287:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATxmega256A3B__) \
1288:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATxmega256A3BU__) \
1289:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATxmega384C3__)
1290:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
1291:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
1292:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_aes_enable()  (PR_PRGEN &= (uint8_t)~(PR_AES_bm))
1293:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_aes_disable() (PR_PRGEN |= (uint8_t)PR_AES_bm)
1294:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
1295:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_ebi_enable()  (PR_PRGEN &= (uint8_t)~(PR_EBI_bm))
1296:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_ebi_disable() (PR_PRGEN |= (uint8_t)PR_EBI_bm)
1297:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
1298:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_dma_enable()    (PR_PRGEN &= (uint8_t)~(PR_DMA_bm))
1299:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_dma_disable()   (PR_PRGEN |= (uint8_t)PR_DMA_bm)
1300:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
1301:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_daca_enable()     (PR_PRPA &= (uint8_t)~(PR_DAC_bm))
1302:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_daca_disable()    (PR_PRPA |= (uint8_t)PR_DAC_bm)
1303:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_dacb_enable()     (PR_PRPB &= (uint8_t)~(PR_DAC_bm))
1304:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_dacb_disable()    (PR_PRPB |= (uint8_t)PR_DAC_bm)
1305:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
1306:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_usartc1_enable()  (PR_PRPC &= (uint8_t)~(PR_USART1_bm))
1307:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_usartc1_disable() (PR_PRPC |= (uint8_t)PR_USART1_bm)
1308:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_usartd1_enable()  (PR_PRPD &= (uint8_t)~(PR_USART1_bm))
1309:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_usartd1_disable() (PR_PRPD |= (uint8_t)PR_USART1_bm)
1310:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_usarte1_enable()  (PR_PRPE &= (uint8_t)~(PR_USART1_bm))
1311:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_usarte1_disable() (PR_PRPE |= (uint8_t)PR_USART1_bm)
1312:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_usartf1_enable()  (PR_PRPF &= (uint8_t)~(PR_USART1_bm))
1313:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_usartf1_disable() (PR_PRPF |= (uint8_t)PR_USART1_bm)
1314:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
1315:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #if defined(__AVR_ATxmega384C3__) \
1316:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATxmega256A3BU__) \
1317:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATxmega16A4U__) \
1318:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATxmega32A4U__) \
1319:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATxmega64A3U__) \
1320:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATxmega64A4U__) \
1321:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATxmega128A3U__) \
1322:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATxmega128A4U__) \
1323:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATxmega192A3U__) \
1324:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATxmega256A3U__) 
1325:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
1326:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_usb_enable()   (PR_PRGEN &= (uint8_t)~(PR_USB_bm))
1327:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_usb_disable()  (PR_PRGEN &= (uint8_t)(PR_USB_bm))
1328:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
1329:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_all_enable() \
1330:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** do { \
1331:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     PR_PRGEN &= (uint8_t)~(PR_AES_bm|PR_EBI_bm|PR_RTC_bm|PR_EVSYS_bm|PR_DMA_bm|PR_USB_bm); \
1332:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     PR_PRPA &= (uint8_t)~(PR_DAC_bm|PR_ADC_bm|PR_AC_bm); \
1333:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     PR_PRPB &= (uint8_t)~(PR_DAC_bm|PR_ADC_bm|PR_AC_bm); \
1334:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     PR_PRPC &= (uint8_t)~(PR_TWI_bm|PR_USART1_bm|PR_USART0_bm|PR_SPI_bm|PR_HIRES_bm|PR_TC1_bm|PR_TC
1335:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     PR_PRPD &= (uint8_t)~(PR_TWI_bm|PR_USART1_bm|PR_USART0_bm|PR_SPI_bm|PR_HIRES_bm|PR_TC1_bm|PR_TC
1336:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     PR_PRPE &= (uint8_t)~(PR_TWI_bm|PR_USART1_bm|PR_USART0_bm|PR_SPI_bm|PR_HIRES_bm|PR_TC1_bm|PR_TC
1337:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     PR_PRPF &= (uint8_t)~(PR_TWI_bm|PR_USART1_bm|PR_USART0_bm|PR_SPI_bm|PR_HIRES_bm|PR_TC1_bm|PR_TC
1338:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** } while(0)
1339:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
1340:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_all_disable() \
1341:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** do { \
1342:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     PR_PRGEN |= (uint8_t)(PR_AES_bm|PR_EBI_bm|PR_RTC_bm|PR_EVSYS_bm|PR_DMA_bm|PR_USB_bm); \
1343:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     PR_PRPA |= (uint8_t)(PR_DAC_bm|PR_ADC_bm|PR_AC_bm); \
1344:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     PR_PRPB |= (uint8_t)(PR_DAC_bm|PR_ADC_bm|PR_AC_bm); \
1345:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     PR_PRPC |= (uint8_t)(PR_TWI_bm|PR_USART1_bm|PR_USART0_bm|PR_SPI_bm|PR_HIRES_bm|PR_TC1_bm|PR_TC0
1346:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     PR_PRPD |= (uint8_t)(PR_TWI_bm|PR_USART1_bm|PR_USART0_bm|PR_SPI_bm|PR_HIRES_bm|PR_TC1_bm|PR_TC0
1347:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     PR_PRPE |= (uint8_t)(PR_TWI_bm|PR_USART1_bm|PR_USART0_bm|PR_SPI_bm|PR_HIRES_bm|PR_TC1_bm|PR_TC0
1348:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     PR_PRPF |= (uint8_t)(PR_TWI_bm|PR_USART1_bm|PR_USART0_bm|PR_SPI_bm|PR_HIRES_bm|PR_TC1_bm|PR_TC0
1349:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** } while(0)
1350:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
1351:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #else
1352:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
1353:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_all_enable() \
1354:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** do { \
1355:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     PR_PRGEN &= (uint8_t)~(PR_AES_bm|PR_EBI_bm|PR_RTC_bm|PR_EVSYS_bm|PR_DMA_bm); \
1356:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     PR_PRPA &= (uint8_t)~(PR_DAC_bm|PR_ADC_bm|PR_AC_bm); \
1357:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     PR_PRPB &= (uint8_t)~(PR_DAC_bm|PR_ADC_bm|PR_AC_bm); \
1358:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     PR_PRPC &= (uint8_t)~(PR_TWI_bm|PR_USART1_bm|PR_USART0_bm|PR_SPI_bm|PR_HIRES_bm|PR_TC1_bm|PR_TC
1359:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     PR_PRPD &= (uint8_t)~(PR_TWI_bm|PR_USART1_bm|PR_USART0_bm|PR_SPI_bm|PR_HIRES_bm|PR_TC1_bm|PR_TC
1360:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     PR_PRPE &= (uint8_t)~(PR_TWI_bm|PR_USART1_bm|PR_USART0_bm|PR_SPI_bm|PR_HIRES_bm|PR_TC1_bm|PR_TC
1361:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     PR_PRPF &= (uint8_t)~(PR_TWI_bm|PR_USART1_bm|PR_USART0_bm|PR_SPI_bm|PR_HIRES_bm|PR_TC1_bm|PR_TC
1362:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** } while(0)
1363:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
1364:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
1365:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_all_disable() \
1366:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** do { \
1367:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     PR_PRGEN|= (uint8_t)(PR_AES_bm|PR_EBI_bm|PR_RTC_bm|PR_EVSYS_bm|PR_DMA_bm); \
1368:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     PR_PRPA |= (uint8_t)(PR_DAC_bm|PR_ADC_bm|PR_AC_bm); \
1369:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     PR_PRPB |= (uint8_t)(PR_DAC_bm|PR_ADC_bm|PR_AC_bm); \
1370:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     PR_PRPC |= (uint8_t)(PR_TWI_bm|PR_USART1_bm|PR_USART0_bm|PR_SPI_bm|PR_HIRES_bm|PR_TC1_bm|PR_TC0
1371:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     PR_PRPD |= (uint8_t)(PR_TWI_bm|PR_USART1_bm|PR_USART0_bm|PR_SPI_bm|PR_HIRES_bm|PR_TC1_bm|PR_TC0
1372:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     PR_PRPE |= (uint8_t)(PR_TWI_bm|PR_USART1_bm|PR_USART0_bm|PR_SPI_bm|PR_HIRES_bm|PR_TC1_bm|PR_TC0
1373:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     PR_PRPF |= (uint8_t)(PR_TWI_bm|PR_USART1_bm|PR_USART0_bm|PR_SPI_bm|PR_HIRES_bm|PR_TC1_bm|PR_TC0
1374:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** } while(0)
1375:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #endif
1376:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
1377:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #endif
1378:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
1379:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #if defined(__AVR_ATxmega16C4__) \
1380:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATxmega32C4__) \
1381:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATxmega64C3__) \
1382:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATxmega128C3__) \
1383:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATxmega192C3__) \
1384:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATxmega256C3__) 
1385:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
1386:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_usb_enable()   (PR_PRGEN &= (uint8_t)~(PR_USB_bm))
1387:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_usb_disable()  (PR_PRGEN &= (uint8_t)(PR_USB_bm))
1388:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
1389:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_aes_enable()  (PR_PRGEN &= (uint8_t)~(PR_AES_bm))
1390:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_aes_disable() (PR_PRGEN |= (uint8_t)PR_AES_bm)
1391:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
1392:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_rtc_enable()  (PR_PRGEN &= (uint8_t)~(PR_RTC_bm))
1393:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_rtc_disable() (PR_PRGEN |= (uint8_t)PR_RTC_bm)
1394:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
1395:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_evsys_enable()    (PR_PRGEN &= (uint8_t)~(PR_EVSYS_bm))
1396:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_evsys_disable()   (PR_PRGEN |= (uint8_t)PR_EVSYS_bm)
1397:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
1398:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_dma_enable()    (PR_PRGEN &= (uint8_t)~(PR_DMA_bm))
1399:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_dma_disable()   (PR_PRGEN |= (uint8_t)PR_DMA_bm)
1400:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
1401:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_adca_enable()     (PR_PRPA &= (uint8_t)~(PR_ADC_bm))
1402:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_adca_disable()    (PR_PRPA |= (uint8_t)PR_ADC_bm)
1403:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
1404:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_aca_enable()      (PR_PRPA &= (uint8_t)~(PR_AC_bm))
1405:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_aca_disable()     (PR_PRPA |= (uint8_t)PR_AC_bm)
1406:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
1407:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_twic_enable()     (PR_PRPC &= (uint8_t)~(PR_TWI_bm))
1408:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_twic_disable()    (PR_PRPC |= (uint8_t)PR_TWI_bm)
1409:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_twie_enable()     (PR_PRPE &= (uint8_t)~(PR_TWI_bm))
1410:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_twie_disable()    (PR_PRPE |= (uint8_t)PR_TWI_bm)
1411:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
1412:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_usartc1_enable()  (PR_PRPC &= (uint8_t)~(PR_USART1_bm))
1413:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_usartc1_disable() (PR_PRPC |= (uint8_t)PR_USART1_bm)
1414:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
1415:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_usartc0_enable()  (PR_PRPC &= (uint8_t)~(PR_USART0_bm))
1416:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_usartc0_disable() (PR_PRPC |= (uint8_t)PR_USART0_bm)
1417:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_usartd0_enable()  (PR_PRPD &= (uint8_t)~(PR_USART0_bm))
1418:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_usartd0_disable() (PR_PRPD |= (uint8_t)PR_USART0_bm)
1419:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_usarte0_enable()  (PR_PRPE &= (uint8_t)~(PR_USART0_bm))
1420:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_usarte0_disable() (PR_PRPE |= (uint8_t)PR_USART0_bm)
1421:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_usartf0_enable()  (PR_PRPF &= (uint8_t)~(PR_USART0_bm))
1422:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_usartf0_disable() (PR_PRPF |= (uint8_t)PR_USART0_bm)
1423:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
1424:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_spic_enable()     (PR_PRPC &= (uint8_t)~(PR_SPI_bm))
1425:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_spic_disable()    (PR_PRPC |= (uint8_t)PR_SPI_bm)
1426:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_spid_enable()     (PR_PRPD &= (uint8_t)~(PR_SPI_bm))
1427:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_spid_disable()    (PR_PRPD |= (uint8_t)PR_SPI_bm)
1428:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
1429:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_hiresc_enable()   (PR_PRPC &= (uint8_t)~(PR_HIRES_bm))
1430:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_hiresc_disable()  (PR_PRPC |= (uint8_t)PR_HIRES_bm)
1431:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
1432:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_tc1c_enable()     (PR_PRPC &= (uint8_t)~(PR_TC1_bm))
1433:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_tc1c_disable()    (PR_PRPC |= (uint8_t)PR_TC1_bm)
1434:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
1435:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_tc0c_enable()     (PR_PRPC &= (uint8_t)~(PR_TC0_bm))
1436:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_tc0c_disable()    (PR_PRPC |= (uint8_t)PR_TC0_bm)
1437:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_tc0d_enable()     (PR_PRPD &= (uint8_t)~(PR_TC0_bm))
1438:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_tc0d_disable()    (PR_PRPD |= (uint8_t)PR_TC0_bm)
1439:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_tc0e_enable()     (PR_PRPE &= (uint8_t)~(PR_TC0_bm))
1440:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_tc0e_disable()    (PR_PRPE |= (uint8_t)PR_TC0_bm)
1441:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_tc0f_enable()     (PR_PRPF &= (uint8_t)~(PR_TC0_bm))
1442:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_tc0f_disable()    (PR_PRPF |= (uint8_t)PR_TC0_bm)
1443:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
1444:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_all_enable() \
1445:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** do { \
1446:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     PR_PRGEN &= (uint8_t)~(PR_USB_bm|PR_AES_bm|PR_DMA_bm|PR_RTC_bm|PR_EVSYS_bm); \
1447:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     PR_PRPA &= (uint8_t)~(PR_ADC_bm|PR_AC_bm); \
1448:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     PR_PRPC &= (uint8_t)~(PR_TWI_bm|PR_USART0_bm|PR_USART1_bm|PR_SPI_bm|PR_HIRES_bm|PR_TC1_bm|PR_TC
1449:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     PR_PRPD &= (uint8_t)~(PR_USART0_bm|PR_SPI_bm|PR_TC0_bm); \
1450:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     PR_PRPE &= (uint8_t)~(PR_TWI_bm|PR_USART0_bm|PR_TC0_bm); \
1451:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     PR_PRPF &= (uint8_t)~(PR_USART0_bm|PR_TC0_bm); \
1452:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     } while(0)
1453:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
1454:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_all_disable() \
1455:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** do { \
1456:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     PR_PRGEN |= (uint8_t)(PR_USB_bm|PR_AES_bm|PR_DMA_bm|PR_RTC_bm|PR_EVSYS_bm); \
1457:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     PR_PRPA |= (uint8_t)(PR_ADC_bm|PR_AC_bm); \
1458:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     PR_PRPC |= (uint8_t)(PR_TWI_bm|PR_USART0_bm|PR_USART1_bm|PR_SPI_bm|PR_HIRES_bm|PR_TC1_bm|PR_TC0
1459:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     PR_PRPD |= (uint8_t)(PR_USART0_bm|PR_SPI_bm|PR_TC0_bm); \
1460:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     PR_PRPE |= (uint8_t)(PR_TWI_bm|PR_USART0_bm|PR_TC0_bm); \
1461:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     PR_PRPF |= (uint8_t)(PR_USART0_bm|PR_TC0_bm); \
1462:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     } while(0)
1463:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
1464:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #endif
1465:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
1466:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #if defined(__AVR_ATxmega16A4__) \
1467:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATxmega16A4U__) \
1468:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATxmega16D4__) \
1469:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATxmega32A4__) \
1470:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATxmega32A4U__) \
1471:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATxmega32D4__) \
1472:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATxmega64A1__) \
1473:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATxmega64A1U__) \
1474:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATxmega64A3__) \
1475:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATxmega64A3U__) \
1476:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATxmega64A4U__) \
1477:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATxmega64D3__) \
1478:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATxmega128A1__) \
1479:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATxmega128A1U__) \
1480:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATxmega128A3__) \
1481:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATxmega128A3U__) \
1482:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATxmega128A4U__) \
1483:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATxmega128D3__) \
1484:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATxmega192A3__) \
1485:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATxmega192A3U__) \
1486:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATxmega192D3__) \
1487:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATxmega256A3__) \
1488:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATxmega256A3U__) \
1489:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATxmega256A3B__) \
1490:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATxmega256A3BU__) \
1491:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATxmega384C3__)
1492:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
1493:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
1494:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_rtc_enable()  (PR_PRGEN &= (uint8_t)~(PR_RTC_bm))
1495:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_rtc_disable() (PR_PRGEN |= (uint8_t)PR_RTC_bm)
1496:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
1497:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_evsys_enable()    (PR_PRGEN &= (uint8_t)~(PR_EVSYS_bm))
1498:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_evsys_disable()   (PR_PRGEN |= (uint8_t)PR_EVSYS_bm)
1499:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
1500:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_adca_enable()     (PR_PRPA &= (uint8_t)~(PR_ADC_bm))
1501:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_adca_disable()    (PR_PRPA |= (uint8_t)PR_ADC_bm)
1502:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_adcb_enable()     (PR_PRPB &= (uint8_t)~(PR_ADC_bm))
1503:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_adcb_disable()    (PR_PRPB |= (uint8_t)PR_ADC_bm)
1504:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
1505:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_aca_enable()      (PR_PRPA &= (uint8_t)~(PR_AC_bm))
1506:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_aca_disable()     (PR_PRPA |= (uint8_t)PR_AC_bm)
1507:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_acb_enable()      (PR_PRPB &= (uint8_t)~(PR_AC_bm))
1508:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_acb_disable()     (PR_PRPB |= (uint8_t)PR_AC_bm)
1509:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
1510:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_twic_enable()     (PR_PRPC &= (uint8_t)~(PR_TWI_bm))
1511:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_twic_disable()    (PR_PRPC |= (uint8_t)PR_TWI_bm)
1512:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_twid_enable()     (PR_PRPD &= (uint8_t)~(PR_TWI_bm))
1513:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_twid_disable()    (PR_PRPD |= (uint8_t)PR_TWI_bm)
1514:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_twie_enable()     (PR_PRPE &= (uint8_t)~(PR_TWI_bm))
1515:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_twie_disable()    (PR_PRPE |= (uint8_t)PR_TWI_bm)
1516:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_twif_enable()     (PR_PRPF &= (uint8_t)~(PR_TWI_bm))
1517:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_twif_disable()    (PR_PRPF |= (uint8_t)PR_TWI_bm)
1518:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
1519:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_usartc0_enable()  (PR_PRPC &= (uint8_t)~(PR_USART0_bm))
1520:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_usartc0_disable() (PR_PRPC |= (uint8_t)PR_USART0_bm)
1521:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_usartd0_enable()  (PR_PRPD &= (uint8_t)~(PR_USART0_bm))
1522:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_usartd0_disable() (PR_PRPD |= (uint8_t)PR_USART0_bm)
1523:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_usarte0_enable()  (PR_PRPE &= (uint8_t)~(PR_USART0_bm))
1524:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_usarte0_disable() (PR_PRPE |= (uint8_t)PR_USART0_bm)
1525:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_usartf0_enable()  (PR_PRPF &= (uint8_t)~(PR_USART0_bm))
1526:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_usartf0_disable() (PR_PRPF |= (uint8_t)PR_USART0_bm)
1527:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
1528:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_spic_enable()     (PR_PRPC &= (uint8_t)~(PR_SPI_bm))
1529:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_spic_disable()    (PR_PRPC |= (uint8_t)PR_SPI_bm)
1530:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_spid_enable()     (PR_PRPD &= (uint8_t)~(PR_SPI_bm))
1531:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_spid_disable()    (PR_PRPD |= (uint8_t)PR_SPI_bm)
1532:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_spie_enable()     (PR_PRPE &= (uint8_t)~(PR_SPI_bm))
1533:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_spie_disable()    (PR_PRPE |= (uint8_t)PR_SPI_bm)
1534:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_spif_enable()     (PR_PRPF &= (uint8_t)~(PR_SPI_bm))
1535:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_spif_disable()    (PR_PRPF |= (uint8_t)PR_SPI_bm)
1536:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
1537:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_hiresc_enable()   (PR_PRPC &= (uint8_t)~(PR_HIRES_bm))
1538:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_hiresc_disable()  (PR_PRPC |= (uint8_t)PR_HIRES_bm)
1539:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_hiresd_enable()   (PR_PRPD &= (uint8_t)~(PR_HIRES_bm))
1540:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_hiresd_disable()  (PR_PRPD |= (uint8_t)PR_HIRES_bm)
1541:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_hirese_enable()   (PR_PRPE &= (uint8_t)~(PR_HIRES_bm))
1542:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_hirese_disable()  (PR_PRPE |= (uint8_t)PR_HIRES_bm)
1543:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_hiresf_enable()   (PR_PRPF &= (uint8_t)~(PR_HIRES_bm))
1544:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_hiresf_disable()  (PR_PRPF |= (uint8_t)PR_HIRES_bm)
1545:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
1546:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_tc1c_enable()     (PR_PRPC &= (uint8_t)~(PR_TC1_bm))
1547:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_tc1c_disable()    (PR_PRPC |= (uint8_t)PR_TC1_bm)
1548:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_tc1d_enable()     (PR_PRPD &= (uint8_t)~(PR_TC1_bm))
1549:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_tc1d_disable()    (PR_PRPD |= (uint8_t)PR_TC1_bm)
1550:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_tc1e_enable()     (PR_PRPE &= (uint8_t)~(PR_TC1_bm))
1551:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_tc1e_disable()    (PR_PRPE |= (uint8_t)PR_TC1_bm)
1552:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_tc1f_enable()     (PR_PRPF &= (uint8_t)~(PR_TC1_bm))
1553:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_tc1f_disable()    (PR_PRPF |= (uint8_t)PR_TC1_bm)
1554:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
1555:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_tc0c_enable()     (PR_PRPC &= (uint8_t)~(PR_TC0_bm))
1556:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_tc0c_disable()    (PR_PRPC |= (uint8_t)PR_TC0_bm)
1557:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_tc0d_enable()     (PR_PRPD &= (uint8_t)~(PR_TC0_bm))
1558:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_tc0d_disable()    (PR_PRPD |= (uint8_t)PR_TC0_bm)
1559:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_tc0e_enable()     (PR_PRPE &= (uint8_t)~(PR_TC0_bm))
1560:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_tc0e_disable()    (PR_PRPE |= (uint8_t)PR_TC0_bm)
1561:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_tc0f_enable()     (PR_PRPF &= (uint8_t)~(PR_TC0_bm))
1562:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_tc0f_disable()    (PR_PRPF |= (uint8_t)PR_TC0_bm)
1563:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
1564:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #endif
1565:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
1566:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #if defined(__AVR_ATxmega64D4__) \
1567:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATxmega128D4__) 
1568:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
1569:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_rtc_enable()  (PR_PRGEN &= (uint8_t)~(PR_RTC_bm))
1570:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_rtc_disable() (PR_PRGEN |= (uint8_t)PR_RTC_bm)
1571:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
1572:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_evsys_enable()    (PR_PRGEN &= (uint8_t)~(PR_EVSYS_bm))
1573:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_evsys_disable()   (PR_PRGEN |= (uint8_t)PR_EVSYS_bm)
1574:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
1575:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_adca_enable()     (PR_PRPA &= (uint8_t)~(PR_ADC_bm))
1576:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_adca_disable()    (PR_PRPA |= (uint8_t)PR_ADC_bm)
1577:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
1578:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_aca_enable()      (PR_PRPA &= (uint8_t)~(PR_AC_bm))
1579:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_aca_disable()     (PR_PRPA |= (uint8_t)PR_AC_bm)
1580:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
1581:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_twic_enable()     (PR_PRPC &= (uint8_t)~(PR_TWI_bm))
1582:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_twic_disable()    (PR_PRPC |= (uint8_t)PR_TWI_bm)
1583:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_twie_enable()     (PR_PRPE &= (uint8_t)~(PR_TWI_bm))
1584:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_twie_disable()    (PR_PRPE |= (uint8_t)PR_TWI_bm)
1585:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
1586:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_usartc0_enable()  (PR_PRPC &= (uint8_t)~(PR_USART0_bm))
1587:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_usartc0_disable() (PR_PRPC |= (uint8_t)PR_USART0_bm)
1588:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_usartd0_enable()  (PR_PRPD &= (uint8_t)~(PR_USART0_bm))
1589:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_usartd0_disable() (PR_PRPD |= (uint8_t)PR_USART0_bm)
1590:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_usarte0_enable()  (PR_PRPE &= (uint8_t)~(PR_USART0_bm))
1591:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_usarte0_disable() (PR_PRPE |= (uint8_t)PR_USART0_bm)
1592:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_usartf0_enable()  (PR_PRPF &= (uint8_t)~(PR_USART0_bm))
1593:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_usartf0_disable() (PR_PRPF |= (uint8_t)PR_USART0_bm)
1594:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
1595:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_spic_enable()     (PR_PRPC &= (uint8_t)~(PR_SPI_bm))
1596:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_spic_disable()    (PR_PRPC |= (uint8_t)PR_SPI_bm)
1597:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_spid_enable()     (PR_PRPD &= (uint8_t)~(PR_SPI_bm))
1598:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_spid_disable()    (PR_PRPD |= (uint8_t)PR_SPI_bm)
1599:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
1600:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_hiresc_enable()   (PR_PRPC &= (uint8_t)~(PR_HIRES_bm))
1601:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_hiresc_disable()  (PR_PRPC |= (uint8_t)PR_HIRES_bm)
1602:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
1603:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_tc1c_enable()     (PR_PRPC &= (uint8_t)~(PR_TC1_bm))
1604:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_tc1c_disable()    (PR_PRPC |= (uint8_t)PR_TC1_bm)
1605:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
1606:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_tc0c_enable()     (PR_PRPC &= (uint8_t)~(PR_TC0_bm))
1607:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_tc0c_disable()    (PR_PRPC |= (uint8_t)PR_TC0_bm)
1608:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_tc0d_enable()     (PR_PRPD &= (uint8_t)~(PR_TC0_bm))
1609:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_tc0d_disable()    (PR_PRPD |= (uint8_t)PR_TC0_bm)
1610:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_tc0e_enable()     (PR_PRPE &= (uint8_t)~(PR_TC0_bm))
1611:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_tc0e_disable()    (PR_PRPE |= (uint8_t)PR_TC0_bm)
1612:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_tc0f_enable()     (PR_PRPF &= (uint8_t)~(PR_TC0_bm))
1613:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_tc0f_disable()    (PR_PRPF |= (uint8_t)PR_TC0_bm)
1614:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
1615:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_all_enable() \
1616:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** do { \
1617:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     PR_PRGEN &= (uint8_t)~(PR_RTC_bm|PR_EVSYS_bm); \
1618:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     PR_PRPA &= (uint8_t)~(PR_ADC_bm|PR_AC_bm); \
1619:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     PR_PRPC &= (uint8_t)~(PR_TWI_bm|PR_USART0_bm|PR_SPI_bm|PR_HIRES_bm|PR_TC1_bm|PR_TC0_bm); \
1620:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     PR_PRPD &= (uint8_t)~(PR_USART0_bm|PR_SPI_bm|PR_TC0_bm); \
1621:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     PR_PRPE &= (uint8_t)~(PR_TWI_bm|PR_USART0_bm|PR_TC0_bm); \
1622:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     PR_PRPF &= (uint8_t)~(PR_USART0_bm|PR_TC0_bm); \
1623:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     } while(0)
1624:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
1625:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_all_disable() \
1626:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** do { \
1627:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     PR_PRGEN |= (uint8_t)(PR_RTC_bm|PR_EVSYS_bm); \
1628:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     PR_PRPA |= (uint8_t)(PR_ADC_bm|PR_AC_bm); \
1629:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     PR_PRPC |= (uint8_t)(PR_TWI_bm|PR_USART0_bm|PR_SPI_bm|PR_HIRES_bm|PR_TC1_bm|PR_TC0_bm); \
1630:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     PR_PRPD |= (uint8_t)(PR_USART0_bm|PR_SPI_bm|PR_TC0_bm); \
1631:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     PR_PRPE |= (uint8_t)(PR_TWI_bm|PR_USART0_bm|PR_TC0_bm); \
1632:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     PR_PRPF |= (uint8_t)(PR_USART0_bm|PR_TC0_bm); \
1633:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     } while(0)
1634:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
1635:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #endif
1636:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
1637:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #if defined(__AVR_ATxmega16D4__) \
1638:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATxmega32D4__) \
1639:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATxmega64D3__) \
1640:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATxmega128D3__) \
1641:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATxmega192D3__) 
1642:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
1643:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_all_enable() \
1644:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** do { \
1645:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     PR_PRGEN &= (uint8_t)~(PR_RTC_bm|PR_EVSYS_bm); \
1646:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     PR_PRPA &= (uint8_t)~(PR_ADC_bm|PR_AC_bm); \
1647:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     PR_PRPB &= (uint8_t)~(PR_ADC_bm|PR_AC_bm); \
1648:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     PR_PRPC &= (uint8_t)~(PR_TWI_bm|PR_USART0_bm|PR_SPI_bm|PR_HIRES_bm|PR_TC1_bm|PR_TC0_bm); \
1649:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     PR_PRPD &= (uint8_t)~(PR_TWI_bm|PR_USART0_bm|PR_SPI_bm|PR_HIRES_bm|PR_TC1_bm|PR_TC0_bm); \
1650:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     PR_PRPE &= (uint8_t)~(PR_TWI_bm|PR_USART0_bm|PR_SPI_bm|PR_HIRES_bm|PR_TC1_bm|PR_TC0_bm); \
1651:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     PR_PRPF &= (uint8_t)~(PR_TWI_bm|PR_USART0_bm|PR_SPI_bm|PR_HIRES_bm|PR_TC1_bm|PR_TC0_bm); \
1652:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** } while(0)
1653:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
1654:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
1655:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_all_disable() \
1656:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** do { \
1657:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     PR_PRGEN|= (uint8_t)(PR_EBI_bm|PR_RTC_bm|PR_EVSYS_bm|PR_DMA_bm); \
1658:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     PR_PRPA |= (uint8_t)(PR_ADC_bm|PR_AC_bm); \
1659:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     PR_PRPB |= (uint8_t)(PR_ADC_bm|PR_AC_bm); \
1660:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     PR_PRPC |= (uint8_t)(PR_TWI_bm|PR_USART0_bm|PR_SPI_bm|PR_HIRES_bm|PR_TC1_bm|PR_TC0_bm); \
1661:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     PR_PRPD |= (uint8_t)(PR_TWI_bm|PR_USART0_bm|PR_SPI_bm|PR_HIRES_bm|PR_TC1_bm|PR_TC0_bm); \
1662:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     PR_PRPE |= (uint8_t)(PR_TWI_bm|PR_USART0_bm|PR_SPI_bm|PR_HIRES_bm|PR_TC1_bm|PR_TC0_bm); \
1663:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     PR_PRPF |= (uint8_t)(PR_TWI_bm|PR_USART0_bm|PR_SPI_bm|PR_HIRES_bm|PR_TC1_bm|PR_TC0_bm); \
1664:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** } while(0)
1665:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
1666:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
1667:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #elif defined(__AVR_ATxmega32E5__) \
1668:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATxmega16E5__) \
1669:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATxmega8E5__) 
1670:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
1671:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_xcl_enable()      (PR_PRGEN &= (uint8_t)~(PR_XCL_bm))
1672:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_xcl_disable()     (PR_PRGEN |= (uint8_t)PR_XCL_bm)
1673:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
1674:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_rtc_enable()      (PR_PRGEN &= (uint8_t)~(PR_RTC_bm)) 
1675:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_rtc_disable()     (PR_PRGEN |= (uint8_t)PR_RTC_bm)
1676:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
1677:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_evsys_enable()    (PR_PRGEN &= (uint8_t)~(PR_EVSYS_bm)) 
1678:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_evsys_disable()   (PR_PRGEN |= (uint8_t)PR_EVSYS_bm)
1679:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
1680:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_edma_enable()     (PR_PRGEN &= (uint8_t)~(PR_EDMA_bm))
1681:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_edma_disable()    (PR_PRGEN |= (uint8_t)PR_EDMA_bm)
1682:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
1683:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_daca_enable()      (PR_PRPA  &= (uint8_t)~(PR_DAC_bm))
1684:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_daca_disable()     (PR_PRPA  |= (uint8_t)PR_DAC_bm)
1685:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
1686:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_adca_enable()      (PR_PRPA  &= (uint8_t)~(PR_ADC_bm))
1687:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_adca_disable()     (PR_PRPA  |= (uint8_t)PR_ADC_bm)
1688:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
1689:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_aca_enable()       (PR_PRPA  &= (uint8_t)~(PR_AC_bm))
1690:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_aca_disable()      (PR_PRPA  |= (uint8_t)PR_AC_bm)
1691:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
1692:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_twic_enable()      (PR_PRPC  &= (uint8_t)~(PR_TWI_bm))
1693:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_twic_disable()     (PR_PRPC  |= (uint8_t)PR_TWI_bm)
1694:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
1695:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_usartc0_enable()   (PR_PRPC  &= (uint8_t)~(PR_USART0_bm))
1696:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_usartc0_disable()  (PR_PRPC  |= (uint8_t)PR_USART0_bm)
1697:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
1698:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_spic_enable()      (PR_PRPC  &= (uint8_t)~(PR_SPI_bm))
1699:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_spic_disable()     (PR_PRPC  |= (uint8_t)PR_SPI_bm)
1700:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
1701:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_hiresc_enable()    (PR_PRPC  &= (uint8_t)~(PR_HIRES_bm))
1702:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_hiresc_disable()   (PR_PRPC  |= (uint8_t)PR_HIRES_bm)
1703:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
1704:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_tc5c_enable()      (PR_PRPC  &= (uint8_t)~(PR_TC5_bm))
1705:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_tc5c_disable()     (PR_PRPC  |= (uint8_t)PR_TC5_bm)
1706:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
1707:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_tc4c_enable()      (PR_PRPC  &= (uint8_t)~(PR_TC4_bm))
1708:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_tc4c_disable()     (PR_PRPC  |= (uint8_t)PR_TC4_bm)
1709:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
1710:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_usartd0_enable()   (PR_PRPD  &= (uint8_t)~(PR_USART0_bm))  
1711:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_usartd0_disable()  (PR_PRPD  |= (uint8_t)PR_USART0_bm)
1712:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
1713:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_tc5d_enable()      (PR_PRPC  &= (uint8_t)~(PR_TC5_bm)) 
1714:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_tc5d_disable()     (PR_PRPC  |= (uint8_t)PR_TC5_bm) 
1715:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
1716:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_all_enable() \
1717:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** do { \
1718:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     PR_PRGEN &= (uint8_t)~(PR_RTC_bm|PR_EVSYS_bm|PR_XCL_bm|PR_EDMA_bm); \
1719:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     PR_PRPA  &= (uint8_t)~(PR_ADC_bm|PR_AC_bm|PR_DAC_bm); \
1720:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     PR_PRPC  &= (uint8_t)~(PR_TWI_bm|PR_USART0_bm|PR_SPI_bm|PR_HIRES_bm|PR_TC5_bm|PR_TC4_bm); \
1721:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     PR_PRPD  &= (uint8_t)~(PR_USART0_bm|PR_TC5_bm); \
1722:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** } while(0)
1723:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
1724:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
1725:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_all_disable() \
1726:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** do { \
1727:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     PR_PRGEN|= (uint8_t)(PR_XCL_bm|PR_RTC_bm|PR_EVSYS_bm|PR_EDMA_bm); \
1728:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     PR_PRPA |= (uint8_t)(PR_ADC_bm|PR_AC_bm|PR_DAC_bm); \
1729:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     PR_PRPC |= (uint8_t)(PR_TWI_bm|PR_USART0_bm|PR_SPI_bm|PR_HIRES_bm|PR_TC5_bm|PR_TC4_bm); \
1730:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     PR_PRPD |= (uint8_t)(PR_USART0_bm|PR_TC5_bm); \
1731:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** } while(0)
1732:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
1733:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
1734:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #elif defined (__AVR_ATxmega64B1__) \
1735:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** || defined (__AVR_ATxmega64B3__) \
1736:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** || defined (__AVR_ATxmega128B1__) \
1737:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** || defined (__AVR_ATxmega128B3__) 
1738:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_lcd_enable()  (PR_PRGEN &= (uint8_t)~(PR_LCD_bm))
1739:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_lcd_disable() (PR_PRGEN |= (uint8_t)PR_LCD_bm)
1740:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
1741:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_usb_enable()  (PR_PRGEN &= (uint8_t)~(PR_USB_bm))
1742:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_usb_disable() (PR_PRGEN |= (uint8_t)PR_USB_bm)
1743:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
1744:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_aes_enable()  (PR_PRGEN &= (uint8_t)~(PR_AES_bm))
1745:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_aes_disable() (PR_PRGEN |= (uint8_t)PR_AES_bm)
1746:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
1747:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_rtc_enable()  (PR_PRGEN &= (uint8_t)~(PR_RTC_bm))
1748:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_rtc_disable() (PR_PRGEN |= (uint8_t)PR_RTC_bm)
1749:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
1750:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_evsys_enable()    (PR_PRGEN &= (uint8_t)~(PR_EVSYS_bm))
1751:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_evsys_disable()   (PR_PRGEN |= (uint8_t)PR_EVSYS_bm)
1752:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
1753:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_dma_enable()    (PR_PRGEN &= (uint8_t)~(PR_DMA_bm))
1754:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_dma_disable()   (PR_PRGEN |= (uint8_t)PR_DMA_bm)
1755:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
1756:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_adca_enable()     (PR_PRPA &= (uint8_t)~(PR_ADC_bm))
1757:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_adca_disable()    (PR_PRPA |= (uint8_t)PR_ADC_bm)
1758:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_adcb_enable()     (PR_PRPB &= (uint8_t)~(PR_ADC_bm))
1759:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_adcb_disable()    (PR_PRPB |= (uint8_t)PR_ADC_bm)
1760:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
1761:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_aca_enable()      (PR_PRPA &= (uint8_t)~(PR_AC_bm))
1762:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_aca_disable()     (PR_PRPA |= (uint8_t)PR_AC_bm)
1763:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_acb_enable()      (PR_PRPB &= (uint8_t)~(PR_AC_bm))
1764:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_acb_disable()     (PR_PRPB |= (uint8_t)PR_AC_bm)
1765:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
1766:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_twic_enable()     (PR_PRPC &= (uint8_t)~(PR_TWI_bm))
1767:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_twic_disable()    (PR_PRPC |= (uint8_t)PR_TWI_bm)
1768:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
1769:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_usartc0_enable()  (PR_PRPC &= (uint8_t)~(PR_USART0_bm))
1770:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_usartc0_disable() (PR_PRPC |= (uint8_t)PR_USART0_bm)
1771:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_usarte0_enable()  (PR_PRPE &= (uint8_t)~(PR_USART0_bm))
1772:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_usarte0_disable() (PR_PRPE |= (uint8_t)PR_USART0_bm)
1773:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
1774:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_spic_enable()     (PR_PRPC &= (uint8_t)~(PR_SPI_bm))
1775:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_spic_disable()    (PR_PRPC |= (uint8_t)PR_SPI_bm)
1776:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
1777:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_hiresc_enable()     (PR_PRPC &= (uint8_t)~(PR_HIRES_bm))
1778:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_hiresc_disable()    (PR_PRPC |= (uint8_t)PR_HIRES_bm)
1779:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
1780:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_tc1c_enable()     (PR_PRPC &= (uint8_t)~(PR_TC1_bm))
1781:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_tc1c_disable()    (PR_PRPC |= (uint8_t)PR_TC1_bm)
1782:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
1783:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_tc0c_enable()  (PR_PRPC &= (uint8_t)~(PR_TC0_bm))
1784:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_tc0c_disable() (PR_PRPC |= (uint8_t)PR_TC0_bm)
1785:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_tc0e_enable()  (PR_PRPE &= (uint8_t)~(PR_TC0_bm))
1786:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_tc0e_disable() (PR_PRPE |= (uint8_t)PR_TC0_bm)
1787:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
1788:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_all_enable() \
1789:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** do { \
1790:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     PR_PRGEN &= (uint8_t)~(PR_LCD_bm|PR_USB_bm|PR_AES_bm|PR_RTC_bm|PR_EVSYS_bm|PR_DMA_bm); \
1791:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     PR_PRPA &= (uint8_t)~(PR_ADC_bm|PR_AC_bm); \
1792:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     PR_PRPB &= (uint8_t)~(PR_ADC_bm|PR_AC_bm); \
1793:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     PR_PRPC &= (uint8_t)~(PR_TWI_bm|PR_USART0_bm|PR_SPI_bm|PR_HIRES_bm|PR_TC1_bm|PR_TC0_bm); \
1794:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     PR_PRPE &= (uint8_t)~(PR_USART0_bm|PR_TC0_bm); \
1795:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     } while(0)
1796:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
1797:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_all_disable() \
1798:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** do { \
1799:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     PR_PRGEN |= (uint8_t)(PR_LCD_bm|PR_USB_bm|PR_AES_bm|PR_RTC_bm|PR_EVSYS_bm|PR_DMA_bm); \
1800:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     PR_PRPA |= (uint8_t)(PR_ADC_bm|PR_AC_bm); \
1801:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     PR_PRPB |= (uint8_t)(PR_ADC_bm|PR_AC_bm); \
1802:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     PR_PRPC |= (uint8_t)(PR_TWI_bm|PR_USART0_bm|PR_SPI_bm|PR_HIRES_bm|PR_TC1_bm|PR_TC0_bm); \
1803:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     PR_PRPE |= (uint8_t)(PR_USART0_bm|PR_TC0_bm); \
1804:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     } while(0)
1805:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
1806:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #elif defined (__AVR_ATMXT112SL__) \
1807:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** || defined (__AVR_ATMXT224__) \
1808:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** || defined (__AVR_ATMXT224E__) \
1809:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** || defined (__AVR_ATMXT336S__) \
1810:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** || defined (__AVR_ATMXT540S__) \
1811:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** || defined (__AVR_ATMXT540SREVA__)
1812:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
1813:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_ctm_enable()  (PR_PRGEN &= (uint8_t)~(PR_CTM_bm))
1814:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_ctm_disable() (PR_PRGEN |= (uint8_t)PR_CTM_bm)
1815:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
1816:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_aes_enable()  (PR_PRGEN &= (uint8_t)~(PR_AES_bm))
1817:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_aes_disable() (PR_PRGEN |= (uint8_t)PR_AES_bm)
1818:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
1819:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_ebi_enable()  (PR_PRGEN &= (uint8_t)~(PR_EBI_bm))
1820:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_ebi_disable() (PR_PRGEN |= (uint8_t)PR_EBI_bm)
1821:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
1822:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_rtc_enable()  (PR_PRGEN &= (uint8_t)~(PR_RTC_bm))
1823:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_rtc_disable() (PR_PRGEN |= (uint8_t)PR_RTC_bm)
1824:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
1825:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_evsys_enable()    (PR_PRGEN &= (uint8_t)~(PR_EVSYS_bm))
1826:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_evsys_disable()   (PR_PRGEN |= (uint8_t)PR_EVSYS_bm)
1827:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
1828:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_dma_enable()    (PR_PRGEN &= (uint8_t)~(PR_DMA_bm))
1829:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_dma_disable()   (PR_PRGEN |= (uint8_t)PR_DMA_bm)
1830:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
1831:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_daca_enable()     (PR_PRPA &= (uint8_t)~(PR_DAC_bm))
1832:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_daca_disable()    (PR_PRPA |= (uint8_t)PR_DAC_bm)
1833:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_dacb_enable()     (PR_PRPB &= (uint8_t)~(PR_DAC_bm))
1834:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_dacb_disable()    (PR_PRPB |= (uint8_t)PR_DAC_bm)
1835:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
1836:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_adca_enable()     (PR_PRPA &= (uint8_t)~(PR_ADC_bm))
1837:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_adca_disable()    (PR_PRPA |= (uint8_t)PR_ADC_bm)
1838:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_adcb_enable()     (PR_PRPB &= (uint8_t)~(PR_ADC_bm))
1839:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_adcb_disable()    (PR_PRPB |= (uint8_t)PR_ADC_bm)
1840:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
1841:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_aca_enable()      (PR_PRPA &= (uint8_t)~(PR_AC_bm))
1842:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_aca_disable()     (PR_PRPA |= (uint8_t)PR_AC_bm)
1843:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_acb_enable()      (PR_PRPB &= (uint8_t)~(PR_AC_bm))
1844:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_acb_disable()     (PR_PRPB |= (uint8_t)PR_AC_bm)
1845:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
1846:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_twic_enable()     (PR_PRPC &= (uint8_t)~(PR_TWI_bm))
1847:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_twic_disable()    (PR_PRPC |= (uint8_t)PR_TWI_bm)
1848:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_twid_enable()     (PR_PRPD &= (uint8_t)~(PR_TWI_bm))
1849:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_twid_disable()    (PR_PRPD |= (uint8_t)PR_TWI_bm)
1850:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_twie_enable()     (PR_PRPE &= (uint8_t)~(PR_TWI_bm))
1851:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_twie_disable()    (PR_PRPE |= (uint8_t)PR_TWI_bm)
1852:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_twif_enable()     (PR_PRPF &= (uint8_t)~(PR_TWI_bm))
1853:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_twif_disable()    (PR_PRPF |= (uint8_t)PR_TWI_bm)
1854:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
1855:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_usartc1_enable()  (PR_PRPC &= (uint8_t)~(PR_USART1_bm))
1856:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_usartc1_disable() (PR_PRPC |= (uint8_t)PR_USART1_bm)
1857:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_usartd1_enable()  (PR_PRPD &= (uint8_t)~(PR_USART1_bm))
1858:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_usartd1_disable() (PR_PRPD |= (uint8_t)PR_USART1_bm)
1859:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_usarte1_enable()  (PR_PRPE &= (uint8_t)~(PR_USART1_bm))
1860:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_usarte1_disable() (PR_PRPE |= (uint8_t)PR_USART1_bm)
1861:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_usartf1_enable()  (PR_PRPF &= (uint8_t)~(PR_USART1_bm))
1862:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_usartf1_disable() (PR_PRPF |= (uint8_t)PR_USART1_bm)
1863:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
1864:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_usartc0_enable()  (PR_PRPC &= (uint8_t)~(PR_USART0_bm))
1865:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_usartc0_disable() (PR_PRPC |= (uint8_t)PR_USART0_bm)
1866:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_usartd0_enable()  (PR_PRPD &= (uint8_t)~(PR_USART0_bm))
1867:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_usartd0_disable() (PR_PRPD |= (uint8_t)PR_USART0_bm)
1868:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_usarte0_enable()  (PR_PRPE &= (uint8_t)~(PR_USART0_bm))
1869:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_usarte0_disable() (PR_PRPE |= (uint8_t)PR_USART0_bm)
1870:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_usartf0_enable()  (PR_PRPF &= (uint8_t)~(PR_USART0_bm))
1871:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_usartf0_disable() (PR_PRPF |= (uint8_t)PR_USART0_bm)
1872:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
1873:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_spic_enable()     (PR_PRPC &= (uint8_t)~(PR_SPI_bm))
1874:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_spic_disable()    (PR_PRPC |= (uint8_t)PR_SPI_bm)
1875:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_spid_enable()     (PR_PRPD &= (uint8_t)~(PR_SPI_bm))
1876:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_spid_disable()    (PR_PRPD |= (uint8_t)PR_SPI_bm)
1877:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_spie_enable()     (PR_PRPE &= (uint8_t)~(PR_SPI_bm))
1878:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_spie_disable()    (PR_PRPE |= (uint8_t)PR_SPI_bm)
1879:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_spif_enable()     (PR_PRPF &= (uint8_t)~(PR_SPI_bm))
1880:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_spif_disable()    (PR_PRPF |= (uint8_t)PR_SPI_bm)
1881:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
1882:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_hiresc_enable()     (PR_PRPC &= (uint8_t)~(PR_HIRES_bm))
1883:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_hiresc_disable()    (PR_PRPC |= (uint8_t)PR_HIRES_bm)
1884:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_hiresd_enable()     (PR_PRPD &= (uint8_t)~(PR_HIRES_bm))
1885:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_hiresd_disable()    (PR_PRPD |= (uint8_t)PR_HIRES_bm)
1886:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_hirese_enable()     (PR_PRPE &= (uint8_t)~(PR_HIRES_bm))
1887:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_hirese_disable()    (PR_PRPE |= (uint8_t)PR_HIRES_bm)
1888:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_hiresf_enable()     (PR_PRPF &= (uint8_t)~(PR_HIRES_bm))
1889:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_hiresf_disable()    (PR_PRPF |= (uint8_t)PR_HIRES_bm)
1890:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
1891:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_tc1c_enable()     (PR_PRPC &= (uint8_t)~(PR_TC1_bm))
1892:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_tc1c_disable()    (PR_PRPC |= (uint8_t)PR_TC1_bm)
1893:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_tc1d_enable()     (PR_PRPD &= (uint8_t)~(PR_TC1_bm))
1894:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_tc1d_disable()    (PR_PRPD |= (uint8_t)PR_TC1_bm)
1895:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_tc1e_enable()     (PR_PRPE &= (uint8_t)~(PR_TC1_bm))
1896:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_tc1e_disable()    (PR_PRPE |= (uint8_t)PR_TC1_bm)
1897:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_tc1f_enable()     (PR_PRPF &= (uint8_t)~(PR_TC1_bm))
1898:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_tc1f_disable()    (PR_PRPF |= (uint8_t)PR_TC1_bm)
1899:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
1900:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_tc0c_enable()  (PR_PRPC &= (uint8_t)~(PR_TC0_bm))
1901:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_tc0c_disable() (PR_PRPC |= (uint8_t)PR_TC0_bm)
1902:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_tc0d_enable()  (PR_PRPD &= (uint8_t)~(PR_TC0_bm))
1903:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_tc0d_disable() (PR_PRPD |= (uint8_t)PR_TC0_bm)
1904:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_tc0e_enable()  (PR_PRPE &= (uint8_t)~(PR_TC0_bm))
1905:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_tc0e_disable() (PR_PRPE |= (uint8_t)PR_TC0_bm)
1906:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_tc0f_enable()  (PR_PRPF &= (uint8_t)~(PR_TC0_bm))
1907:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_tc0f_disable() (PR_PRPF |= (uint8_t)PR_TC0_bm)
1908:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
1909:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_all_enable() \
1910:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** do { \
1911:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     PR_PRGEN &= (uint8_t)~(PR_CTM_bm|PR_EBI_bm|PR_AES_bm|PR_RTC_bm|PR_EVSYS_bm|PR_DMA_bm); \
1912:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     PR_PRPA &= (uint8_t)~(PR_DAC_bm|PR_ADC_bm|PR_AC_bm); \
1913:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     PR_PRPB &= (uint8_t)~(PR_DAC_bm|PR_ADC_bm|PR_AC_bm); \
1914:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     PR_PRPC &= (uint8_t)~(PR_TWI_bm|PR_USART1_bm|PR_USART0_bm|PR_SPI_bm|PR_HIRES_bm|PR_TC1_bm|PR_TC
1915:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     PR_PRPD &= (uint8_t)~(PR_TWI_bm|PR_USART1_bm|PR_USART0_bm|PR_SPI_bm|PR_HIRES_bm|PR_TC1_bm|PR_TC
1916:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     PR_PRPE &= (uint8_t)~(PR_TWI_bm|PR_USART1_bm|PR_USART0_bm|PR_SPI_bm|PR_HIRES_bm|PR_TC1_bm|PR_TC
1917:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     PR_PRPF &= (uint8_t)~(PR_TWI_bm|PR_USART1_bm|PR_USART0_bm|PR_SPI_bm|PR_HIRES_bm|PR_TC1_bm|PR_TC
1918:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     } while(0)
1919:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
1920:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_all_disable() \
1921:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** do { \
1922:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     PR_PRGEN |= (uint8_t)(PR_CTM_bm|PR_EBI_bm|PR_AES_bm|PR_RTC_bm|PR_EVSYS_bm|PR_DMA_bm); \
1923:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     PR_PRPA |= (uint8_t)(PR_DAC_bm|PR_ADC_bm|PR_AC_bm); \
1924:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     PR_PRPB |= (uint8_t)(PR_DAC_bm|PR_ADC_bm|PR_AC_bm); \
1925:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     PR_PRPC |= (uint8_t)(PR_TWI_bm|PR_USART1_bm|PR_USART0_bm|PR_SPI_bm|PR_HIRES_bm|PR_TC1_bm|PR_TC0
1926:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     PR_PRPD |= (uint8_t)(PR_TWI_bm|PR_USART1_bm|PR_USART0_bm|PR_SPI_bm|PR_HIRES_bm|PR_TC1_bm|PR_TC0
1927:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     PR_PRPE |= (uint8_t)(PR_TWI_bm|PR_USART1_bm|PR_USART0_bm|PR_SPI_bm|PR_HIRES_bm|PR_TC1_bm|PR_TC0
1928:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     PR_PRPF |= (uint8_t)(PR_TWI_bm|PR_USART1_bm|PR_USART0_bm|PR_SPI_bm|PR_HIRES_bm|PR_TC1_bm|PR_TC0
1929:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     } while(0)
1930:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
1931:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #elif defined(__AVR_ATmega640__) \
1932:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega1280__) \
1933:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega1281__) \
1934:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega2560__) \
1935:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega2561__) 
1936:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
1937:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_adc_enable()      (PRR0 &= (uint8_t)~(1 << PRADC))
1938:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_adc_disable()     (PRR0 |= (uint8_t)(1 << PRADC))
1939:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
1940:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_spi_enable()      (PRR0 &= (uint8_t)~(1 << PRSPI))
1941:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_spi_disable()     (PRR0 |= (uint8_t)(1 << PRSPI))
1942:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
1943:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_twi_enable()      (PRR0 &= (uint8_t)~(1 << PRTWI))
1944:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_twi_disable()     (PRR0 |= (uint8_t)(1 << PRTWI))
1945:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
1946:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_timer0_enable()   (PRR0 &= (uint8_t)~(1 << PRTIM0))
1947:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_timer0_disable()  (PRR0 |= (uint8_t)(1 << PRTIM0))
1948:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
1949:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_timer1_enable()   (PRR0 &= (uint8_t)~(1 << PRTIM1))
1950:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_timer1_disable()  (PRR0 |= (uint8_t)(1 << PRTIM1))
1951:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
1952:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_timer2_enable()   (PRR0 &= (uint8_t)~(1 << PRTIM2))
1953:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_timer2_disable()  (PRR0 |= (uint8_t)(1 << PRTIM2))
1954:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
1955:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_timer3_enable()   (PRR1 &= (uint8_t)~(1 << PRTIM3))
1956:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_timer3_disable()  (PRR1 |= (uint8_t)(1 << PRTIM3))
1957:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
1958:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_timer4_enable()   (PRR1 &= (uint8_t)~(1 << PRTIM4))
1959:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_timer4_disable()  (PRR1 |= (uint8_t)(1 << PRTIM4))
1960:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
1961:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_timer5_enable()   (PRR1 &= (uint8_t)~(1 << PRTIM5))
1962:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_timer5_disable()  (PRR1 |= (uint8_t)(1 << PRTIM5))
1963:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
1964:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_usart0_enable()   (PRR0 &= (uint8_t)~(1 << PRUSART0))
1965:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_usart0_disable()  (PRR0 |= (uint8_t)(1 << PRUSART0))
1966:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
1967:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_usart1_enable()   (PRR1 &= (uint8_t)~(1 << PRUSART1))
1968:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_usart1_disable()  (PRR1 |= (uint8_t)(1 << PRUSART1))
1969:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
1970:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_usart2_enable()   (PRR1 &= (uint8_t)~(1 << PRUSART2))
1971:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_usart2_disable()  (PRR1 |= (uint8_t)(1 << PRUSART2))
1972:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
1973:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_usart3_enable()   (PRR1 &= (uint8_t)~(1 << PRUSART3))
1974:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_usart3_disable()  (PRR1 |= (uint8_t)(1 << PRUSART3))
1975:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
1976:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_all_enable() \
1977:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** do{ \
1978:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     PRR0 &= (uint8_t)~((1<<PRADC)|(1<<PRSPI)|(1<<PRTWI)|(1<<PRTIM0)|(1<<PRTIM1)|(1<<PRTIM2)|(1<<PRU
1979:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     PRR1 &= (uint8_t)~((1<<PRTIM3)|(1<<PRTIM4)|(1<<PRTIM5)|(1<<PRTIM5)|(1<<PRUSART1)|(1<<PRUSART2)|
1980:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** }while(0)
1981:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
1982:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_all_disable() \
1983:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** do{ \
1984:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     PRR0 |= (uint8_t)((1<<PRADC)|(1<<PRSPI)|(1<<PRTWI)|(1<<PRTIM0)|(1<<PRTIM1)|(1<<PRTIM2)|(1<<PRUS
1985:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     PRR1 |= (uint8_t)((1<<PRTIM3)|(1<<PRTIM4)|(1<<PRTIM5)|(1<<PRTIM5)|(1<<PRUSART1)|(1<<PRUSART2)|(
1986:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** }while(0)
1987:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
1988:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
1989:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #elif defined(__AVR_ATmega128RFA1__)
1990:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
1991:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_adc_enable()      (PRR0 &= (uint8_t)~(1 << PRADC))
1992:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_adc_disable()     (PRR0 |= (uint8_t)(1 << PRADC))
1993:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
1994:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_spi_enable()      (PRR0 &= (uint8_t)~(1 << PRSPI))
1995:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_spi_disable()     (PRR0 |= (uint8_t)(1 << PRSPI))
1996:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
1997:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_twi_enable()      (PRR0 &= (uint8_t)~(1 << PRTWI))
1998:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_twi_disable()     (PRR0 |= (uint8_t)(1 << PRTWI))
1999:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
2000:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_timer0_enable()   (PRR0 &= (uint8_t)~(1 << PRTIM0))
2001:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_timer0_disable()  (PRR0 |= (uint8_t)(1 << PRTIM0))
2002:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
2003:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_timer1_enable()   (PRR0 &= (uint8_t)~(1 << PRTIM1))
2004:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_timer1_disable()  (PRR0 |= (uint8_t)(1 << PRTIM1))
2005:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
2006:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_timer2_enable()   (PRR0 &= (uint8_t)~(1 << PRTIM2))
2007:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_timer2_disable()  (PRR0 |= (uint8_t)(1 << PRTIM2))
2008:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
2009:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_timer3_enable()   (PRR1 &= (uint8_t)~(1 << PRTIM3))
2010:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_timer3_disable()  (PRR1 |= (uint8_t)(1 << PRTIM3))
2011:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
2012:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_timer4_enable()   (PRR1 &= (uint8_t)~(1 << PRTIM4))
2013:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_timer4_disable()  (PRR1 |= (uint8_t)(1 << PRTIM4))
2014:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
2015:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_timer5_enable()   (PRR1 &= (uint8_t)~(1 << PRTIM5))
2016:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_timer5_disable()  (PRR1 |= (uint8_t)(1 << PRTIM5))
2017:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
2018:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_usart0_enable()   (PRR0 &= (uint8_t)~(1 << PRUSART0))
2019:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_usart0_disable()  (PRR0 |= (uint8_t)(1 << PRUSART0))
2020:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
2021:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_usart1_enable()   (PRR1 &= (uint8_t)~(1 << PRUSART1))
2022:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_usart1_disable()  (PRR1 |= (uint8_t)(1 << PRUSART1))
2023:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
2024:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_all_enable() \
2025:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** do{ \
2026:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     PRR0 &= (uint8_t)~((1<<PRADC)|(1<<PRSPI)|(1<<PRTWI)|(1<<PRTIM0)|(1<<PRTIM1)|(1<<PRTIM2)|(1<<PRU
2027:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     PRR1 &= (uint8_t)~((1<<PRTIM3)|(1<<PRTIM4)|(1<<PRTIM5)|(1<<PRTIM5)|(1<<PRUSART1)); \
2028:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** }while(0)
2029:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
2030:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_all_disable() \
2031:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** do{ \
2032:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     PRR0 |= (uint8_t)((1<<PRADC)|(1<<PRSPI)|(1<<PRTWI)|(1<<PRTIM0)|(1<<PRTIM1)|(1<<PRTIM2)|(1<<PRUS
2033:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     PRR1 |= (uint8_t)((1<<PRTIM3)|(1<<PRTIM4)|(1<<PRTIM5)|(1<<PRTIM5)|(1<<PRUSART1)); \
2034:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** }while(0)
2035:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
2036:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #elif defined(__AVR_ATmega256RFR2__) \
2037:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega2564RFR2__) \
2038:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega128RFR2__) \
2039:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega1284RFR2__) \
2040:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega64RFR2__) \
2041:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega644RFR2__) \
2042:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega256RFA2__) \
2043:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega128RFA2__) \
2044:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega64RFA2__) 
2045:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
2046:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_adc_enable()           (PRR0 &= (uint8_t)~(1 << PRADC))
2047:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_adc_disable()          (PRR0 |= (uint8_t)(1 << PRADC))
2048:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
2049:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_usart0_enable()        (PRR0 &= (uint8_t)~(1 << PRUSART0))
2050:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_usart0_disable()       (PRR0 |= (uint8_t)(1 << PRUSART0))
2051:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
2052:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_spi_enable()           (PRR0 &= (uint8_t)~(1 << PRSPI))
2053:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_spi_disable()          (PRR0 |= (uint8_t)(1 << PRSPI))
2054:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
2055:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_timer1_enable()        (PRR0 &= (uint8_t)~(1 << PRTIM1))
2056:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_timer1_disable()       (PRR0 |= (uint8_t)(1 << PRTIM1))
2057:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
2058:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_pga_enable()           (PRR0 &= (uint8_t)~(1 << PRPGA))
2059:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_pga_disable()          (PRR0 |= (uint8_t)(1 << PRPGA))
2060:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
2061:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_timer0_enable()        (PRR0 &= (uint8_t)~(1 << PRTIM0))
2062:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_timer0_disable()       (PRR0 |= (uint8_t)(1 << PRTIM0))
2063:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
2064:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_timer2_enable()        (PRR0 &= (uint8_t)~(1 << PRTIM2))
2065:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_timer2_disable()       (PRR0 |= (uint8_t)(1 << PRTIM2))
2066:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
2067:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_twi_enable()           (PRR0 &= (uint8_t)~(1 << PRTWI))
2068:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_twi_disable()          (PRR0 |= (uint8_t)(1 << PRTWI))
2069:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
2070:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_usart1_enable()        (PRR1 &= (uint8_t)~(1 << PRUSART1))
2071:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_usart1_disable()       (PRR1 |= (uint8_t)(1 << PRUSART1))
2072:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
2073:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_timer3_enable()        (PRR1 &= (uint8_t)~(1 << PRTIM3))
2074:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_timer3_disable()       (PRR1 |= (uint8_t)(1 << PRTIM3))
2075:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
2076:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_timer4_enable()        (PRR1 &= (uint8_t)~(1 << PRTIM4))
2077:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_timer4_disable()       (PRR1 |= (uint8_t)(1 << PRTIM4))
2078:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
2079:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_timer5_enable()        (PRR1 &= (uint8_t)~(1 << PRTIM5))
2080:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_timer5_disable()       (PRR1 |= (uint8_t)(1 << PRTIM5))
2081:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
2082:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_transceiver_enable()   (PRR1 &= (uint8_t)~(1 << PRTRX24))
2083:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_transceiver_disable()  (PRR1 |= (uint8_t)(1 << PRTRX24))
2084:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
2085:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_ram0_enable()          (PRR2 &= (uint8_t)~(1 << PRRAM0))
2086:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_ram0_disable()         (PRR2 |= (uint8_t)(1 << PRRAM0))
2087:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
2088:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_ram1_enable()          (PRR2 &= (uint8_t)~(1 << PRRAM1))
2089:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_ram1_disable()         (PRR2 |= (uint8_t)(1 << PRRAM1))
2090:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
2091:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_ram2_enable()          (PRR2 &= (uint8_t)~(1 << PRRAM2))
2092:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_ram2_disable()         (PRR2 |= (uint8_t)(1 << PRRAM2))
2093:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
2094:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_ram3_enable()          (PRR2 &= (uint8_t)~(1 << PRRAM3))
2095:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_ram3_disable()         (PRR2 |= (uint8_t)(1 << PRRAM3))
2096:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
2097:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_all_enable() \
2098:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** do{ \
2099:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     PRR0 &= (uint8_t)~((1<<PRADC)|(1<<PRSPI)|(1<<PRTWI)|(1<<PRTIM0)|(1<<PRTIM1)|(1<<PRTIM2)|(1<<PRU
2100:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     PRR1 &= (uint8_t)~((1<<PRUSART1)|(1<<PRTIM3)|(1<<PRTIM4)|(1<<PRTIM5)|(1<<PRTRX24)); \
2101:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     PRR2 &= (uint8_t)~((1<<PRRAM0)|(1<<PRRAM1)|(1<<PRRAM2)|(1<<PRRAM3)); \
2102:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** }while(0)
2103:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
2104:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_all_disable() \
2105:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** do{ \
2106:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     PRR0 |= (uint8_t)((1<<PRADC)|(1<<PRSPI)|(1<<PRTWI)|(1<<PRTIM0)|(1<<PRTIM1)|(1<<PRTIM2)|(1<<PRUS
2107:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     PRR1 |= (uint8_t)((1<<PRUSART1)|(1<<PRTIM3)|(1<<PRTIM4)|(1<<PRTIM5)|(1<<PRTRX24)); \
2108:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     PRR2 |= (uint8_t)((1<<PRRAM0)|(1<<PRRAM1)|(1<<PRRAM2)|(1<<PRRAM3)); \
2109:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** }while(0)
2110:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
2111:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #elif defined(__AVR_AT90USB646__) \
2112:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** || defined(__AVR_AT90USB647__) \
2113:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** || defined(__AVR_AT90USB1286__) \
2114:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** || defined(__AVR_AT90USB1287__)
2115:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
2116:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_adc_enable()      (PRR0 &= (uint8_t)~(1 << PRADC))
2117:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_adc_disable()     (PRR0 |= (uint8_t)(1 << PRADC))
2118:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
2119:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_spi_enable()      (PRR0 &= (uint8_t)~(1 << PRSPI))
2120:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_spi_disable()     (PRR0 |= (uint8_t)(1 << PRSPI))
2121:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
2122:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_twi_enable()      (PRR0 &= (uint8_t)~(1 << PRTWI))
2123:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_twi_disable()     (PRR0 |= (uint8_t)(1 << PRTWI))
2124:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
2125:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_timer0_enable()   (PRR0 &= (uint8_t)~(1 << PRTIM0))
2126:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_timer0_disable()  (PRR0 |= (uint8_t)(1 << PRTIM0))
2127:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
2128:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_timer1_enable()   (PRR0 &= (uint8_t)~(1 << PRTIM1))
2129:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_timer1_disable()  (PRR0 |= (uint8_t)(1 << PRTIM1))
2130:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
2131:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_timer2_enable()   (PRR0 &= (uint8_t)~(1 << PRTIM2))
2132:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_timer2_disable()  (PRR0 |= (uint8_t)(1 << PRTIM2))
2133:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
2134:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_timer3_enable()   (PRR1 &= (uint8_t)~(1 << PRTIM3))
2135:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_timer3_disable()  (PRR1 |= (uint8_t)(1 << PRTIM3))
2136:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
2137:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_usart1_enable()   (PRR1 &= (uint8_t)~(1 << PRUSART1))
2138:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_usart1_disable()  (PRR1 |= (uint8_t)(1 << PRUSART1))
2139:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
2140:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_usb_enable()      (PRR1 &= (uint8_t)~(1 << PRUSB))
2141:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_usb_disable()     (PRR1 |= (uint8_t)(1 << PRUSB))
2142:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
2143:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_all_enable() \
2144:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** do{ \
2145:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     PRR0 &= (uint8_t)~((1<<PRADC)|(1<<PRSPI)|(1<<PRTWI)|(1<<PRTIM0)|(1<<PRTIM1)|(1<<PRTIM2)); \
2146:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     PRR1 &= (uint8_t)~((1<<PRTIM3)|(1<<PRUSART1)|(1<<PRUSB)); \
2147:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** }while(0)
2148:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
2149:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_all_disable() \
2150:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** do{ \
2151:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     PRR0 |= (uint8_t)((1<<PRADC)|(1<<PRSPI)|(1<<PRTWI)|(1<<PRTIM0)|(1<<PRTIM1)|(1<<PRTIM2)); \
2152:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     PRR1 |= (uint8_t)((1<<PRTIM3)|(1<<PRUSART1)|(1<<PRUSB)); \
2153:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** }while(0)
2154:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
2155:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
2156:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #elif defined(__AVR_ATmega32U4__) \
2157:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega16U4__)
2158:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
2159:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
2160:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_adc_enable()      (PRR0 &= (uint8_t)~(1 << PRADC))
2161:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_adc_disable()     (PRR0 |= (uint8_t)(1 << PRADC))
2162:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
2163:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_usart0_enable()   (PRR0 &= (uint8_t)~(1 << PRUSART0))
2164:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_usart0_disable()  (PRR0 |= (uint8_t)(1 << PRUSART0))
2165:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
2166:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_spi_enable()      (PRR0 &= (uint8_t)~(1 << PRSPI))
2167:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_spi_disable()     (PRR0 |= (uint8_t)(1 << PRSPI))
2168:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
2169:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_twi_enable()      (PRR0 &= (uint8_t)~(1 << PRTWI))
2170:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_twi_disable()     (PRR0 |= (uint8_t)(1 << PRTWI))
2171:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
2172:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_timer0_enable()   (PRR0 &= (uint8_t)~(1 << PRTIM0))
2173:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_timer0_disable()  (PRR0 |= (uint8_t)(1 << PRTIM0))
2174:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
2175:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_timer1_enable()   (PRR0 &= (uint8_t)~(1 << PRTIM1))
2176:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_timer1_disable()  (PRR0 |= (uint8_t)(1 << PRTIM1))
2177:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
2178:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_timer2_enable()   (PRR0 &= (uint8_t)~(1 << PRTIM2))
2179:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_timer2_disable()  (PRR0 |= (uint8_t)(1 << PRTIM2))
2180:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
2181:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_timer3_enable()   (PRR1 &= (uint8_t)~(1 << PRTIM3))
2182:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_timer3_disable()  (PRR1 |= (uint8_t)(1 << PRTIM3))
2183:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
2184:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_usart1_enable()   (PRR1 &= (uint8_t)~(1 << PRUSART1))
2185:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_usart1_disable()  (PRR1 |= (uint8_t)(1 << PRUSART1))
2186:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
2187:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_usb_enable()      (PRR1 &= (uint8_t)~(1 << PRUSB))
2188:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_usb_disable()     (PRR1 |= (uint8_t)(1 << PRUSB))
2189:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
2190:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_all_enable() \
2191:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** do{ \
2192:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     PRR0 &= (uint8_t)~((1<<PRADC)|(1<<PRUSART0)|(1<<PRSPI)|(1<<PRTWI)|(1<<PRTIM0)|(1<<PRTIM1)|(1<<P
2193:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     PRR1 &= (uint8_t)~((1<<PRTIM3)|(1<<PRUSART1)|(1<<PRUSB)); \
2194:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** }while(0)
2195:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
2196:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_all_disable() \
2197:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** do{ \
2198:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     PRR0 |= (uint8_t)((1<<PRADC)|(1<<PRUSART0)|(1<<PRSPI)|(1<<PRTWI)|(1<<PRTIM0)|(1<<PRTIM1)|(1<<PR
2199:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     PRR1 |= (uint8_t)((1<<PRTIM3)|(1<<PRUSART1)|(1<<PRUSB)); \
2200:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** }while(0)
2201:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
2202:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
2203:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #elif defined(__AVR_ATmega32U6__)
2204:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
2205:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
2206:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_adc_enable()      (PRR0 &= (uint8_t)~(1 << PRADC))
2207:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_adc_disable()     (PRR0 |= (uint8_t)(1 << PRADC))
2208:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
2209:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_spi_enable()      (PRR0 &= (uint8_t)~(1 << PRSPI))
2210:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_spi_disable()     (PRR0 |= (uint8_t)(1 << PRSPI))
2211:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
2212:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_twi_enable()      (PRR0 &= (uint8_t)~(1 << PRTWI))
2213:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_twi_disable()     (PRR0 |= (uint8_t)(1 << PRTWI))
2214:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
2215:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_timer0_enable()   (PRR0 &= (uint8_t)~(1 << PRTIM0))
2216:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_timer0_disable()  (PRR0 |= (uint8_t)(1 << PRTIM0))
2217:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
2218:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_timer1_enable()   (PRR0 &= (uint8_t)~(1 << PRTIM1))
2219:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_timer1_disable()  (PRR0 |= (uint8_t)(1 << PRTIM1))
2220:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
2221:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_timer2_enable()   (PRR0 &= (uint8_t)~(1 << PRTIM2))
2222:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_timer2_disable()  (PRR0 |= (uint8_t)(1 << PRTIM2))
2223:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
2224:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_timer3_enable()   (PRR1 &= (uint8_t)~(1 << PRTIM3))
2225:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_timer3_disable()  (PRR1 |= (uint8_t)(1 << PRTIM3))
2226:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
2227:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_usart1_enable()   (PRR1 &= (uint8_t)~(1 << PRUSART1))
2228:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_usart1_disable()  (PRR1 |= (uint8_t)(1 << PRUSART1))
2229:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
2230:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_usb_enable()      (PRR1 &= (uint8_t)~(1 << PRUSB))
2231:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_usb_disable()     (PRR1 |= (uint8_t)(1 << PRUSB))
2232:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
2233:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_all_enable() \
2234:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** do{ \
2235:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     PRR0 &= (uint8_t)~((1<<PRADC)|(1<<PRSPI)|(1<<PRTWI)|(1<<PRTIM0)|(1<<PRTIM1)|(1<<PRTIM2)); \
2236:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     PRR1 &= (uint8_t)~((1<<PRTIM3)|(1<<PRUSART1)|(1<<PRUSB)); \
2237:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** }while(0)
2238:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
2239:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_all_disable() \
2240:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** do{ \
2241:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     PRR0 |= (uint8_t)((1<<PRADC)|(1<<PRSPI)|(1<<PRTWI)|(1<<PRTIM0)|(1<<PRTIM1)|(1<<PRTIM2)); \
2242:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     PRR1 |= (uint8_t)((1<<PRTIM3)|(1<<PRUSART1)|(1<<PRUSB)); \
2243:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** }while(0)
2244:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
2245:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
2246:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #elif defined(__AVR_AT90PWM1__)
2247:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
2248:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_adc_enable()      (PRR &= (uint8_t)~(1 << PRADC))
2249:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_adc_disable()     (PRR |= (uint8_t)(1 << PRADC))
2250:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
2251:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_spi_enable()      (PRR &= (uint8_t)~(1 << PRSPI))
2252:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_spi_disable()     (PRR |= (uint8_t)(1 << PRSPI))
2253:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
2254:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_timer0_enable()   (PRR &= (uint8_t)~(1 << PRTIM0))
2255:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_timer0_disable()  (PRR |= (uint8_t)(1 << PRTIM0))
2256:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
2257:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_timer1_enable()   (PRR &= (uint8_t)~(1 << PRTIM1))
2258:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_timer1_disable()  (PRR |= (uint8_t)(1 << PRTIM1))
2259:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
2260:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** /* Power Stage Controller 0 */
2261:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_psc0_enable()     (PRR &= (uint8_t)~(1 << PRPSC0))
2262:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_psc0_disable()    (PRR |= (uint8_t)(1 << PRPSC0))
2263:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
2264:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** /* Power Stage Controller 1 */
2265:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_psc1_enable()     (PRR &= (uint8_t)~(1 << PRPSC1))
2266:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_psc1_disable()    (PRR |= (uint8_t)(1 << PRPSC1))
2267:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
2268:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** /* Power Stage Controller 2 */
2269:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_psc2_enable()     (PRR &= (uint8_t)~(1 << PRPSC2))
2270:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_psc2_disable()    (PRR |= (uint8_t)(1 << PRPSC2))
2271:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
2272:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_all_enable()      (PRR &= (uint8_t)~((1<<PRADC)|(1<<PRSPI)|(1<<PRTIM0)|(1<<PRTIM1)|(1
2273:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_all_disable()     (PRR |= (uint8_t)((1<<PRADC)|(1<<PRSPI)|(1<<PRTIM0)|(1<<PRTIM1)|(1<
2274:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
2275:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
2276:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #elif defined(__AVR_AT90PWM2__) \
2277:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** || defined(__AVR_AT90PWM2B__) \
2278:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** || defined(__AVR_AT90PWM3__) \
2279:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** || defined(__AVR_AT90PWM3B__) \
2280:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** || defined(__AVR_AT90PWM216__) \
2281:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** || defined(__AVR_AT90PWM316__)
2282:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
2283:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_adc_enable()      (PRR &= (uint8_t)~(1 << PRADC))
2284:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_adc_disable()     (PRR |= (uint8_t)(1 << PRADC))
2285:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
2286:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_spi_enable()      (PRR &= (uint8_t)~(1 << PRSPI))
2287:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_spi_disable()     (PRR |= (uint8_t)(1 << PRSPI))
2288:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
2289:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #if defined(__AVR_AT90PWM216__) || defined(__AVR_AT90PWM316__)
2290:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
2291:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_usart_enable()    (PRR &= (uint8_t)~(1 << PRUSART))
2292:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_usart_disable()   (PRR |= (uint8_t)(1 << PRUSART))
2293:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
2294:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #else
2295:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
2296:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_usart_enable()    (PRR &= (uint8_t)~(1 << PRUSART0))
2297:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_usart_disable()   (PRR |= (uint8_t)(1 << PRUSART0))
2298:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
2299:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #endif
2300:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
2301:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_timer0_enable()   (PRR &= (uint8_t)~(1 << PRTIM0))
2302:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_timer0_disable()  (PRR |= (uint8_t)(1 << PRTIM0))
2303:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
2304:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_timer1_enable()   (PRR &= (uint8_t)~(1 << PRTIM1))
2305:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_timer1_disable()  (PRR |= (uint8_t)(1 << PRTIM1))
2306:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
2307:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** /* Power Stage Controller 0 */
2308:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_psc0_enable()     (PRR &= (uint8_t)~(1 << PRPSC0))
2309:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_psc0_disable()    (PRR |= (uint8_t)(1 << PRPSC0))
2310:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
2311:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** /* Power Stage Controller 1 */
2312:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_psc1_enable()     (PRR &= (uint8_t)~(1 << PRPSC1))
2313:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_psc1_disable()    (PRR |= (uint8_t)(1 << PRPSC1))
2314:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
2315:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** /* Power Stage Controller 2 */
2316:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_psc2_enable()     (PRR &= (uint8_t)~(1 << PRPSC2))
2317:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_psc2_disable()    (PRR |= (uint8_t)(1 << PRPSC2))
2318:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
2319:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #if defined(__AVR_AT90PWM216__) || defined(__AVR_AT90PWM316__)
2320:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
2321:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_all_enable()      (PRR &= (uint8_t)~((1<<PRADC)|(1<<PRSPI)|(1<<PRUSART)|(1<<PRTIM0)|(
2322:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_all_disable()     (PRR |= (uint8_t)((1<<PRADC)|(1<<PRSPI)|(1<<PRUSART)|(1<<PRTIM0)|(1
2323:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
2324:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #else
2325:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
2326:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_all_enable()      (PRR &= (uint8_t)~((1<<PRADC)|(1<<PRSPI)|(1<<PRUSART0)|(1<<PRTIM0)|
2327:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_all_disable()     (PRR |= (uint8_t)((1<<PRADC)|(1<<PRSPI)|(1<<PRUSART0)|(1<<PRTIM0)|(
2328:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
2329:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #endif
2330:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
2331:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
2332:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #elif defined(__AVR_AT90PWM81__) \
2333:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** || defined(__AVR_AT90PWM161__)
2334:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
2335:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_adc_enable()      (PRR &= (uint8_t)~(1 << PRADC))
2336:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_adc_disable()     (PRR |= (uint8_t)(1 << PRADC))
2337:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
2338:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_spi_enable()      (PRR &= (uint8_t)~(1 << PRSPI))
2339:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_spi_disable()     (PRR |= (uint8_t)(1 << PRSPI))
2340:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
2341:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_timer1_enable()   (PRR &= (uint8_t)~(1 << PRTIM1))
2342:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_timer1_disable()  (PRR |= (uint8_t)(1 << PRTIM1))
2343:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
2344:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** /* Reduced Power Stage Controller */
2345:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_pscr_enable()     (PRR &= (uint8_t)~(1 << PRPSCR))
2346:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_pscr_disable()    (PRR |= (uint8_t)(1 << PRPSCR))
2347:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
2348:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** /* Power Stage Controller 2 */
2349:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_psc2_enable()     (PRR &= (uint8_t)~(1 << PRPSC2))
2350:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_psc2_disable()    (PRR |= (uint8_t)(1 << PRPSC2))
2351:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
2352:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_all_enable()      (PRR &= (uint8_t)~((1<<PRADC)|(1<<PRSPI)|(1<<PRTIM1)|(1<<PRPSCR)|(1
2353:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_all_disable()     (PRR |= (uint8_t)((1<<PRADC)|(1<<PRSPI)|(1<<PRTIM1)|(1<<PRPSCR)|(1<
2354:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
2355:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
2356:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #elif defined(__AVR_ATmega165__) \
2357:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega165A__) \
2358:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega165P__) \
2359:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega165PA__) \
2360:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega325__) \
2361:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega325A__) \
2362:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega325P__) \
2363:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega325PA__) \
2364:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega3250__) \
2365:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega3250A__) \
2366:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega3250P__) \
2367:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega3250PA__) \
2368:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega645__) \
2369:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega645A__) \
2370:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega645P__) \
2371:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega6450__) \
2372:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega6450A__) \
2373:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega6450P__)
2374:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
2375:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_adc_enable()      (PRR &= (uint8_t)~(1 << PRADC))
2376:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_adc_disable()     (PRR |= (uint8_t)(1 << PRADC))
2377:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
2378:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_spi_enable()      (PRR &= (uint8_t)~(1 << PRSPI))
2379:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_spi_disable()     (PRR |= (uint8_t)(1 << PRSPI))
2380:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
2381:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_usart0_enable()   (PRR &= (uint8_t)~(1 << PRUSART0))
2382:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_usart0_disable()  (PRR |= (uint8_t)(1 << PRUSART0))
2383:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
2384:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_timer1_enable()   (PRR &= (uint8_t)~(1 << PRTIM1))
2385:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_timer1_disable()  (PRR |= (uint8_t)(1 << PRTIM1))
2386:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
2387:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_all_enable()      (PRR &= (uint8_t)~((1<<PRADC)|(1<<PRSPI)|(1<<PRUSART0)|(1<<PRTIM1))
2388:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_all_disable()     (PRR |= (uint8_t)((1<<PRADC)|(1<<PRSPI)|(1<<PRUSART0)|(1<<PRTIM1)))
2389:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
2390:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
2391:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #elif defined(__AVR_ATmega169__) \
2392:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega169A__) \
2393:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega169P__) \
2394:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega169PA__) \
2395:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega329__) \
2396:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega329A__) \
2397:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega329P__) \
2398:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega329PA__) \
2399:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega3290__) \
2400:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega3290A__) \
2401:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega3290P__) \
2402:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega3290PA__) \
2403:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega649__) \
2404:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega649A__) \
2405:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega649P__) \
2406:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega6490__) \
2407:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega6490A__) \
2408:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega6490P__)
2409:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
2410:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_adc_enable()      (PRR &= (uint8_t)~(1 << PRADC))
2411:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_adc_disable()     (PRR |= (uint8_t)(1 << PRADC))
2412:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
2413:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_spi_enable()      (PRR &= (uint8_t)~(1 << PRSPI))
2414:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_spi_disable()     (PRR |= (uint8_t)(1 << PRSPI))
2415:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
2416:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_usart0_enable()   (PRR &= (uint8_t)~(1 << PRUSART0))
2417:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_usart0_disable()  (PRR |= (uint8_t)(1 << PRUSART0))
2418:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
2419:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_timer1_enable()   (PRR &= (uint8_t)~(1 << PRTIM1))
2420:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_timer1_disable()  (PRR |= (uint8_t)(1 << PRTIM1))
2421:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
2422:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_lcd_enable()      (PRR &= (uint8_t)~(1 << PRLCD))
2423:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_lcd_disable()     (PRR |= (uint8_t)(1 << PRLCD))
2424:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
2425:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_all_enable()      (PRR &= (uint8_t)~((1<<PRADC)|(1<<PRSPI)|(1<<PRUSART0)|(1<<PRTIM1)|
2426:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_all_disable()     (PRR |= (uint8_t)((1<<PRADC)|(1<<PRSPI)|(1<<PRUSART0)|(1<<PRTIM1)|(
2427:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
2428:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
2429:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #elif defined(__AVR_ATmega164A__) \
2430:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega164P__) \
2431:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega324A__) \
2432:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega324P__) \
2433:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega324PA__) \
2434:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega644P__) \
2435:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega644A__) \
2436:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega644PA__)
2437:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
2438:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_adc_enable()      (PRR0 &= (uint8_t)~(1 << PRADC))
2439:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_adc_disable()     (PRR0 |= (uint8_t)(1 << PRADC))
2440:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
2441:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_spi_enable()      (PRR0 &= (uint8_t)~(1 << PRSPI))
2442:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_spi_disable()     (PRR0 |= (uint8_t)(1 << PRSPI))
2443:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
2444:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_usart0_enable()   (PRR0 &= (uint8_t)~(1 << PRUSART0))
2445:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_usart0_disable()  (PRR0 |= (uint8_t)(1 << PRUSART0))
2446:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
2447:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_usart1_enable()   (PRR0 &= (uint8_t)~(1 << PRUSART1))
2448:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_usart1_disable()  (PRR0 |= (uint8_t)(1 << PRUSART1))
2449:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
2450:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_timer0_enable()   (PRR0 &= (uint8_t)~(1 << PRTIM0))
2451:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_timer0_disable()  (PRR0 |= (uint8_t)(1 << PRTIM0))
2452:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
2453:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_timer1_enable()   (PRR0 &= (uint8_t)~(1 << PRTIM1))
2454:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_timer1_disable()  (PRR0 |= (uint8_t)(1 << PRTIM1))
2455:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
2456:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_timer2_enable()   (PRR0 &= (uint8_t)~(1 << PRTIM2))
2457:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_timer2_disable()  (PRR0 |= (uint8_t)(1 << PRTIM2))
2458:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
2459:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_twi_enable()      (PRR0 &= (uint8_t)~(1 << PRTWI))
2460:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_twi_disable()     (PRR0 |= (uint8_t)(1 << PRTWI))
2461:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
2462:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_all_enable()      (PRR0 &= (uint8_t)~((1<<PRADC)|(1<<PRSPI)|(1<<PRUSART0)|(1<<PRUSART
2463:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_all_disable()     (PRR0 |= (uint8_t)((1<<PRADC)|(1<<PRSPI)|(1<<PRUSART0)|(1<<PRUSART1
2464:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
2465:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
2466:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #elif defined(__AVR_ATmega644__) \
2467:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega164PA__)
2468:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
2469:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_adc_enable()      (PRR0 &= (uint8_t)~(1 << PRADC))
2470:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_adc_disable()     (PRR0 |= (uint8_t)(1 << PRADC))
2471:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
2472:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_spi_enable()      (PRR0 &= (uint8_t)~(1 << PRSPI))
2473:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_spi_disable()     (PRR0 |= (uint8_t)(1 << PRSPI))
2474:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
2475:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_usart0_enable()   (PRR0 &= (uint8_t)~(1 << PRUSART0))
2476:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_usart0_disable()  (PRR0 |= (uint8_t)(1 << PRUSART0))
2477:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
2478:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_timer0_enable()   (PRR0 &= (uint8_t)~(1 << PRTIM0))
2479:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_timer0_disable()  (PRR0 |= (uint8_t)(1 << PRTIM0))
2480:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
2481:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_timer1_enable()   (PRR0 &= (uint8_t)~(1 << PRTIM1))
2482:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_timer1_disable()  (PRR0 |= (uint8_t)(1 << PRTIM1))
2483:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
2484:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_timer2_enable()   (PRR0 &= (uint8_t)~(1 << PRTIM2))
2485:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_timer2_disable()  (PRR0 |= (uint8_t)(1 << PRTIM2))
2486:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
2487:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_twi_enable()      (PRR0 &= (uint8_t)~(1 << PRTWI))
2488:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_twi_disable()     (PRR0 |= (uint8_t)(1 << PRTWI))
2489:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
2490:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_all_enable()      (PRR0 &= (uint8_t)~((1<<PRADC)|(1<<PRSPI)|(1<<PRUSART0)|(1<<PRTIM0)
2491:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_all_disable()     (PRR0 |= (uint8_t)((1<<PRADC)|(1<<PRSPI)|(1<<PRUSART0)|(1<<PRTIM0)|
2492:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
2493:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
2494:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #elif defined(__AVR_ATmega406__)
2495:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
2496:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_twi_enable()      (PRR0 &= (uint8_t)~(1 << PRTWI))
2497:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_twi_disable()     (PRR0 |= (uint8_t)(1 << PRTWI))
2498:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
2499:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_timer0_enable()   (PRR0 &= (uint8_t)~(1 << PRTIM0))
2500:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_timer0_disable()  (PRR0 |= (uint8_t)(1 << PRTIM0))
2501:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
2502:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_timer1_enable()   (PRR0 &= (uint8_t)~(1 << PRTIM1))
2503:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_timer1_disable()  (PRR0 |= (uint8_t)(1 << PRTIM1))
2504:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
2505:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** /* Voltage ADC */
2506:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_vadc_enable()     (PRR0 &= (uint8_t)~(1 << PRVADC))
2507:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_vadc_disable()    (PRR0 |= (uint8_t)(1 << PRVADC))
2508:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
2509:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_all_enable()      (PRR0 &= (uint8_t)~((1<<PRTWI)|(1<<PRTIM0)|(1<<PRTIM1)|(1<<PRVADC))
2510:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_all_disable()     (PRR0 |= (uint8_t)((1<<PRTWI)|(1<<PRTIM0)|(1<<PRTIM1)|(1<<PRVADC)))
2511:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
2512:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
2513:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #elif defined(__AVR_ATmega48__) \
2514:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega48A__) \
2515:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega48PA__) \
2516:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega48P__) \
2517:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega88__) \
2518:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega88A__) \
2519:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega88P__) \
2520:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega88PA__) \
2521:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega168__) \
2522:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega168A__) \
2523:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega168P__) \
2524:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega168PA__) \
2525:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega328__) \
2526:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega328P__) \
2527:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATtiny828__) \
2528:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATtiny841__)
2529:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
2530:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_adc_enable()      (PRR &= (uint8_t)~(1 << PRADC))
2531:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_adc_disable()     (PRR |= (uint8_t)(1 << PRADC))
2532:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
2533:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_spi_enable()      (PRR &= (uint8_t)~(1 << PRSPI))
2534:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_spi_disable()     (PRR |= (uint8_t)(1 << PRSPI))
2535:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
2536:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_usart0_enable()   (PRR &= (uint8_t)~(1 << PRUSART0))
2537:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_usart0_disable()  (PRR |= (uint8_t)(1 << PRUSART0))
2538:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
2539:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #if defined(__AVR_ATtiny841__)
2540:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
2541:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_usart1_enable()   (PRR &= (uint8_t)~(1 << PRUSART1))
2542:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_usart1_disable()  (PRR |= (uint8_t)(1 << PRUSART1))
2543:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
2544:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #endif
2545:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
2546:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_timer0_enable()   (PRR &= (uint8_t)~(1 << PRTIM0))
2547:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_timer0_disable()  (PRR |= (uint8_t)(1 << PRTIM0))
2548:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
2549:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_timer1_enable()   (PRR &= (uint8_t)~(1 << PRTIM1))
2550:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_timer1_disable()  (PRR |= (uint8_t)(1 << PRTIM1))
2551:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
2552:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #if !defined(__AVR_ATtiny828__)
2553:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
2554:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_timer2_enable()   (PRR &= (uint8_t)~(1 << PRTIM2))
2555:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_timer2_disable()  (PRR |= (uint8_t)(1 << PRTIM2))
2556:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
2557:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #endif
2558:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
2559:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_twi_enable()      (PRR &= (uint8_t)~(1 << PRTWI))
2560:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_twi_disable()     (PRR |= (uint8_t)(1 << PRTWI))
2561:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
2562:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #if defined(__AVR_ATtiny828__)
2563:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
2564:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_all_enable()      (PRR &= (uint8_t)~((1<<PRADC)|(1<<PRSPI)|(1<<PRUSART0)|(1<<PRTIM0)|
2565:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_all_disable()     (PRR |= (uint8_t)((1<<PRADC)|(1<<PRSPI)|(1<<PRUSART0)|(1<<PRTIM0)|(
2566:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
2567:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #elif defined(__AVR_ATtiny841__)
2568:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
2569:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_all_enable()	(PRR &= (uint8_t)~((1<<PRADC)|(1<<PRSPI)|(1<<PRUSART0)|(1<<PRUSART1)|(1<
2570:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_all_disable()      (PRR |= (uint8_t)((1<<PRADC)|(1<<PRSPI)|(1<<PRUSART0)|(1<<PRUSART1
2571:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
2572:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #else
2573:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
2574:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_all_enable()      (PRR &= (uint8_t)~((1<<PRADC)|(1<<PRSPI)|(1<<PRUSART0)|(1<<PRTIM0)|
2575:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_all_disable()     (PRR |= (uint8_t)((1<<PRADC)|(1<<PRSPI)|(1<<PRUSART0)|(1<<PRTIM0)|(
2576:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
2577:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #endif
2578:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
2579:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #elif defined(__AVR_ATtiny48__) \
2580:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATtiny88__)
2581:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
2582:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_adc_enable()      (PRR &= (uint8_t)~(1 << PRADC))
2583:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_adc_disable()     (PRR |= (uint8_t)(1 << PRADC))
2584:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
2585:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_spi_enable()      (PRR &= (uint8_t)~(1 << PRSPI))
2586:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_spi_disable()     (PRR |= (uint8_t)(1 << PRSPI))
2587:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
2588:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_timer0_enable()   (PRR &= (uint8_t)~(1 << PRTIM0))
2589:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_timer0_disable()  (PRR |= (uint8_t)(1 << PRTIM0))
2590:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
2591:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_timer1_enable()   (PRR &= (uint8_t)~(1 << PRTIM1))
2592:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_timer1_disable()  (PRR |= (uint8_t)(1 << PRTIM1))
2593:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
2594:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_twi_enable()      (PRR &= (uint8_t)~(1 << PRTWI))
2595:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_twi_disable()     (PRR |= (uint8_t)(1 << PRTWI))
2596:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
2597:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_all_enable()      (PRR &= (uint8_t)~((1<<PRADC)|(1<<PRSPI)|(1<<PRTIM0)|(1<<PRTIM1)|(1
2598:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_all_disable()     (PRR |= (uint8_t)((1<<PRADC)|(1<<PRSPI)|(1<<PRTIM0)|(1<<PRTIM1)|(1<
2599:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
2600:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****   
2601:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #elif defined(__AVR_ATtiny24__) \
2602:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATtiny24A__) \
2603:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATtiny44__) \
2604:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATtiny44A__) \
2605:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATtiny84__) \
2606:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATtiny84A__) \
2607:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATtiny25__) \
2608:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATtiny45__) \
2609:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATtiny85__) \
2610:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATtiny261__) \
2611:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATtiny261A__) \
2612:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATtiny461__) \
2613:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATtiny461A__) \
2614:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATtiny861__) \
2615:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATtiny861A__) \
2616:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATtiny43U__)
2617:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
2618:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_adc_enable()      (PRR &= (uint8_t)~(1 << PRADC))
2619:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_adc_disable()     (PRR |= (uint8_t)(1 << PRADC))
2620:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
2621:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_timer0_enable()   (PRR &= (uint8_t)~(1 << PRTIM0))
2622:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_timer0_disable()  (PRR |= (uint8_t)(1 << PRTIM0))
2623:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
2624:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_timer1_enable()   (PRR &= (uint8_t)~(1 << PRTIM1))
2625:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_timer1_disable()  (PRR |= (uint8_t)(1 << PRTIM1))
2626:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
2627:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** /* Universal Serial Interface */
2628:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_usi_enable()      (PRR &= (uint8_t)~(1 << PRUSI))
2629:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_usi_disable()     (PRR |= (uint8_t)(1 << PRUSI))
2630:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
2631:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_all_enable()      (PRR &= (uint8_t)~((1<<PRADC)|(1<<PRTIM0)|(1<<PRTIM1)|(1<<PRUSI)))
2632:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_all_disable()     (PRR |= (uint8_t)((1<<PRADC)|(1<<PRTIM0)|(1<<PRTIM1)|(1<<PRUSI)))
2633:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
2634:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #elif defined(__AVR_ATmega1284__)
2635:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
2636:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_adc_enable()      (PRR0 &= (uint8_t)~(1 << PRADC))
2637:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_adc_disable()     (PRR0 |= (uint8_t)(1 << PRADC))
2638:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
2639:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_spi_enable()      (PRR0 &= (uint8_t)~(1 << PRSPI))
2640:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_spi_disable()     (PRR0 |= (uint8_t)(1 << PRSPI))
2641:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
2642:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_twi_enable()      (PRR0 &= (uint8_t)~(1 << PRTWI))
2643:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_twi_disable()     (PRR0 |= (uint8_t)(1 << PRTWI))
2644:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
2645:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_timer0_enable()   (PRR0 &= (uint8_t)~(1 << PRTIM0))
2646:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_timer0_disable()  (PRR0 |= (uint8_t)(1 << PRTIM0))
2647:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
2648:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_timer1_enable()   (PRR0 &= (uint8_t)~(1 << PRTIM1))
2649:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_timer1_disable()  (PRR0 |= (uint8_t)(1 << PRTIM1))
2650:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
2651:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_timer2_enable()   (PRR0 &= (uint8_t)~(1 << PRTIM2))
2652:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_timer2_disable()  (PRR0 |= (uint8_t)(1 << PRTIM2))
2653:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
2654:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_timer3_enable()   (PRR1 &= (uint8_t)~(1 << PRTIM3))
2655:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_timer3_disable()  (PRR1 |= (uint8_t)(1 << PRTIM3))
2656:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
2657:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_usart0_enable()   (PRR0 &= (uint8_t)~(1 << PRUSART0))
2658:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_usart0_disable()  (PRR0 |= (uint8_t)(1 << PRUSART0))
2659:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
2660:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_all_enable() \
2661:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** do{ \
2662:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     PRR0 &= (uint8_t)~((1<<PRADC)|(1<<PRSPI)|(1<<PRTWI)|(1<<PRTIM0)|(1<<PRTIM1)|(1<<PRTIM2)|(1<<PRU
2663:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     PRR1 &= (uint8_t)~(1<<PRTIM3); \
2664:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** }while(0)
2665:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
2666:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_all_disable() \
2667:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** do{ \
2668:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     PRR0 |= (uint8_t)((1<<PRADC)|(1<<PRSPI)|(1<<PRTWI)|(1<<PRTIM0)|(1<<PRTIM1)|(1<<PRTIM2)|(1<<PRUS
2669:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     PRR1 |= (uint8_t)(1<<PRTIM3); \
2670:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** }while(0)
2671:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
2672:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #elif defined(__AVR_ATmega1284P__)
2673:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
2674:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
2675:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_adc_enable()      (PRR0 &= (uint8_t)~(1 << PRADC))
2676:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_adc_disable()     (PRR0 |= (uint8_t)(1 << PRADC))
2677:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
2678:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_spi_enable()      (PRR0 &= (uint8_t)~(1 << PRSPI))
2679:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_spi_disable()     (PRR0 |= (uint8_t)(1 << PRSPI))
2680:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
2681:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_twi_enable()      (PRR0 &= (uint8_t)~(1 << PRTWI))
2682:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_twi_disable()     (PRR0 |= (uint8_t)(1 << PRTWI))
2683:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
2684:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_timer0_enable()   (PRR0 &= (uint8_t)~(1 << PRTIM0))
2685:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_timer0_disable()  (PRR0 |= (uint8_t)(1 << PRTIM0))
2686:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
2687:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_timer1_enable()   (PRR0 &= (uint8_t)~(1 << PRTIM1))
2688:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_timer1_disable()  (PRR0 |= (uint8_t)(1 << PRTIM1))
2689:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
2690:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_timer2_enable()   (PRR0 &= (uint8_t)~(1 << PRTIM2))
2691:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_timer2_disable()  (PRR0 |= (uint8_t)(1 << PRTIM2))
2692:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
2693:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_timer3_enable()   (PRR1 &= (uint8_t)~(1 << PRTIM3))
2694:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_timer3_disable()  (PRR1 |= (uint8_t)(1 << PRTIM3))
2695:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
2696:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_usart0_enable()   (PRR0 &= (uint8_t)~(1 << PRUSART0))
2697:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_usart0_disable()  (PRR0 |= (uint8_t)(1 << PRUSART0))
2698:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
2699:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_usart1_enable()   (PRR0 &= (uint8_t)~(1 << PRUSART1))
2700:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_usart1_disable()  (PRR0 |= (uint8_t)(1 << PRUSART1))
2701:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
2702:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_all_enable() \
2703:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** do{ \
2704:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     PRR0 &= (uint8_t)~((1<<PRADC)|(1<<PRSPI)|(1<<PRTWI)|(1<<PRTIM0)|(1<<PRTIM1)|(1<<PRTIM2)|(1<<PRU
2705:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     PRR1 &= (uint8_t)~(1<<PRTIM3); \
2706:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** }while(0)
2707:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
2708:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_all_disable() \
2709:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** do{ \
2710:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     PRR0 |= (uint8_t)((1<<PRADC)|(1<<PRSPI)|(1<<PRTWI)|(1<<PRTIM0)|(1<<PRTIM1)|(1<<PRTIM2)|(1<<PRUS
2711:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     PRR1 |= (uint8_t)(1<<PRTIM3); \
2712:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** }while(0)
2713:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
2714:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
2715:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #elif defined(__AVR_ATmega32HVB__) \
2716:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega32HVBREVB__) \
2717:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega16HVB__) \
2718:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega16HVBREVB__) \
2719:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega26HVG__) \
2720:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega48HVF__)
2721:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
2722:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
2723:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_twi_enable()      (PRR0 &= (uint8_t)~(1 << PRTWI))
2724:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_twi_disable()     (PRR0 |= (uint8_t)(1 << PRTWI))
2725:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
2726:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_timer0_enable()   (PRR0 &= (uint8_t)~(1 << PRTIM0))
2727:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_timer0_disable()  (PRR0 |= (uint8_t)(1 << PRTIM0))
2728:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
2729:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_timer1_enable()   (PRR0 &= (uint8_t)~(1 << PRTIM1))
2730:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_timer1_disable()  (PRR0 |= (uint8_t)(1 << PRTIM1))
2731:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
2732:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** /* Voltage ADC */
2733:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_vadc_enable()     (PRR0 &= (uint8_t)~(1 << PRVADC))
2734:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_vadc_disable()    (PRR0 |= (uint8_t)(1 << PRVADC))
2735:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
2736:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_spi_enable()      (PRR0 &= (uint8_t)~(1 << PRSPI))
2737:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_spi_disable()     (PRR0 |= (uint8_t)(1 << PRSPI))
2738:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
2739:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_vrm_enable()      (PRR0 &= (uint8_t)~(1 << PRVRM))
2740:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_vrm_disable()     (PRR0 |= (uint8_t)(1 << PRVRM))
2741:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
2742:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_all_enable()      (PRR0 &= (uint8_t)~((1<<PRTWI)|(1<<PRTIM0)|(1<<PRTIM1)|(1<<PRVADC)|
2743:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_all_disable()     (PRR0 |= (uint8_t)((1<<PRTWI)|(1<<PRTIM0)|(1<<PRTIM1)|(1<<PRVADC)|(
2744:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
2745:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
2746:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #elif defined (__AVR_ATA5790__) \
2747:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** || defined (__AVR_ATA5790N__) \
2748:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** || defined (__AVR_ATA5795__)
2749:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
2750:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** // Enable the voltage monitor 
2751:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_vmonitor_enable()          (PRR0 &= (uint8_t)~(1 << PRVM))
2752:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_vmonitor_disable()         (PRR0 |= (uint8_t)(1 << PRVM))
2753:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
2754:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_irdriver_enable()          (PRR0 &= (uint8_t)~(1 << PRDS))
2755:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_irdriver_disable()         (PRR0 |= (uint8_t)(1 << PRDS))
2756:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
2757:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_crypto_enable()            (PRR0 &= (uint8_t)~(1 << PRCU))
2758:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_crypto_disable()           (PRR0 |= (uint8_t)(1 << PRCU))
2759:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
2760:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_timermodulator_enable()    (PRR0 &= (uint8_t)~(1 << PRTM))
2761:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_timermodulator_disable()   (PRR0 |= (uint8_t)(1 << PRTM))
2762:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
2763:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_timer1_enable()            (PRR0 &= (uint8_t)~(1 << PRT1))
2764:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_timer1_disable()           (PRR0 |= (uint8_t)(1 << PRT1))
2765:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
2766:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_timer2_enable()            (PRR0 &= (uint8_t)~(1 << PRT2))
2767:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_timer2_disable()           (PRR0 |= (uint8_t)(1 << PRT2))
2768:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
2769:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_timer3_enable()            (PRR0 &= (uint8_t)~(1 << PRT3))
2770:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_timer3_disable()           (PRR0 |= (uint8_t)(1 << PRT3))
2771:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
2772:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_spi_enable()               (PRR1 &= (uint8_t)~(1 << PRSPI))
2773:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_spi_disable()              (PRR1 |= (uint8_t)(1 << PRSPI))
2774:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
2775:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_cinterface_enable()        (PRR1 &= (uint8_t)~(1 << PRCI))
2776:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_cinterface_disable()       (PRR1 |= (uint8_t)(1 << PRCI))
2777:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
2778:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #if defined(__AVR_ATA5790__) \
2779:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATA5790N__)
2780:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
2781:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_lfreceiver_enable()        (PRR0 &= (uint8_t)~(1 << PRLFR))            
2782:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_lfreceiver_disable()       (PRR0 |= (uint8_t)(1 << PRLFR))            
2783:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
2784:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_all_enable() \
2785:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** do{ \
2786:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     PRR0 &= (uint8_t)~((1<<PRVM)|(1<<PRDS)|(1<<PRCU)|(1<<PRTM)|(1<<PRT3)|(1<<PRT2)|(1<<PRT1)|(1<<PR
2787:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     PRR1 &= (uint8_t)~((1<<PRSPI)|(1<<PRCI)); \
2788:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** }while(0)
2789:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
2790:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_all_disable() \
2791:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** do{ \
2792:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     PRR0 |= (uint8_t)((1<<PRVM)|(1<<PRDS)|(1<<PRCU)|(1<<PRTM)|(1<<PRT3)|(1<<PRT2)|(1<<PRT1)|(1<<PRL
2793:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     PRR1 |= (uint8_t)((1<<PRSPI)|(1<<PRCI)); \
2794:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** }while(0)
2795:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
2796:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #elif defined(__AVR_ATA5795__)
2797:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
2798:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_all_enable() \
2799:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** do{ \
2800:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     PRR0 &= (uint8_t)~((1<<PRVM)|(1<<PRDS)|(1<<PRCU)|(1<<PRTM)|(1<<PRT3)|(1<<PRT2)|(1<<PRT1)); \
2801:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     PRR1 &= (uint8_t)~((1<<PRSPI)|(1<<PRCI)); \
2802:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** }while(0)
2803:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
2804:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_all_disable() \
2805:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** do{ \
2806:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     PRR0 |= (uint8_t)((1<<PRVM)|(1<<PRDS)|(1<<PRCU)|(1<<PRTM)|(1<<PRT3)|(1<<PRT2)|(1<<PRT1)); \
2807:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     PRR1 |= (uint8_t)((1<<PRSPI)|(1<<PRCI)); \
2808:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** }while(0)
2809:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
2810:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #endif
2811:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
2812:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #elif defined(__AVR_ATA5831__)
2813:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
2814:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_clock_output_enable()     (PRR0 &= (uint8_t)~(1 << PRCO))
2815:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_clock_output_disable()    (PRR0 |= (uint8_t)(1 << PRCO))
2816:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
2817:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_voltage_monitor_enable()  (PRR0 &= (uint8_t)~(1 << PRVM))
2818:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_voltage_monitor_disable() (PRR0 |= (uint8_t)(1 << PRVM))
2819:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
2820:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_crc_enable()              (PRR0 &= (uint8_t)~(1 << PRCRC))
2821:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_crc_disable()             (PRR0 |= (uint8_t)(1 << PRCRC))
2822:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
2823:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_transmit_dsp_control_enable()     (PRR0 &= (uint8_t)~(1 << PRTXDC))
2824:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_transmit_dsp_control_disable()    (PRR0 |= (uint8_t)(1 << PRTXDC))
2825:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
2826:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_receive_dsp_control_enable()      (PRR0 &= (uint8_t)~(1 << PRRXDC))
2827:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_receive_dsp_control_disable()     (PRR0 |= (uint8_t)(1 << PRRXDC))
2828:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
2829:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_spi_enable()              (PRR0 &= (uint8_t)~(1 << PRSPI))
2830:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_spi_disable()             (PRR0 |= (uint8_t)(1 << PRSPI))
2831:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
2832:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_timer1_enable()           (PRR1 &= (uint8_t)~(1 << PRT1))
2833:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_timer1_disable()          (PRR1 |= (uint8_t)(1 << PRT1))
2834:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
2835:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_timer2_enable()           (PRR1 &= (uint8_t)~(1 << PRT2))
2836:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_timer2_disable()          (PRR1 |= (uint8_t)(1 << PRT2))
2837:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
2838:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_timer3_enable()           (PRR1 &= (uint8_t)~(1 << PRT3))
2839:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_timer3_disable()          (PRR1 |= (uint8_t)(1 << PRT3))
2840:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
2841:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_timer4_enable()           (PRR1 &= (uint8_t)~(1 << PRT4))
2842:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_timer4_disable()          (PRR1 |= (uint8_t)(1 << PRT4))
2843:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
2844:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_timer5_enable()           (PRR1 &= (uint8_t)~(1 << PRT5))
2845:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_timer5_disable()          (PRR1 |= (uint8_t)(1 << PRT5))
2846:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
2847:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_sequencer_state_machine_enable()  (PRR2 &= (uint8_t)~(1 << PRSSM))
2848:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_sequencer_state_machine_disable() (PRR2 |= (uint8_t)(1 << PRSSM))
2849:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
2850:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_tx_modulator_enable()     (PRR2 &= (uint8_t)~(1 << PRTM))
2851:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_tx_modulator_disable()    (PRR2 |= (uint8_t)(1 << PRTM))
2852:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
2853:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_rssi_buffer_enable()      (PRR2 &= (uint8_t)~(1 << PRRS))
2854:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_rssi_buffer_disable()     (PRR2 |= (uint8_t)(1 << PRRS))
2855:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
2856:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_id_scan_enable()          (PRR2 &= (uint8_t)~(1 << PRIDS))
2857:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_id_scan_disable()         (PRR2 |= (uint8_t)(1 << PRIDS))
2858:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
2859:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_data_fifo_enable()        (PRR2 &= (uint8_t)~(1 << PRDF))
2860:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_data_fifo_disable()       (PRR2 |= (uint8_t)(1 << PRDF))
2861:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
2862:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_preamble_rssi_fifo_enable()       (PRR2 &= (uint8_t)~(1 << PRSF))
2863:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_preamble_rssi_fifo_disable()      (PRR2 |= (uint8_t)(1 << PRSF))
2864:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
2865:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_rx_buffer_A_enable()      (PRR2 &= (uint8_t)~(1 << PRXA))
2866:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_rx_buffer_A_disable()     (PRR2 |= (uint8_t)(1 << PRXA))
2867:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
2868:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_rx_buffer_B_enable()      (PRR2 &= (uint8_t)~(1 << PRXB))
2869:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_rx_buffer_B_disable()     (PRR2 |= (uint8_t)(1 << PRXB))
2870:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
2871:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_all_enable() \
2872:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** do{ \
2873:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     PRR0 &= (uint8_t)~((1 << PRCO) | (1 << PRVM) | (1 << PRCRC) | (1 << PRTXDC) | (1 << PRRXDC) | (
2874:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     PRR1 &= (uint8_t)~((1 << PRT1) | (1 << PRT2) | (1 << PRT3) | (1 << PRT4) | (1 << PRT5)); \
2875:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     PRR2 &= (uint8_t)~((1 << PRSSM) | (1 << PRTM) | (1 << PRRS) | (1 << PRIDS) | (1 << PRDF) | (1 <
2876:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** }while(0)
2877:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
2878:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_all_disable() \
2879:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** do{ \
2880:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     PRR0 |= (uint8_t)((1 << PRCO) | (1 << PRVM) | (1 << PRCRC) | (1 << PRTXDC) | (1 << PRRXDC) | (1
2881:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     PRR1 |= (uint8_t)((1 << PRT1) | (1 << PRT2) | (1 << PRT3) | (1 << PRT4) | (1 << PRT5)); \
2882:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     PRR2 |= (uint8_t)((1 << PRSSM) | (1 << PRTM) | (1 << PRRS) | (1 << PRIDS) | (1 << PRDF) | (1 <<
2883:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** }while(0)
2884:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
2885:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #elif defined(__AVR_ATmega64HVE__) \
2886:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega64HVE2__) 
2887:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
2888:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_lin_enable()      (PRR0 &= (uint8_t)~(1 << PRLIN))
2889:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_lin_disable()     (PRR0 |= (uint8_t)(1 << PRLIN))
2890:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
2891:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_spi_enable()      (PRR0 &= (uint8_t)~(1 << PRSPI))
2892:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_spi_disable()     (PRR0 |= (uint8_t)(1 << PRSPI))
2893:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
2894:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_timer0_enable()   (PRR0 &= (uint8_t)~(1 << PRTIM0))
2895:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_timer0_disable()  (PRR0 |= (uint8_t)(1 << PRTIM0))
2896:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
2897:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_timer1_enable()   (PRR0 &= (uint8_t)~(1 << PRTIM1))
2898:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_timer1_disable()  (PRR0 |= (uint8_t)(1 << PRTIM1))
2899:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
2900:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_all_enable()      (PRR0 &= (uint8_t)~((1<<PRLIN)|(1<<PRSPI)|(1<<PRTIM0)|(1<<PRTIM1)))
2901:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_all_disable()     (PRR0 |= (uint8_t)((1<<PRLIN)|(1<<PRSPI)|(1<<PRTIM0)|(1<<PRTIM1)))
2902:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
2903:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #elif defined(__AVR_ATmega16M1__) \
2904:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega32C1__) \
2905:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega32M1__) \
2906:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega64C1__) \
2907:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega64M1__)
2908:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
2909:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_adc_enable()      (PRR &= (uint8_t)~(1 << PRADC))
2910:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_adc_disable()     (PRR |= (uint8_t)(1 << PRADC))
2911:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
2912:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_lin_enable()      (PRR &= (uint8_t)~(1 << PRLIN))
2913:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_lin_disable()     (PRR |= (uint8_t)(1 << PRLIN))
2914:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
2915:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_spi_enable()      (PRR &= (uint8_t)~(1 << PRSPI))
2916:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_spi_disable()     (PRR |= (uint8_t)(1 << PRSPI))
2917:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
2918:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_timer0_enable()   (PRR &= (uint8_t)~(1 << PRTIM0))
2919:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_timer0_disable()  (PRR |= (uint8_t)(1 << PRTIM0))
2920:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
2921:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_timer1_enable()   (PRR &= (uint8_t)~(1 << PRTIM1))
2922:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_timer1_disable()  (PRR |= (uint8_t)(1 << PRTIM1))
2923:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
2924:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_psc_enable()      (PRR &= (uint8_t)~(1 << PRPSC))
2925:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_psc_disable()     (PRR |= (uint8_t)(1 << PRPSC))
2926:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
2927:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_can_enable()      (PRR &= (uint8_t)~(1 << PRCAN))
2928:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_can_disable()     (PRR |= (uint8_t)(1 << PRCAN))
2929:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
2930:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_all_enable()      (PRR &= (uint8_t)~((1<<PRADC)|(1<<PRLIN)|(1<<PRSPI)|(1<<PRTIM0)|(1<
2931:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_all_disable()     (PRR |= (uint8_t)((1<<PRADC)|(1<<PRLIN)|(1<<PRSPI)|(1<<PRTIM0)|(1<<
2932:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
2933:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
2934:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #elif defined(__AVR_ATtiny167__) \
2935:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATtiny87__) \
2936:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATA5505__) \
2937:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATA5272__)
2938:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
2939:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_adc_enable()      (PRR &= (uint8_t)~(1 << PRADC))
2940:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_adc_disable()     (PRR |= (uint8_t)(1 << PRADC))
2941:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
2942:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_usi_enable()      (PRR &= (uint8_t)~(1 << PRUSI))
2943:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_usi_disable()     (PRR |= (uint8_t)(1 << PRUSI))
2944:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
2945:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_timer0_enable()   (PRR &= (uint8_t)~(1 << PRTIM0))
2946:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_timer0_disable()  (PRR |= (uint8_t)(1 << PRTIM0))
2947:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
2948:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_timer1_enable()   (PRR &= (uint8_t)~(1 << PRTIM1))
2949:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_timer1_disable()  (PRR |= (uint8_t)(1 << PRTIM1))
2950:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
2951:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_spi_enable()      (PRR &= (uint8_t)~(1 << PRSPI))
2952:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_spi_disable()     (PRR |= (uint8_t)(1 << PRSPI))
2953:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
2954:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_lin_enable()      (PRR &= (uint8_t)~(1 << PRLIN))
2955:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_lin_disable()     (PRR |= (uint8_t)(1 << PRLIN))
2956:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
2957:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_all_enable()      (PRR &= (uint8_t)~((1<<PRADC)|(1<<PRUSI)|(1<<PRTIM0)|(1<<PRTIM1)|(1
2958:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_all_disable()     (PRR |= (uint8_t)((1<<PRADC)|(1<<PRUSI)|(1<<PRTIM0)|(1<<PRTIM1)|(1<
2959:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
2960:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
2961:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #elif defined(__AVR_ATtiny1634__)
2962:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
2963:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_adc_enable()      (PRR &= (uint8_t)~(1 << PRADC))
2964:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_adc_disable()     (PRR |= (uint8_t)(1 << PRADC))
2965:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
2966:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_usart0_enable()      (PRR &= (uint8_t)~(1 << PRUSART0))
2967:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_usart0_disable()     (PRR |= (uint8_t)(1 << PRUSART0))
2968:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
2969:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_usart1_enable()      (PRR &= (uint8_t)~(1 << PRUSART1))
2970:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_usart1_disable()     (PRR |= (uint8_t)(1 << PRUSART1))
2971:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
2972:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_usi_enable()      (PRR &= (uint8_t)~(1 << PRUSI))
2973:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_usi_disable()     (PRR |= (uint8_t)(1 << PRUSI))
2974:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
2975:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_timer0_enable()   (PRR &= (uint8_t)~(1 << PRTIM0))
2976:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_timer0_disable()  (PRR |= (uint8_t)(1 << PRTIM0))
2977:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
2978:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_timer1_enable()   (PRR &= (uint8_t)~(1 << PRTIM1))
2979:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_timer1_disable()  (PRR |= (uint8_t)(1 << PRTIM1))
2980:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
2981:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_twi_enable()      (PRR &= (uint8_t)~(1 << PRTWI))
2982:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_twi_disable()     (PRR |= (uint8_t)(1 << PRTWI))
2983:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
2984:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_all_enable()      (PRR &= (uint8_t)~((1 << PRTWI)|(1 << PRUSI)|(1 << PRTIM0)|(1 << PR
2985:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_all_disable()     (PRR |= (uint8_t)((1 << PRTWI)|(1 << PRUSI)|(1 << PRTIM0)|(1 << PRT
2986:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
2987:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
2988:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #elif defined(__AVR_AT90USB82__) \
2989:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** || defined(__AVR_AT90USB162__) \
2990:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega8U2__) \
2991:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega16U2__) \
2992:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega32U2__)
2993:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
2994:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_spi_enable()      (PRR0 &= (uint8_t)~(1 << PRSPI))
2995:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_spi_disable()     (PRR0 |= (uint8_t)(1 << PRSPI))
2996:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
2997:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_timer0_enable()   (PRR0 &= (uint8_t)~(1 << PRTIM0))
2998:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_timer0_disable()  (PRR0 |= (uint8_t)(1 << PRTIM0))
2999:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
3000:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_timer1_enable()   (PRR0 &= (uint8_t)~(1 << PRTIM1))
3001:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_timer1_disable()  (PRR0 |= (uint8_t)(1 << PRTIM1))
3002:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
3003:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_usb_enable()      (PRR1 &= (uint8_t)~(1 << PRUSB))
3004:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_usb_disable()     (PRR1 |= (uint8_t)(1 << PRUSB))
3005:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
3006:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_usart1_enable()   (PRR1 &= (uint8_t)~(1 << PRUSART1))
3007:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_usart1_disable()  (PRR1 |= (uint8_t)(1 << PRUSART1))
3008:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
3009:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_all_enable() \
3010:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** do{ \
3011:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     PRR0 &= (uint8_t)~((1<<PRSPI)|(1<<PRTIM0)|(1<<PRTIM1)); \
3012:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     PRR1 &= (uint8_t)~((1<<PRUSB)|(1<<PRUSART1)); \
3013:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** }while(0)
3014:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
3015:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_all_disable() \
3016:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** do{ \
3017:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     PRR0 |= (uint8_t)((1<<PRSPI)|(1<<PRTIM0)|(1<<PRTIM1)); \
3018:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     PRR1 |= (uint8_t)((1<<PRUSB)|(1<<PRUSART1)); \
3019:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** }while(0)
3020:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
3021:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
3022:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #elif defined(__AVR_AT90SCR100__)
3023:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
3024:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_usart0_enable()   (PRR0 &= (uint8_t)~(1 << PRUSART0))
3025:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_usart0_disable()  (PRR0 |= (uint8_t)(1 << PRUSART0))
3026:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
3027:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_spi_enable()      (PRR0 &= (uint8_t)~(1 << PRSPI))
3028:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_spi_disable()     (PRR0 |= (uint8_t)(1 << PRSPI))
3029:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
3030:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_timer1_enable()   (PRR0 &= (uint8_t)~(1 << PRTIM1))
3031:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_timer1_disable()  (PRR0 |= (uint8_t)(1 << PRTIM1))
3032:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
3033:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_timer0_enable()   (PRR0 &= (uint8_t)~(1 << PRTIM0))
3034:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_timer0_disable()  (PRR0 |= (uint8_t)(1 << PRTIM0))
3035:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
3036:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_timer2_enable()   (PRR0 &= (uint8_t)~(1 << PRTIM2))
3037:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_timer2_disable()  (PRR0 |= (uint8_t)(1 << PRTIM2))
3038:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
3039:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_twi_enable()      (PRR0 &= (uint8_t)~(1 << PRTWI))
3040:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_twi_disable()     (PRR0 |= (uint8_t)(1 << PRTWI))
3041:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
3042:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_usbh_enable()     (PRR1 &= (uint8_t)~(1 << PRUSBH))
3043:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_usbh_disable()    (PRR1 |= (uint8_t)(1 << PRUSBH))
3044:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
3045:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_usb_enable()      (PRR1 &= (uint8_t)~(1 << PRUSB))
3046:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_usb_disable()     (PRR1 |= (uint8_t)(1 << PRUSB))
3047:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
3048:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_hsspi_enable()    (PRR1 &= (uint8_t)~(1 << PRHSSPI))
3049:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_hsspi_disable()   (PRR1 |= (uint8_t)(1 << PRHSSPI))
3050:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
3051:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_sci_enable()      (PRR1 &= (uint8_t)~(1 << PRSCI))
3052:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_sci_disable()     (PRR1 |= (uint8_t)(1 << PRSCI))
3053:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
3054:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_aes_enable()      (PRR1 &= (uint8_t)~(1 << PRAES))
3055:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_aes_disable()     (PRR1 |= (uint8_t)(1 << PRAES))
3056:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
3057:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_kb_enable()       (PRR1 &= (uint8_t)~(1 << PRKB))
3058:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_kb_disable()      (PRR1 |= (uint8_t)(1 << PRKB))
3059:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
3060:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_all_enable() \
3061:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** do{ \
3062:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     PRR0 &= (uint8_t)~((1<<PRUSART0)|(1<<PRSPI)|(1<<PRTIM1)|(1<<PRTIM0)|(1<<PRTIM2)|(1<<PRTWI)); \
3063:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     PRR1 &= (uint8_t)~((1<<PRUSBH)|(1<<PRUSB)|(1<<PRHSSPI)|(1<<PRSCI)|(1<<PRAES)|(1<<PRKB)); \
3064:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** }while(0)
3065:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
3066:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_all_disable() \
3067:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** do{ \
3068:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     PRR0 |= (uint8_t)((1<<PRUSART0)|(1<<PRSPI)|(1<<PRTIM1)|(1<<PRTIM0)|(1<<PRTIM2)|(1<<PRTWI)); \
3069:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     PRR1 |= (uint8_t)((1<<PRUSBH)|(1<<PRUSB)|(1<<PRHSSPI)|(1<<PRSCI)|(1<<PRAES)|(1<<PRKB)); \
3070:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** }while(0)
3071:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
3072:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
3073:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #elif defined(__AVR_ATtiny4__) \
3074:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATtiny5__) \
3075:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATtiny9__) \
3076:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATtiny10__) \
3077:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATtiny13A__) \
3078:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
3079:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_adc_enable()   (PRR &= (uint8_t)~(1 << PRADC))
3080:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_adc_disable()  (PRR |= (uint8_t)(1 << PRADC))
3081:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
3082:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_timer0_enable()   (PRR &= (uint8_t)~(1 << PRTIM0))
3083:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_timer0_disable()  (PRR |= (uint8_t)(1 << PRTIM0))
3084:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
3085:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_all_enable()      (PRR &= (uint8_t)~((1<<PRADC)|(1<<PRTIM0)))
3086:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_all_disable()     (PRR |= (uint8_t)((1<<PRADC)|(1<<PRTIM0)))
3087:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
3088:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
3089:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #elif defined(__AVR_ATtiny20__) \
3090:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATtiny40__) \
3091:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATtiny474__)
3092:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
3093:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_adc_enable()   (PRR &= (uint8_t)~(1 << PRADC))
3094:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_adc_disable()  (PRR |= (uint8_t)(1 << PRADC))
3095:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
3096:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_timer0_enable()   (PRR &= (uint8_t)~(1 << PRTIM0))
3097:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_timer0_disable()  (PRR |= (uint8_t)(1 << PRTIM0))
3098:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
3099:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_timer1_enable()   (PRR &= (uint8_t)~(1 << PRTIM1))
3100:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_timer1_disable()  (PRR |= (uint8_t)(1 << PRTIM1))
3101:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
3102:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_spi_enable()   (PRR &= (uint8_t)~(1 << PRSPI))
3103:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_spi_disable()  (PRR |= (uint8_t)(1 << PRSPI))
3104:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
3105:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_twi_enable()   (PRR &= (uint8_t)~(1 << PRTWI))
3106:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_twi_disable()  (PRR |= (uint8_t)(1 << PRTWI))
3107:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
3108:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_all_enable()      (PRR &= (uint8_t)~((1<<PRADC)|(1<<PRTIM0)|(1<<PRTIM1)|(1<<PRSPI)|(1
3109:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #define power_all_disable()     (PRR |= (uint8_t)((1<<PRADC)|(1<<PRTIM0)|(1<<PRTIM1)|(1<<PRSPI)|(1<
3110:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
3111:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #endif
3112:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
3113:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
3114:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #if defined(__AVR_AT90CAN32__) \
3115:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** || defined(__AVR_AT90CAN64__) \
3116:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** || defined(__AVR_AT90CAN128__) \
3117:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** || defined(__AVR_AT90PWM1__) \
3118:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** || defined(__AVR_AT90PWM2__) \
3119:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** || defined(__AVR_AT90PWM2B__) \
3120:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** || defined(__AVR_AT90PWM3__) \
3121:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** || defined(__AVR_AT90PWM3B__) \
3122:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** || defined(__AVR_AT90PWM81__) \
3123:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** || defined(__AVR_AT90PWM161__) \
3124:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** || defined(__AVR_AT90PWM216__) \
3125:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** || defined(__AVR_AT90PWM316__) \
3126:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** || defined(__AVR_AT90SCR100__) \
3127:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** || defined(__AVR_AT90USB646__) \
3128:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** || defined(__AVR_AT90USB647__) \
3129:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** || defined(__AVR_AT90USB82__) \
3130:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** || defined(__AVR_AT90USB1286__) \
3131:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** || defined(__AVR_AT90USB1287__) \
3132:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** || defined(__AVR_AT90USB162__) \
3133:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATA5505__) \
3134:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATA5272__) \
3135:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega1280__) \
3136:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega1281__) \
3137:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega1284__) \
3138:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega128RFA1__) \
3139:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega128RFA2__) \
3140:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega128RFR2__) \
3141:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega1284RFR2__) \
3142:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega1284P__) \
3143:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega162__) \
3144:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega164A__) \
3145:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega164P__) \
3146:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega164PA__) \
3147:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega165__) \
3148:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega165A__) \
3149:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega165P__) \
3150:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega165PA__) \
3151:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega168__) \
3152:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega168A__) \
3153:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega168P__) \
3154:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega168PA__) \
3155:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega169__) \
3156:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega169A__) \
3157:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega169P__) \
3158:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega169PA__) \
3159:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega16M1__) \
3160:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega16U2__) \
3161:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega324PA__) \
3162:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega16U4__) \
3163:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega2560__) \
3164:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega2561__) \
3165:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega256RFA2__) \
3166:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega256RFR2__) \
3167:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega2564RFR2__) \
3168:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega324A__) \
3169:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega324P__) \
3170:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega325__) \
3171:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega325A__) \
3172:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega325P__) \
3173:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega325PA__) \
3174:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega3250__) \
3175:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega3250A__) \
3176:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega3250P__) \
3177:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega3250PA__) \
3178:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega328__) \
3179:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega328P__) \
3180:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega329__) \
3181:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega329A__) \
3182:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega329P__) \
3183:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega329PA__) \
3184:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega3290__) \
3185:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega3290A__) \
3186:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega3290P__) \
3187:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega3290PA__) \
3188:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega32C1__) \
3189:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega32M1__) \
3190:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega32U2__) \
3191:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega32U4__) \
3192:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega32U6__) \
3193:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega48__) \
3194:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega48A__) \
3195:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega48PA__) \
3196:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega48P__) \
3197:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega640__) \
3198:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega649P__) \
3199:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega644__) \
3200:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega644A__) \
3201:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega644P__) \
3202:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega644PA__) \
3203:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega645__) \
3204:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega645A__) \
3205:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega645P__) \
3206:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega6450__) \
3207:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega6450A__) \
3208:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega6450P__) \
3209:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega649__) \
3210:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega649A__) \
3211:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega64M1__) \
3212:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega64C1__) \
3213:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega88A__) \
3214:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega88PA__) \
3215:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega6490__) \
3216:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega6490A__) \
3217:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega6490P__) \
3218:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega64RFA2__) \
3219:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega64RFR2__) \
3220:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega644RFR2__) \
3221:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega88__) \
3222:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega88P__) \
3223:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega8U2__) \
3224:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega16U2__) \
3225:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega32U2__) \
3226:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATtiny48__) \
3227:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATtiny88__) \
3228:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATtiny87__) \
3229:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATtiny167__) \
3230:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** || defined(__DOXYGEN__)
3231:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
3232:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
3233:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** /** \addtogroup avr_power
3234:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
3235:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** Some of the newer AVRs contain a System Clock Prescale Register (CLKPR) that
3236:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** allows you to decrease the system clock frequency and the power consumption
3237:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** when the need for processing power is low. Below are two macros and an
3238:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** enumerated type that can be used to interface to the Clock Prescale Register.
3239:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
3240:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** \note Not all AVR devices have a Clock Prescale Register. On those devices
3241:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** without a Clock Prescale Register, these macros are not available.
3242:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** */
3243:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
3244:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
3245:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** /** \addtogroup avr_power
3246:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** \code 
3247:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** typedef enum
3248:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** {
3249:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     clock_div_1 = 0,
3250:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     clock_div_2 = 1,
3251:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     clock_div_4 = 2,
3252:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     clock_div_8 = 3,
3253:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     clock_div_16 = 4,
3254:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     clock_div_32 = 5,
3255:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     clock_div_64 = 6,
3256:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     clock_div_128 = 7,
3257:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     clock_div_256 = 8,
3258:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     clock_div_1_rc = 15, // ATmega128RFA1 only
3259:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** } clock_div_t;
3260:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** \endcode
3261:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** Clock prescaler setting enumerations.
3262:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
3263:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** */
3264:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** typedef enum
3265:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** {
3266:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     clock_div_1 = 0,
3267:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     clock_div_2 = 1,
3268:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     clock_div_4 = 2,
3269:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     clock_div_8 = 3,
3270:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     clock_div_16 = 4,
3271:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     clock_div_32 = 5,
3272:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     clock_div_64 = 6,
3273:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     clock_div_128 = 7,
3274:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     clock_div_256 = 8
3275:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #if defined(__AVR_ATmega128RFA1__) \
3276:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega256RFA2__) \
3277:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega128RFA2__) \
3278:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega64RFA2__) \
3279:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega256RFR2__) \
3280:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega2564RFR2__) \
3281:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega128RFR2__) \
3282:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega1284RFR2__) \
3283:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega64RFR2__) \
3284:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** || defined(__AVR_ATmega644RFR2__)
3285:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     , clock_div_1_rc = 15
3286:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** #endif
3287:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** } clock_div_t;
3288:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
3289:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
3290:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** static __inline__ void clock_prescale_set(clock_div_t) __attribute__((__always_inline__));
3291:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
3292:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** /** \addtogroup avr_power
3293:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** \code clock_prescale_set(x) \endcode
3294:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
3295:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** Set the clock prescaler register select bits, selecting a system clock
3296:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** division setting. This function is inlined, even if compiler
3297:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** optimizations are disabled.
3298:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** 
3299:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** The type of x is clock_div_t.
3300:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** */
3301:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** void clock_prescale_set(clock_div_t __x)
3302:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h **** {
3303:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     uint8_t __tmp = _BV(CLKPCE);
3304:c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../../avr/include/avr\power.h ****     __asm__ __volatile__ (
 248               		.loc 3 3304 0
 249 0016 90E8      		ldi r25,lo8(-128)
 250 0018 80E0      		ldi r24,0
 251               	/* #APP */
 252               	 ;  3304 "c:\program files (x86)\atmel\avr tools\avr toolchain\bin\../lib/gcc/avr/4.7.2/../../../..
 253 001a 0FB6      		in __tmp_reg__,__SREG__
 254 001c F894      		cli
 255 001e 9093 6100 		sts 97, r25
 256 0022 8093 6100 		sts 97, r24
 257 0026 0FBE      		out __SREG__, __tmp_reg__
 258               	 ;  0 "" 2
 259               	/* #NOAPP */
 260               	.LBE97:
 261               	.LBE96:
 161:Caterina.c    **** 	MCUCR = (1 << IVCE);
 262               		.loc 1 161 0
 263 0028 81E0      		ldi r24,lo8(1)
 264 002a 85BF      		out 0x35,r24
 162:Caterina.c    **** 	MCUCR = (1 << IVSEL);
 265               		.loc 1 162 0
 266 002c 82E0      		ldi r24,lo8(2)
 267 002e 85BF      		out 0x35,r24
 165:Caterina.c    **** 	CPU_PRESCALE(0); 
 268               		.loc 1 165 0
 269 0030 E1E6      		ldi r30,lo8(97)
 270 0032 F0E0      		ldi r31,0
 271 0034 9083      		st Z,r25
 272 0036 1082      		st Z,__zero_reg__
 176:Caterina.c    **** 	OCR1AH = 0;
 273               		.loc 1 176 0
 274 0038 1092 8900 		sts 137,__zero_reg__
 177:Caterina.c    **** 	OCR1AL = 250;
 275               		.loc 1 177 0
 276 003c 9AEF      		ldi r25,lo8(-6)
 277 003e 9093 8800 		sts 136,r25
 178:Caterina.c    **** 	TIMSK1 = (1 << OCIE1A);					// enable timer 1 output compare A match interrupt
 278               		.loc 1 178 0
 279 0042 8093 6F00 		sts 111,r24
 179:Caterina.c    **** 	TCCR1B = ((1 << CS11) | (1 << CS10));	// 1/64 prescaler on timer 1 input
 280               		.loc 1 179 0
 281 0046 83E0      		ldi r24,lo8(3)
 282 0048 8093 8100 		sts 129,r24
 182:Caterina.c    **** 	USB_Init();
 283               		.loc 1 182 0
 284 004c 0C94 0000 		jmp USB_Init
 285               	.LVL6:
 286               		.cfi_endproc
 287               	.LFE98:
 289               		.section	.text.__vector_17,"ax",@progbits
 290               	.global	__vector_17
 292               	__vector_17:
 293               	.LFB99:
 187:Caterina.c    **** {
 294               		.loc 1 187 0
 295               		.cfi_startproc
 296 0000 1F92      		push r1
 297               	.LCFI0:
 298               		.cfi_def_cfa_offset 3
 299               		.cfi_offset 1, -2
 300 0002 0F92      		push r0
 301               	.LCFI1:
 302               		.cfi_def_cfa_offset 4
 303               		.cfi_offset 0, -3
 304 0004 0FB6      		in r0,__SREG__
 305 0006 0F92      		push r0
 306 0008 1124      		clr __zero_reg__
 307 000a 2F93      		push r18
 308               	.LCFI2:
 309               		.cfi_def_cfa_offset 5
 310               		.cfi_offset 18, -4
 311 000c 8F93      		push r24
 312               	.LCFI3:
 313               		.cfi_def_cfa_offset 6
 314               		.cfi_offset 24, -5
 315 000e 9F93      		push r25
 316               	.LCFI4:
 317               		.cfi_def_cfa_offset 7
 318               		.cfi_offset 25, -6
 319 0010 EF93      		push r30
 320               	.LCFI5:
 321               		.cfi_def_cfa_offset 8
 322               		.cfi_offset 30, -7
 323 0012 FF93      		push r31
 324               	.LCFI6:
 325               		.cfi_def_cfa_offset 9
 326               		.cfi_offset 31, -8
 327               	/* prologue: Signal */
 328               	/* frame size = 0 */
 329               	/* stack size = 8 */
 330               	.L__stack_usage = 8
 189:Caterina.c    **** 	TCNT1H = 0;
 331               		.loc 1 189 0
 332 0014 1092 8500 		sts 133,__zero_reg__
 190:Caterina.c    **** 	TCNT1L = 0;
 333               		.loc 1 190 0
 334 0018 1092 8400 		sts 132,__zero_reg__
 193:Caterina.c    **** 	if (TxLEDPulse && !(--TxLEDPulse))
 335               		.loc 1 193 0
 336 001c 8091 0000 		lds r24,TxLEDPulse
 337 0020 9091 0000 		lds r25,TxLEDPulse+1
 338 0024 0097      		sbiw r24,0
 339 0026 01F0      		breq .L21
 193:Caterina.c    **** 	if (TxLEDPulse && !(--TxLEDPulse))
 340               		.loc 1 193 0 is_stmt 0 discriminator 1
 341 0028 0197      		sbiw r24,1
 342 002a 9093 0000 		sts TxLEDPulse+1,r25
 343 002e 8093 0000 		sts TxLEDPulse,r24
 344               	.L21:
 195:Caterina.c    **** 	if (RxLEDPulse && !(--RxLEDPulse))
 345               		.loc 1 195 0 is_stmt 1
 346 0032 8091 0000 		lds r24,RxLEDPulse
 347 0036 9091 0000 		lds r25,RxLEDPulse+1
 348 003a 0097      		sbiw r24,0
 349 003c 01F0      		breq .L22
 195:Caterina.c    **** 	if (RxLEDPulse && !(--RxLEDPulse))
 350               		.loc 1 195 0 is_stmt 0 discriminator 1
 351 003e 0197      		sbiw r24,1
 352 0040 9093 0000 		sts RxLEDPulse+1,r25
 353 0044 8093 0000 		sts RxLEDPulse,r24
 354               	.L22:
 355               	.LVL7:
 356               	.LBB98:
 198:Caterina.c    **** 	if (pgm_read_word(0) != 0xFFFF)
 357               		.loc 1 198 0 is_stmt 1
 358 0048 E0E0      		ldi r30,0
 359 004a F0E0      		ldi r31,0
 360               	/* #APP */
 361               	 ;  198 "Caterina.c" 1
 362 004c 8591      		lpm r24, Z+
 363 004e 9491      		lpm r25, Z
 364               		
 365               	 ;  0 "" 2
 366               	.LVL8:
 367               	/* #NOAPP */
 368               	.LBE98:
 369 0050 0196      		adiw r24,1
 370 0052 01F0      		breq .L20
 199:Caterina.c    **** 		Timeout++;
 371               		.loc 1 199 0
 372 0054 8091 0000 		lds r24,Timeout
 373 0058 9091 0000 		lds r25,Timeout+1
 374               	.LVL9:
 375 005c 0196      		adiw r24,1
 376 005e 9093 0000 		sts Timeout+1,r25
 377 0062 8093 0000 		sts Timeout,r24
 378               	.L20:
 379               	/* epilogue start */
 200:Caterina.c    **** }
 380               		.loc 1 200 0
 381 0066 FF91      		pop r31
 382 0068 EF91      		pop r30
 383 006a 9F91      		pop r25
 384 006c 8F91      		pop r24
 385 006e 2F91      		pop r18
 386 0070 0F90      		pop r0
 387 0072 0FBE      		out __SREG__,r0
 388 0074 0F90      		pop r0
 389 0076 1F90      		pop r1
 390 0078 1895      		reti
 391               		.cfi_endproc
 392               	.LFE99:
 394               		.section	.text.EVENT_USB_Device_ConfigurationChanged,"ax",@progbits
 395               	.global	EVENT_USB_Device_ConfigurationChanged
 397               	EVENT_USB_Device_ConfigurationChanged:
 398               	.LFB100:
 206:Caterina.c    **** {
 399               		.loc 1 206 0
 400               		.cfi_startproc
 401               	/* prologue: function */
 402               	/* frame size = 0 */
 403               	/* stack size = 0 */
 404               	.L__stack_usage = 0
 405               	.LVL10:
 406               	.LBB99:
 407               	.LBB100:
 276:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return Endpoint_ConfigureEndpoint_Prv(Number, ((Type << EPTYPE0) | (Direction ? (1 << EPDIR) : 
 408               		.loc 2 276 0
 409 0000 42E0      		ldi r20,lo8(2)
 410 0002 61EC      		ldi r22,lo8(-63)
 411 0004 82E0      		ldi r24,lo8(2)
 412 0006 0E94 0000 		call Endpoint_ConfigureEndpoint_Prv
 413               	.LVL11:
 414               	.LBE100:
 415               	.LBE99:
 416               	.LBB101:
 417               	.LBB102:
 418 000a 42E1      		ldi r20,lo8(18)
 419 000c 61E8      		ldi r22,lo8(-127)
 420 000e 83E0      		ldi r24,lo8(3)
 421 0010 0E94 0000 		call Endpoint_ConfigureEndpoint_Prv
 422               	.LVL12:
 423               	.LBE102:
 424               	.LBE101:
 425               	.LBB103:
 426               	.LBB104:
 427 0014 42E1      		ldi r20,lo8(18)
 428 0016 60E8      		ldi r22,lo8(-128)
 429 0018 84E0      		ldi r24,lo8(4)
 430 001a 0C94 0000 		jmp Endpoint_ConfigureEndpoint_Prv
 431               	.LVL13:
 432               	.LBE104:
 433               	.LBE103:
 434               		.cfi_endproc
 435               	.LFE100:
 437               		.section	.text.EVENT_USB_Device_ControlRequest,"ax",@progbits
 438               	.global	EVENT_USB_Device_ControlRequest
 440               	EVENT_USB_Device_ControlRequest:
 441               	.LFB101:
 226:Caterina.c    **** {
 442               		.loc 1 226 0
 443               		.cfi_startproc
 444               	/* prologue: function */
 445               	/* frame size = 0 */
 446               	/* stack size = 0 */
 447               	.L__stack_usage = 0
 228:Caterina.c    **** 	if ((USB_ControlRequest.bmRequestType & (CONTROL_REQTYPE_TYPE | CONTROL_REQTYPE_RECIPIENT)) !=
 448               		.loc 1 228 0
 449 0000 8091 0000 		lds r24,USB_ControlRequest
 450 0004 982F      		mov r25,r24
 451 0006 9F77      		andi r25,lo8(127)
 452 0008 9132      		cpi r25,lo8(33)
 453 000a 01F4      		brne .L34
 235:Caterina.c    **** 	switch (USB_ControlRequest.bRequest)
 454               		.loc 1 235 0
 455 000c 9091 0000 		lds r25,USB_ControlRequest+1
 456 0010 9032      		cpi r25,lo8(32)
 457 0012 01F0      		breq .L36
 458 0014 9132      		cpi r25,lo8(33)
 459 0016 01F4      		brne .L34
 238:Caterina.c    **** 			if (USB_ControlRequest.bmRequestType == (REQDIR_DEVICETOHOST | REQTYPE_CLASS | REQREC_INTERFACE)
 460               		.loc 1 238 0
 461 0018 813A      		cpi r24,lo8(-95)
 462 001a 01F4      		brne .L34
 463               	.LBB105:
 464               	.LBB106:
 504:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				UEINTX &= ~(1 << RXSTPI);
 465               		.loc 2 504 0
 466 001c 8091 E800 		lds r24,232
 467 0020 877F      		andi r24,lo8(-9)
 468 0022 8093 E800 		sts 232,r24
 469               	.LBE106:
 470               	.LBE105:
 243:Caterina.c    **** 				Endpoint_Write_Control_Stream_LE(&LineEncoding, sizeof(CDC_LineEncoding_t));
 471               		.loc 1 243 0
 472 0026 67E0      		ldi r22,lo8(7)
 473 0028 70E0      		ldi r23,0
 474 002a 80E0      		ldi r24,lo8(LineEncoding)
 475 002c 90E0      		ldi r25,hi8(LineEncoding)
 476 002e 0E94 0000 		call Endpoint_Write_Control_Stream_LE
 477               	.LVL14:
 478               	.LBB107:
 479               	.LBB108:
 531:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					UEINTX &= ~((1 << RXOUTI) | (1 << FIFOCON));
 480               		.loc 2 531 0
 481 0032 8091 E800 		lds r24,232
 482 0036 8B77      		andi r24,lo8(123)
 483 0038 00C0      		rjmp .L38
 484               	.L36:
 485               	.LBE108:
 486               	.LBE107:
 249:Caterina.c    **** 			if (USB_ControlRequest.bmRequestType == (REQDIR_HOSTTODEVICE | REQTYPE_CLASS | REQREC_INTERFACE)
 487               		.loc 1 249 0
 488 003a 8132      		cpi r24,lo8(33)
 489 003c 01F4      		brne .L34
 490               	.LBB109:
 491               	.LBB110:
 504:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				UEINTX &= ~(1 << RXSTPI);
 492               		.loc 2 504 0
 493 003e 8091 E800 		lds r24,232
 494 0042 877F      		andi r24,lo8(-9)
 495 0044 8093 E800 		sts 232,r24
 496               	.LBE110:
 497               	.LBE109:
 254:Caterina.c    **** 				Endpoint_Read_Control_Stream_LE(&LineEncoding, sizeof(CDC_LineEncoding_t));
 498               		.loc 1 254 0
 499 0048 67E0      		ldi r22,lo8(7)
 500 004a 70E0      		ldi r23,0
 501 004c 80E0      		ldi r24,lo8(LineEncoding)
 502 004e 90E0      		ldi r25,hi8(LineEncoding)
 503 0050 0E94 0000 		call Endpoint_Read_Control_Stream_LE
 504               	.LVL15:
 505               	.LBB111:
 506               	.LBB112:
 516:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					UEINTX &= ~((1 << TXINI) | (1 << FIFOCON));
 507               		.loc 2 516 0
 508 0054 8091 E800 		lds r24,232
 509 0058 8E77      		andi r24,lo8(126)
 510               	.L38:
 511 005a 8093 E800 		sts 232,r24
 512               	.L34:
 513 005e 0895      		ret
 514               	.LBE112:
 515               	.LBE111:
 516               		.cfi_endproc
 517               	.LFE101:
 519               		.section	.rodata.str1.1,"aMS",@progbits,1
 520               	.LC0:
 521 0000 4341 5445 		.string	"CATERINA"
 521      5249 4E41 
 521      00
 522               		.section	.text.CDC_Task,"ax",@progbits
 523               	.global	CDC_Task
 525               	CDC_Task:
 526               	.LFB105:
 438:Caterina.c    **** }
 439:Caterina.c    **** 
 440:Caterina.c    **** #define STK_OK              0x10
 441:Caterina.c    **** #define STK_INSYNC          0x14  // ' '
 442:Caterina.c    **** #define CRC_EOP             0x20  // 'SPACE'
 443:Caterina.c    **** #define STK_GET_SYNC        0x30  // '0'
 444:Caterina.c    **** 
 445:Caterina.c    **** #define STK_GET_PARAMETER   0x41  // 'A'
 446:Caterina.c    **** #define STK_SET_DEVICE      0x42  // 'B'
 447:Caterina.c    **** #define STK_SET_DEVICE_EXT  0x45  // 'E'
 448:Caterina.c    **** #define STK_LOAD_ADDRESS    0x55  // 'U'
 449:Caterina.c    **** #define STK_UNIVERSAL       0x56  // 'V'
 450:Caterina.c    **** #define STK_PROG_PAGE       0x64  // 'd'
 451:Caterina.c    **** #define STK_READ_PAGE       0x74  // 't'
 452:Caterina.c    **** #define STK_READ_SIGN       0x75  // 'u'
 453:Caterina.c    **** 
 454:Caterina.c    **** /** Task to read in AVR910 commands from the CDC data OUT endpoint, process them, perform the requi
 455:Caterina.c    ****  *  and send the appropriate response back to the host.
 456:Caterina.c    ****  */
 457:Caterina.c    **** void CDC_Task(void)
 458:Caterina.c    **** {
 527               		.loc 1 458 0
 528               		.cfi_startproc
 529 0000 4F92      		push r4
 530               	.LCFI7:
 531               		.cfi_def_cfa_offset 3
 532               		.cfi_offset 4, -2
 533 0002 5F92      		push r5
 534               	.LCFI8:
 535               		.cfi_def_cfa_offset 4
 536               		.cfi_offset 5, -3
 537 0004 6F92      		push r6
 538               	.LCFI9:
 539               		.cfi_def_cfa_offset 5
 540               		.cfi_offset 6, -4
 541 0006 7F92      		push r7
 542               	.LCFI10:
 543               		.cfi_def_cfa_offset 6
 544               		.cfi_offset 7, -5
 545 0008 8F92      		push r8
 546               	.LCFI11:
 547               		.cfi_def_cfa_offset 7
 548               		.cfi_offset 8, -6
 549 000a 9F92      		push r9
 550               	.LCFI12:
 551               		.cfi_def_cfa_offset 8
 552               		.cfi_offset 9, -7
 553 000c AF92      		push r10
 554               	.LCFI13:
 555               		.cfi_def_cfa_offset 9
 556               		.cfi_offset 10, -8
 557 000e BF92      		push r11
 558               	.LCFI14:
 559               		.cfi_def_cfa_offset 10
 560               		.cfi_offset 11, -9
 561 0010 CF92      		push r12
 562               	.LCFI15:
 563               		.cfi_def_cfa_offset 11
 564               		.cfi_offset 12, -10
 565 0012 DF92      		push r13
 566               	.LCFI16:
 567               		.cfi_def_cfa_offset 12
 568               		.cfi_offset 13, -11
 569 0014 EF92      		push r14
 570               	.LCFI17:
 571               		.cfi_def_cfa_offset 13
 572               		.cfi_offset 14, -12
 573 0016 FF92      		push r15
 574               	.LCFI18:
 575               		.cfi_def_cfa_offset 14
 576               		.cfi_offset 15, -13
 577 0018 0F93      		push r16
 578               	.LCFI19:
 579               		.cfi_def_cfa_offset 15
 580               		.cfi_offset 16, -14
 581 001a 1F93      		push r17
 582               	.LCFI20:
 583               		.cfi_def_cfa_offset 16
 584               		.cfi_offset 17, -15
 585 001c CF93      		push r28
 586               	.LCFI21:
 587               		.cfi_def_cfa_offset 17
 588               		.cfi_offset 28, -16
 589 001e DF93      		push r29
 590               	.LCFI22:
 591               		.cfi_def_cfa_offset 18
 592               		.cfi_offset 29, -17
 593               	/* prologue: function */
 594               	/* frame size = 0 */
 595               	/* stack size = 16 */
 596               	.L__stack_usage = 16
 597               	.LVL16:
 598               	.LBB145:
 599               	.LBB146:
 330:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					UENUM = EndpointNumber;
 600               		.loc 2 330 0
 601 0020 84E0      		ldi r24,lo8(4)
 602 0022 8093 E900 		sts 233,r24
 603               	.LBE146:
 604               	.LBE145:
 605               	.LBB147:
 606               	.LBB148:
 479:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return ((UEINTX & (1 << RXOUTI)) ? true : false);
 607               		.loc 2 479 0
 608 0026 8091 E800 		lds r24,232
 609               	.LBE148:
 610               	.LBE147:
 459:Caterina.c    **** 	/* Select the OUT endpoint */
 460:Caterina.c    **** 	Endpoint_SelectEndpoint(CDC_RX_EPNUM);
 461:Caterina.c    **** 
 462:Caterina.c    **** 	/* Check if endpoint has a command in it sent from the host */
 463:Caterina.c    **** 	if (!(Endpoint_IsOUTReceived()))
 611               		.loc 1 463 0
 612 002a 82FF      		sbrs r24,2
 613 002c 00C0      		rjmp .L39
 464:Caterina.c    **** 	  return;
 465:Caterina.c    **** 	  
 466:Caterina.c    **** 	RX_LED_ON();
 467:Caterina.c    **** 	RxLEDPulse = TX_RX_LED_PULSE_PERIOD;
 614               		.loc 1 467 0
 615 002e 84E6      		ldi r24,lo8(100)
 616 0030 90E0      		ldi r25,0
 617 0032 9093 0000 		sts RxLEDPulse+1,r25
 618 0036 8093 0000 		sts RxLEDPulse,r24
 468:Caterina.c    **** 
 469:Caterina.c    **** 	/* Read in the bootloader command (first byte sent from host) */
 470:Caterina.c    **** 	uint8_t Command = FetchNextCommandByte();
 619               		.loc 1 470 0
 620 003a 0E94 0000 		call FetchNextCommandByte
 621               	.LVL17:
 622 003e 082F      		mov r16,r24
 623               	.LVL18:
 471:Caterina.c    **** 
 472:Caterina.c    **** 	if (Command == 'E')
 624               		.loc 1 472 0
 625 0040 8534      		cpi r24,lo8(69)
 626 0042 01F4      		brne .L41
 473:Caterina.c    **** 	{
 474:Caterina.c    **** 		/* We nearly run out the bootloader timeout clock, 
 475:Caterina.c    **** 		* leaving just a few hundred milliseconds so the 
 476:Caterina.c    **** 		* bootloder has time to respond and service any 
 477:Caterina.c    **** 		* subsequent requests */
 478:Caterina.c    **** 		Timeout = TIMEOUT_PERIOD - 500;
 627               		.loc 1 478 0
 628 0044 8CE4      		ldi r24,lo8(76)
 629 0046 9DE1      		ldi r25,lo8(29)
 630 0048 9093 0000 		sts Timeout+1,r25
 631 004c 8093 0000 		sts Timeout,r24
 632               	.L42:
 479:Caterina.c    **** 	
 480:Caterina.c    **** 		/* Re-enable RWW section - must be done here in case 
 481:Caterina.c    **** 		 * user has disabled verification on upload.  */
 482:Caterina.c    **** 		boot_rww_enable_safe();		
 633               		.loc 1 482 0 discriminator 1
 634 0050 07B6      		in __tmp_reg__,0x37
 635 0052 00FC      		sbrc __tmp_reg__,0
 636 0054 00C0      		rjmp .L42
 637               	.L110:
 638               		.loc 1 482 0 is_stmt 0
 639 0056 F999      		sbic 0x1f,1
 640 0058 00C0      		rjmp .L110
 641               		.loc 1 482 0 discriminator 3
 642 005a 81E1      		ldi r24,lo8(17)
 643               	/* #APP */
 644               	 ;  482 "Caterina.c" 1
 645 005c 8093 5700 		sts 87, r24
 646 0060 E895      		spm
 647               		
 648               	 ;  0 "" 2
 649               	/* #NOAPP */
 650 0062 00C0      		rjmp .L130
 651               	.L41:
 483:Caterina.c    **** 
 484:Caterina.c    **** 		// Send confirmation byte back to the host 
 485:Caterina.c    **** 		WriteNextResponseByte('\r');
 486:Caterina.c    **** 	}
 487:Caterina.c    **** 	else if (Command == 'T')
 652               		.loc 1 487 0 is_stmt 1
 653 0064 8435      		cpi r24,lo8(84)
 654 0066 01F4      		brne .L45
 488:Caterina.c    **** 	{
 489:Caterina.c    **** 		FetchNextCommandByte();
 655               		.loc 1 489 0
 656 0068 0E94 0000 		call FetchNextCommandByte
 657               	.LVL19:
 658               	.L130:
 490:Caterina.c    **** 
 491:Caterina.c    **** 		// Send confirmation byte back to the host 
 492:Caterina.c    **** 		WriteNextResponseByte('\r');
 659               		.loc 1 492 0
 660 006c 8DE0      		ldi r24,lo8(13)
 661               	.L131:
 662 006e 0E94 0000 		call WriteNextResponseByte
 663               	.LVL20:
 664 0072 00C0      		rjmp .L44
 665               	.L45:
 493:Caterina.c    **** 	}
 494:Caterina.c    **** 	else if ((Command == 'L') || (Command == 'P'))
 666               		.loc 1 494 0
 667 0074 8C34      		cpi r24,lo8(76)
 668 0076 01F0      		breq .L130
 669               		.loc 1 494 0 is_stmt 0 discriminator 1
 670 0078 8035      		cpi r24,lo8(80)
 671 007a 01F4      		brne .L47
 672 007c 00C0      		rjmp .L130
 673               	.L47:
 495:Caterina.c    **** 	{
 496:Caterina.c    **** 		// Send confirmation byte back to the host 
 497:Caterina.c    **** 		WriteNextResponseByte('\r');
 498:Caterina.c    **** 	}
 499:Caterina.c    **** 	else if (Command == 't')
 674               		.loc 1 499 0 is_stmt 1
 675 007e 8437      		cpi r24,lo8(116)
 676 0080 01F4      		brne .L48
 500:Caterina.c    **** 	{
 501:Caterina.c    **** 		// Return ATMEGA128 part code - this is only to allow AVRProg to use the bootloader 
 502:Caterina.c    **** 		WriteNextResponseByte(0x44);
 677               		.loc 1 502 0
 678 0082 84E4      		ldi r24,lo8(68)
 679 0084 0E94 0000 		call WriteNextResponseByte
 680               	.LVL21:
 503:Caterina.c    **** 		WriteNextResponseByte(0x00);
 681               		.loc 1 503 0
 682 0088 80E0      		ldi r24,0
 683 008a 00C0      		rjmp .L131
 684               	.L48:
 504:Caterina.c    **** 	}
 505:Caterina.c    **** 	else if (Command == 'a')
 685               		.loc 1 505 0
 686 008c 8136      		cpi r24,lo8(97)
 687 008e 01F4      		brne .L49
 506:Caterina.c    **** 	{
 507:Caterina.c    **** 		// Indicate auto-address increment is supported 
 508:Caterina.c    **** 		WriteNextResponseByte('Y');
 688               		.loc 1 508 0
 689 0090 89E5      		ldi r24,lo8(89)
 690 0092 00C0      		rjmp .L131
 691               	.L49:
 509:Caterina.c    **** 	}
 510:Caterina.c    **** 	else if (Command == 'A')
 692               		.loc 1 510 0
 693 0094 8134      		cpi r24,lo8(65)
 694 0096 01F4      		brne .L50
 511:Caterina.c    **** 	{
 512:Caterina.c    **** 		// Set the current address to that given by the host 
 513:Caterina.c    **** 		CurrAddress   = (FetchNextCommandByte() << 9);
 695               		.loc 1 513 0
 696 0098 0E94 0000 		call FetchNextCommandByte
 697               	.LVL22:
 698 009c C82F      		mov r28,r24
 514:Caterina.c    **** 		CurrAddress  |= (FetchNextCommandByte() << 1);
 699               		.loc 1 514 0
 700 009e 0E94 0000 		call FetchNextCommandByte
 701               	.LVL23:
 702 00a2 90E0      		ldi r25,0
 703 00a4 880F      		lsl r24
 704 00a6 991F      		rol r25
 513:Caterina.c    **** 		CurrAddress   = (FetchNextCommandByte() << 9);
 705               		.loc 1 513 0
 706 00a8 3C2F      		mov r19,r28
 707 00aa 330F      		lsl r19
 708 00ac 20E0      		ldi r18,0
 709               		.loc 1 514 0
 710 00ae 822B      		or r24,r18
 711 00b0 932B      		or r25,r19
 712 00b2 AA27      		clr r26
 713 00b4 97FD      		sbrc r25,7
 714 00b6 A095      		com r26
 715 00b8 BA2F      		mov r27,r26
 716 00ba 00C0      		rjmp .L133
 717               	.L50:
 515:Caterina.c    **** 
 516:Caterina.c    **** 		// Send confirmation byte back to the host 
 517:Caterina.c    **** 		WriteNextResponseByte('\r');
 518:Caterina.c    **** 	}
 519:Caterina.c    **** 	else if (Command == 'p')
 718               		.loc 1 519 0
 719 00bc 8037      		cpi r24,lo8(112)
 720 00be 01F4      		brne .L51
 520:Caterina.c    **** 	{
 521:Caterina.c    **** 		// Indicate serial programmer back to the host 
 522:Caterina.c    **** 		WriteNextResponseByte('S');
 721               		.loc 1 522 0
 722 00c0 83E5      		ldi r24,lo8(83)
 723 00c2 00C0      		rjmp .L131
 724               	.L51:
 523:Caterina.c    **** 	}
 524:Caterina.c    **** 	else if (Command == 'S')
 725               		.loc 1 524 0
 726 00c4 8335      		cpi r24,lo8(83)
 727 00c6 01F4      		brne .L52
 728 00c8 C0E0      		ldi r28,lo8(.LC0)
 729 00ca D0E0      		ldi r29,hi8(.LC0)
 730               	.L53:
 731               	.LBB149:
 525:Caterina.c    **** 	{
 526:Caterina.c    **** 		// Write the 7-byte software identifier to the endpoint 
 527:Caterina.c    **** 		for (uint8_t CurrByte = 0; CurrByte < 7; CurrByte++)
 528:Caterina.c    **** 		  WriteNextResponseByte(SOFTWARE_IDENTIFIER[CurrByte]);
 732               		.loc 1 528 0 discriminator 2
 733 00cc 8991      		ld r24,Y+
 734 00ce 0E94 0000 		call WriteNextResponseByte
 735               	.LVL24:
 527:Caterina.c    **** 		for (uint8_t CurrByte = 0; CurrByte < 7; CurrByte++)
 736               		.loc 1 527 0 discriminator 2
 737 00d2 20E0      		ldi r18,hi8(.LC0+7)
 738 00d4 C030      		cpi r28,lo8(.LC0+7)
 739 00d6 D207      		cpc r29,r18
 740 00d8 01F4      		brne .L53
 741 00da 00C0      		rjmp .L44
 742               	.L52:
 743               	.LBE149:
 529:Caterina.c    **** 	}
 530:Caterina.c    **** 	else if (Command == 'V')
 744               		.loc 1 530 0
 745 00dc 8635      		cpi r24,lo8(86)
 746 00de 01F4      		brne .L54
 531:Caterina.c    **** 	{
 532:Caterina.c    **** 		WriteNextResponseByte('0' + BOOTLOADER_VERSION_MAJOR);
 747               		.loc 1 532 0
 748 00e0 81E3      		ldi r24,lo8(49)
 749 00e2 0E94 0000 		call WriteNextResponseByte
 750               	.LVL25:
 533:Caterina.c    **** 		WriteNextResponseByte('0' + BOOTLOADER_VERSION_MINOR);
 751               		.loc 1 533 0
 752 00e6 80E3      		ldi r24,lo8(48)
 753 00e8 00C0      		rjmp .L131
 754               	.L54:
 534:Caterina.c    **** 	}
 535:Caterina.c    **** 	else if (Command == 's')
 755               		.loc 1 535 0
 756 00ea 8337      		cpi r24,lo8(115)
 757 00ec 01F4      		brne .L55
 536:Caterina.c    **** 	{
 537:Caterina.c    **** 		WriteNextResponseByte(AVR_SIGNATURE_3);
 758               		.loc 1 537 0
 759 00ee 87E8      		ldi r24,lo8(-121)
 760 00f0 0E94 0000 		call WriteNextResponseByte
 761               	.LVL26:
 538:Caterina.c    **** 		WriteNextResponseByte(AVR_SIGNATURE_2);
 762               		.loc 1 538 0
 763 00f4 85E9      		ldi r24,lo8(-107)
 764 00f6 0E94 0000 		call WriteNextResponseByte
 765               	.LVL27:
 539:Caterina.c    **** 		WriteNextResponseByte(AVR_SIGNATURE_1);
 766               		.loc 1 539 0
 767 00fa 8EE1      		ldi r24,lo8(30)
 768 00fc 00C0      		rjmp .L131
 769               	.L55:
 540:Caterina.c    **** 	}
 541:Caterina.c    **** 	else if (Command == 'e')
 770               		.loc 1 541 0
 771 00fe 8536      		cpi r24,lo8(101)
 772 0100 01F4      		brne .L56
 773 0102 E0E0      		ldi r30,0
 774 0104 F0E0      		ldi r31,0
 775               	.LBB150:
 542:Caterina.c    **** 	{
 543:Caterina.c    **** 		// Clear the application section of flash 
 544:Caterina.c    **** 		for (uint32_t CurrFlashAddress = 0; CurrFlashAddress < BOOT_START_ADDR; CurrFlashAddress += SPM_P
 545:Caterina.c    **** 		{
 546:Caterina.c    **** 			boot_page_erase(CurrFlashAddress);
 776               		.loc 1 546 0
 777 0106 83E0      		ldi r24,lo8(3)
 547:Caterina.c    **** 			boot_spm_busy_wait();
 548:Caterina.c    **** 			boot_page_write(CurrFlashAddress);
 778               		.loc 1 548 0
 779 0108 95E0      		ldi r25,lo8(5)
 780               	.L59:
 546:Caterina.c    **** 			boot_page_erase(CurrFlashAddress);
 781               		.loc 1 546 0
 782               	/* #APP */
 783               	 ;  546 "Caterina.c" 1
 784 010a 8093 5700 		sts 87, r24
 785 010e E895      		spm
 786               		
 787               	 ;  0 "" 2
 788               	/* #NOAPP */
 789               	.L57:
 547:Caterina.c    **** 			boot_spm_busy_wait();
 790               		.loc 1 547 0 discriminator 1
 791 0110 07B6      		in __tmp_reg__,0x37
 792 0112 00FC      		sbrc __tmp_reg__,0
 793 0114 00C0      		rjmp .L57
 794               		.loc 1 548 0
 795               	/* #APP */
 796               	 ;  548 "Caterina.c" 1
 797 0116 9093 5700 		sts 87, r25
 798 011a E895      		spm
 799               		
 800               	 ;  0 "" 2
 801               	/* #NOAPP */
 802               	.L58:
 549:Caterina.c    **** 			boot_spm_busy_wait();
 803               		.loc 1 549 0 discriminator 1
 804 011c 07B6      		in __tmp_reg__,0x37
 805 011e 00FC      		sbrc __tmp_reg__,0
 806 0120 00C0      		rjmp .L58
 807               	.LVL28:
 808 0122 E058      		subi r30,-128
 809 0124 FF4F      		sbci r31,-1
 544:Caterina.c    **** 		for (uint32_t CurrFlashAddress = 0; CurrFlashAddress < BOOT_START_ADDR; CurrFlashAddress += SPM_P
 810               		.loc 1 544 0
 811 0126 E115      		cp r30,__zero_reg__
 812 0128 20E7      		ldi r18,112
 813 012a F207      		cpc r31,r18
 814 012c 01F4      		brne .L59
 815 012e 00C0      		rjmp .L130
 816               	.L56:
 817               	.LBE150:
 550:Caterina.c    **** 		}
 551:Caterina.c    **** 
 552:Caterina.c    **** 		// Send confirmation byte back to the host 
 553:Caterina.c    **** 		WriteNextResponseByte('\r');
 554:Caterina.c    **** 	}
 555:Caterina.c    **** 	#if !defined(NO_LOCK_BYTE_WRITE_SUPPORT)
 556:Caterina.c    **** 	else if (Command == 'l')
 557:Caterina.c    **** 	{
 558:Caterina.c    **** 		// Set the lock bits to those given by the host 
 559:Caterina.c    **** 		boot_lock_bits_set(FetchNextCommandByte());
 560:Caterina.c    **** 
 561:Caterina.c    **** 		// Send confirmation byte back to the host 
 562:Caterina.c    **** 		WriteNextResponseByte('\r');
 563:Caterina.c    **** 	}
 564:Caterina.c    **** 	#endif
 565:Caterina.c    **** 	else if (Command == 'r')
 818               		.loc 1 565 0
 819 0130 8237      		cpi r24,lo8(114)
 820 0132 01F4      		brne .L60
 821               	.LBB151:
 566:Caterina.c    **** 	{
 567:Caterina.c    **** 		WriteNextResponseByte(boot_lock_fuse_bits_get(GET_LOCK_BITS));
 822               		.loc 1 567 0
 823 0134 E1E0      		ldi r30,lo8(1)
 824 0136 F0E0      		ldi r31,0
 825 0138 00C0      		rjmp .L132
 826               	.L60:
 827               	.LBE151:
 568:Caterina.c    **** 	}
 569:Caterina.c    **** 	else if (Command == 'F')
 828               		.loc 1 569 0
 829 013a 8634      		cpi r24,lo8(70)
 830 013c 01F4      		brne .L61
 831               	.LBB152:
 570:Caterina.c    **** 	{
 571:Caterina.c    **** 		WriteNextResponseByte(boot_lock_fuse_bits_get(GET_LOW_FUSE_BITS));
 832               		.loc 1 571 0
 833 013e E0E0      		ldi r30,0
 834 0140 F0E0      		ldi r31,0
 835 0142 00C0      		rjmp .L132
 836               	.L61:
 837               	.LBE152:
 572:Caterina.c    **** 	}
 573:Caterina.c    **** 	else if (Command == 'N')
 838               		.loc 1 573 0
 839 0144 8E34      		cpi r24,lo8(78)
 840 0146 01F4      		brne .L62
 841               	.LBB153:
 574:Caterina.c    **** 	{
 575:Caterina.c    **** 		WriteNextResponseByte(boot_lock_fuse_bits_get(GET_HIGH_FUSE_BITS));
 842               		.loc 1 575 0
 843 0148 E3E0      		ldi r30,lo8(3)
 844 014a F0E0      		ldi r31,0
 845 014c 00C0      		rjmp .L132
 846               	.L62:
 847               	.LBE153:
 576:Caterina.c    **** 	}
 577:Caterina.c    **** 	else if (Command == 'Q')
 848               		.loc 1 577 0
 849 014e 8135      		cpi r24,lo8(81)
 850 0150 01F4      		brne .L63
 851               	.LBB154:
 578:Caterina.c    **** 	{
 579:Caterina.c    **** 		WriteNextResponseByte(boot_lock_fuse_bits_get(GET_EXTENDED_FUSE_BITS));
 852               		.loc 1 579 0
 853 0152 E2E0      		ldi r30,lo8(2)
 854 0154 F0E0      		ldi r31,0
 855               	.L132:
 856 0156 89E0      		ldi r24,lo8(9)
 857               	/* #APP */
 858               	 ;  579 "Caterina.c" 1
 859 0158 8093 5700 		sts 87, r24
 860 015c 8491      		lpm r24, Z
 861               		
 862               	 ;  0 "" 2
 863               	.LVL29:
 864               	/* #NOAPP */
 865 015e 00C0      		rjmp .L131
 866               	.LVL30:
 867               	.L63:
 868               	.LBE154:
 580:Caterina.c    **** 	}
 581:Caterina.c    **** 	#if !defined(NO_BLOCK_SUPPORT)
 582:Caterina.c    **** 	else if (Command == 'b')
 869               		.loc 1 582 0
 870 0160 8236      		cpi r24,lo8(98)
 871 0162 01F4      		brne .L64
 583:Caterina.c    **** 	{
 584:Caterina.c    **** 		WriteNextResponseByte('Y');
 872               		.loc 1 584 0
 873 0164 89E5      		ldi r24,lo8(89)
 874 0166 0E94 0000 		call WriteNextResponseByte
 875               	.LVL31:
 585:Caterina.c    **** 
 586:Caterina.c    **** 		// Send block size to the host 
 587:Caterina.c    **** 		WriteNextResponseByte(SPM_PAGESIZE >> 8);
 876               		.loc 1 587 0
 877 016a 80E0      		ldi r24,0
 878 016c 0E94 0000 		call WriteNextResponseByte
 879               	.LVL32:
 588:Caterina.c    **** 		WriteNextResponseByte(SPM_PAGESIZE & 0xFF);
 880               		.loc 1 588 0
 881 0170 80E8      		ldi r24,lo8(-128)
 882 0172 00C0      		rjmp .L131
 883               	.L64:
 589:Caterina.c    **** 	}
 590:Caterina.c    **** 	else if ((Command == 'B') || (Command == 'g'))
 884               		.loc 1 590 0
 885 0174 8234      		cpi r24,lo8(66)
 886 0176 01F0      		breq .L65
 887               		.loc 1 590 0 is_stmt 0 discriminator 1
 888 0178 8736      		cpi r24,lo8(103)
 889 017a 01F0      		breq .+2
 890 017c 00C0      		rjmp .L66
 891               	.L65:
 591:Caterina.c    **** 	{
 592:Caterina.c    **** 		// Keep resetting the timeout counter if we're receiving self-programming instructions
 593:Caterina.c    **** 		Timeout = 0;
 892               		.loc 1 593 0 is_stmt 1
 893 017e 1092 0000 		sts Timeout+1,__zero_reg__
 894 0182 1092 0000 		sts Timeout,__zero_reg__
 895               	.LVL33:
 896               	.LBB155:
 897               	.LBB156:
 276:Caterina.c    **** 	BlockSize  = (FetchNextCommandByte() << 8);
 898               		.loc 1 276 0
 899 0186 0E94 0000 		call FetchNextCommandByte
 900               	.LVL34:
 901 018a C82E      		mov r12,r24
 902               	.LVL35:
 277:Caterina.c    **** 	BlockSize |=  FetchNextCommandByte();
 903               		.loc 1 277 0
 904 018c 0E94 0000 		call FetchNextCommandByte
 905               	.LVL36:
 906 0190 D82E      		mov r13,r24
 907               	.LVL37:
 279:Caterina.c    **** 	MemoryType =  FetchNextCommandByte();
 908               		.loc 1 279 0
 909 0192 0E94 0000 		call FetchNextCommandByte
 910               	.LVL38:
 911 0196 182F      		mov r17,r24
 912               	.LVL39:
 281:Caterina.c    **** 	if ((MemoryType != 'E') && (MemoryType != 'F'))
 913               		.loc 1 281 0
 914 0198 8554      		subi r24,lo8(-(-69))
 915 019a 8230      		cpi r24,lo8(2)
 916 019c 00F0      		brlo .L67
 917               	.LVL40:
 918               	.L91:
 284:Caterina.c    **** 		WriteNextResponseByte('?');
 919               		.loc 1 284 0
 920 019e 8FE3      		ldi r24,lo8(63)
 921 01a0 00C0      		rjmp .L131
 922               	.LVL41:
 923               	.L67:
 276:Caterina.c    **** 	BlockSize  = (FetchNextCommandByte() << 8);
 924               		.loc 1 276 0
 925 01a2 DC2D      		mov r29,r12
 926 01a4 80E0      		ldi r24,0
 927 01a6 C82F      		mov r28,r24
 277:Caterina.c    **** 	BlockSize |=  FetchNextCommandByte();
 928               		.loc 1 277 0
 929 01a8 CD29      		or r28,r13
 291:Caterina.c    **** 	TIMSK1 = 0;
 930               		.loc 1 291 0
 931 01aa 1092 6F00 		sts 111,__zero_reg__
 294:Caterina.c    **** 	if (Command == 'g')
 932               		.loc 1 294 0
 933 01ae 0736      		cpi r16,lo8(103)
 934 01b0 01F0      		breq .+2
 935 01b2 00C0      		rjmp .L68
 297:Caterina.c    **** 		boot_rww_enable();
 936               		.loc 1 297 0
 937 01b4 81E1      		ldi r24,lo8(17)
 938               	/* #APP */
 939               	 ;  297 "Caterina.c" 1
 940 01b6 8093 5700 		sts 87, r24
 941 01ba E895      		spm
 942               		
 943               	 ;  0 "" 2
 273:Caterina.c    **** 	bool     HighByte = false;
 944               		.loc 1 273 0
 945               	/* #NOAPP */
 946 01bc B12C      		mov r11,__zero_reg__
 314:Caterina.c    **** 				HighByte = !HighByte;
 947               		.loc 1 314 0
 948 01be 01E0      		ldi r16,lo8(1)
 949               	.LVL42:
 950 01c0 00C0      		rjmp .L69
 951               	.LVL43:
 952               	.L73:
 953 01c2 C090 0000 		lds r12,CurrAddress
 954 01c6 D090 0000 		lds r13,CurrAddress+1
 955 01ca E090 0000 		lds r14,CurrAddress+2
 956 01ce F090 0000 		lds r15,CurrAddress+3
 301:Caterina.c    **** 			if (MemoryType == 'F')
 957               		.loc 1 301 0
 958 01d2 1634      		cpi r17,lo8(70)
 959 01d4 01F4      		brne .L70
 960               	.LVL44:
 961               	.LBB157:
 307:Caterina.c    **** 				WriteNextResponseByte(pgm_read_byte(CurrAddress | HighByte));
 962               		.loc 1 307 0
 963 01d6 EB2D      		mov r30,r11
 964 01d8 F0E0      		ldi r31,0
 965 01da EC29      		or r30,r12
 966 01dc FD29      		or r31,r13
 967               	/* #APP */
 968               	 ;  307 "Caterina.c" 1
 969 01de 8491      		lpm r24, Z
 970               		
 971               	 ;  0 "" 2
 972               	.LVL45:
 973               	/* #NOAPP */
 974               	.LBE157:
 975 01e0 0E94 0000 		call WriteNextResponseByte
 976               	.LVL46:
 311:Caterina.c    **** 				if (HighByte)
 977               		.loc 1 311 0
 978 01e4 BB20      		tst r11
 979 01e6 01F0      		breq .L71
 312:Caterina.c    **** 				  CurrAddress += 2;
 980               		.loc 1 312 0
 981 01e8 E2E0      		ldi r30,2
 982 01ea CE0E      		add r12,r30
 983 01ec D11C      		adc r13,__zero_reg__
 984 01ee E11C      		adc r14,__zero_reg__
 985 01f0 F11C      		adc r15,__zero_reg__
 986               	.LVL47:
 987 01f2 C092 0000 		sts CurrAddress,r12
 988 01f6 D092 0000 		sts CurrAddress+1,r13
 989 01fa E092 0000 		sts CurrAddress+2,r14
 990 01fe F092 0000 		sts CurrAddress+3,r15
 991               	.LVL48:
 992               	.L71:
 314:Caterina.c    **** 				HighByte = !HighByte;
 993               		.loc 1 314 0
 994 0202 B026      		eor r11,r16
 995               	.LVL49:
 996 0204 00C0      		rjmp .L72
 997               	.L70:
 319:Caterina.c    **** 				WriteNextResponseByte(eeprom_read_byte((uint8_t*)(intptr_t)(CurrAddress >> 1)));
 998               		.loc 1 319 0
 999 0206 D701      		movw r26,r14
 1000 0208 C601      		movw r24,r12
 1001 020a B695      		lsr r27
 1002 020c A795      		ror r26
 1003 020e 9795      		ror r25
 1004 0210 8795      		ror r24
 1005 0212 0E94 0000 		call __eerd_byte_m32u4
 1006               	.LVL50:
 1007 0216 0E94 0000 		call WriteNextResponseByte
 1008               	.LVL51:
 322:Caterina.c    **** 				CurrAddress += 2;
 1009               		.loc 1 322 0
 1010 021a F2E0      		ldi r31,2
 1011 021c CF0E      		add r12,r31
 1012 021e D11C      		adc r13,__zero_reg__
 1013 0220 E11C      		adc r14,__zero_reg__
 1014 0222 F11C      		adc r15,__zero_reg__
 1015 0224 C092 0000 		sts CurrAddress,r12
 1016 0228 D092 0000 		sts CurrAddress+1,r13
 1017 022c E092 0000 		sts CurrAddress+2,r14
 1018 0230 F092 0000 		sts CurrAddress+3,r15
 1019               	.L72:
 1020 0234 2197      		sbiw r28,1
 1021               	.LVL52:
 1022               	.L69:
 299:Caterina.c    **** 		while (BlockSize--)
 1023               		.loc 1 299 0
 1024 0236 2097      		sbiw r28,0
 1025 0238 01F4      		brne .L73
 1026 023a 00C0      		rjmp .L74
 1027               	.LVL53:
 1028               	.L68:
 1029               	.LBB158:
 328:Caterina.c    **** 		uint32_t PageStartAddress = CurrAddress;
 1030               		.loc 1 328 0
 1031 023c 8090 0000 		lds r8,CurrAddress
 1032 0240 9090 0000 		lds r9,CurrAddress+1
 1033 0244 A090 0000 		lds r10,CurrAddress+2
 1034 0248 B090 0000 		lds r11,CurrAddress+3
 330:Caterina.c    **** 		if (MemoryType == 'F')
 1035               		.loc 1 330 0
 1036 024c 1634      		cpi r17,lo8(70)
 1037 024e 01F0      		breq .+2
 1038 0250 00C0      		rjmp .L97
 332:Caterina.c    **** 			boot_page_erase(PageStartAddress);
 1039               		.loc 1 332 0
 1040 0252 83E0      		ldi r24,lo8(3)
 1041 0254 F401      		movw r30,r8
 1042               	/* #APP */
 1043               	 ;  332 "Caterina.c" 1
 1044 0256 8093 5700 		sts 87, r24
 1045 025a E895      		spm
 1046               		
 1047               	 ;  0 "" 2
 1048               	/* #NOAPP */
 1049               	.L76:
 333:Caterina.c    **** 			boot_spm_busy_wait();
 1050               		.loc 1 333 0
 1051 025c 07B6      		in __tmp_reg__,0x37
 1052 025e 00FC      		sbrc __tmp_reg__,0
 1053 0260 00C0      		rjmp .L76
 1054 0262 00C0      		rjmp .L97
 1055               	.LVL54:
 1056               	.L81:
 338:Caterina.c    **** 			if (MemoryType == 'F')
 1057               		.loc 1 338 0
 1058 0264 1634      		cpi r17,lo8(70)
 1059 0266 01F4      		brne .L77
 341:Caterina.c    **** 				if (HighByte)
 1060               		.loc 1 341 0
 1061 0268 DD20      		tst r13
 1062 026a 01F0      		breq .L78
 344:Caterina.c    **** 					boot_page_fill(CurrAddress, ((FetchNextCommandByte() << 8) | LowByte));
 1063               		.loc 1 344 0
 1064 026c 4090 0000 		lds r4,CurrAddress
 1065 0270 5090 0000 		lds r5,CurrAddress+1
 1066 0274 6090 0000 		lds r6,CurrAddress+2
 1067 0278 7090 0000 		lds r7,CurrAddress+3
 1068 027c 0E94 0000 		call FetchNextCommandByte
 1069               	.LVL55:
 1070 0280 F82E      		mov r15,r24
 1071 0282 E12C      		mov r14,__zero_reg__
 1072 0284 9701      		movw r18,r14
 1073 0286 2C29      		or r18,r12
 1074 0288 F201      		movw r30,r4
 1075               	/* #APP */
 1076               	 ;  344 "Caterina.c" 1
 1077 028a 0901      		movw  r0, r18
 1078 028c 0093 5700 		sts 87, r16
 1079 0290 E895      		spm
 1080 0292 1124      		clr  r1
 1081               		
 1082               	 ;  0 "" 2
 347:Caterina.c    **** 					CurrAddress += 2;
 1083               		.loc 1 347 0
 1084               	/* #NOAPP */
 1085 0294 F2E0      		ldi r31,2
 1086 0296 4F0E      		add r4,r31
 1087 0298 511C      		adc r5,__zero_reg__
 1088 029a 611C      		adc r6,__zero_reg__
 1089 029c 711C      		adc r7,__zero_reg__
 1090 029e 4092 0000 		sts CurrAddress,r4
 1091 02a2 5092 0000 		sts CurrAddress+1,r5
 1092 02a6 6092 0000 		sts CurrAddress+2,r6
 1093 02aa 7092 0000 		sts CurrAddress+3,r7
 1094 02ae 00C0      		rjmp .L79
 1095               	.L78:
 351:Caterina.c    **** 					LowByte = FetchNextCommandByte();
 1096               		.loc 1 351 0
 1097 02b0 0E94 0000 		call FetchNextCommandByte
 1098               	.LVL56:
 1099 02b4 C82E      		mov r12,r24
 1100               	.L79:
 354:Caterina.c    **** 				HighByte = !HighByte;
 1101               		.loc 1 354 0
 1102 02b6 D026      		eor r13,r16
 1103 02b8 00C0      		rjmp .L80
 1104               	.L77:
 359:Caterina.c    **** 				eeprom_write_byte((uint8_t*)((intptr_t)(CurrAddress >> 1)), FetchNextCommandByte());
 1105               		.loc 1 359 0
 1106 02ba 0E94 0000 		call FetchNextCommandByte
 1107               	.LVL57:
 1108 02be 682F      		mov r22,r24
 1109 02c0 8091 0000 		lds r24,CurrAddress
 1110 02c4 9091 0000 		lds r25,CurrAddress+1
 1111 02c8 A091 0000 		lds r26,CurrAddress+2
 1112 02cc B091 0000 		lds r27,CurrAddress+3
 1113 02d0 B695      		lsr r27
 1114 02d2 A795      		ror r26
 1115 02d4 9795      		ror r25
 1116 02d6 8795      		ror r24
 1117 02d8 0E94 0000 		call __eewr_byte_m32u4
 1118               	.LVL58:
 362:Caterina.c    **** 				CurrAddress += 2;
 1119               		.loc 1 362 0
 1120 02dc 4091 0000 		lds r20,CurrAddress
 1121 02e0 5091 0000 		lds r21,CurrAddress+1
 1122 02e4 6091 0000 		lds r22,CurrAddress+2
 1123 02e8 7091 0000 		lds r23,CurrAddress+3
 1124 02ec 4E5F      		subi r20,-2
 1125 02ee 5F4F      		sbci r21,-1
 1126 02f0 6F4F      		sbci r22,-1
 1127 02f2 7F4F      		sbci r23,-1
 1128 02f4 4093 0000 		sts CurrAddress,r20
 1129 02f8 5093 0000 		sts CurrAddress+1,r21
 1130 02fc 6093 0000 		sts CurrAddress+2,r22
 1131 0300 7093 0000 		sts CurrAddress+3,r23
 1132               	.L80:
 1133 0304 2197      		sbiw r28,1
 1134 0306 00C0      		rjmp .L127
 1135               	.LVL59:
 1136               	.L97:
 330:Caterina.c    **** 		if (MemoryType == 'F')
 1137               		.loc 1 330 0
 1138 0308 C12C      		mov r12,__zero_reg__
 1139               	.LVL60:
 1140 030a D12C      		mov r13,__zero_reg__
 354:Caterina.c    **** 				HighByte = !HighByte;
 1141               		.loc 1 354 0
 1142 030c 01E0      		ldi r16,lo8(1)
 1143               	.LVL61:
 1144               	.L127:
 336:Caterina.c    **** 		while (BlockSize--)
 1145               		.loc 1 336 0
 1146 030e 2097      		sbiw r28,0
 1147 0310 01F0      		breq .+2
 1148 0312 00C0      		rjmp .L81
 367:Caterina.c    **** 		if (MemoryType == 'F')
 1149               		.loc 1 367 0
 1150 0314 1634      		cpi r17,lo8(70)
 1151 0316 01F4      		brne .L82
 370:Caterina.c    **** 			boot_page_write(PageStartAddress);
 1152               		.loc 1 370 0
 1153 0318 85E0      		ldi r24,lo8(5)
 1154 031a F401      		movw r30,r8
 1155               	/* #APP */
 1156               	 ;  370 "Caterina.c" 1
 1157 031c 8093 5700 		sts 87, r24
 1158 0320 E895      		spm
 1159               		
 1160               	 ;  0 "" 2
 1161               	/* #NOAPP */
 1162               	.L83:
 373:Caterina.c    **** 			boot_spm_busy_wait();
 1163               		.loc 1 373 0
 1164 0322 07B6      		in __tmp_reg__,0x37
 1165 0324 00FC      		sbrc __tmp_reg__,0
 1166 0326 00C0      		rjmp .L83
 1167               	.L82:
 377:Caterina.c    **** 		WriteNextResponseByte('\r');
 1168               		.loc 1 377 0
 1169 0328 8DE0      		ldi r24,lo8(13)
 1170 032a 0E94 0000 		call WriteNextResponseByte
 1171               	.LVL62:
 1172               	.L74:
 1173               	.LBE158:
 381:Caterina.c    **** 	TIMSK1 = (1 << OCIE1A);
 1174               		.loc 1 381 0
 1175 032e 82E0      		ldi r24,lo8(2)
 1176 0330 8093 6F00 		sts 111,r24
 1177 0334 00C0      		rjmp .L44
 1178               	.LVL63:
 1179               	.L66:
 1180               	.LBE156:
 1181               	.LBE155:
 594:Caterina.c    **** 		// Delegate the block write/read to a separate function for clarity 
 595:Caterina.c    **** 		ReadWriteMemoryBlock(Command);
 596:Caterina.c    **** 	}
 597:Caterina.c    **** 	#endif
 598:Caterina.c    **** 	#if !defined(NO_FLASH_BYTE_SUPPORT)
 599:Caterina.c    **** 	else if (Command == 'C')
 1182               		.loc 1 599 0
 1183 0336 8334      		cpi r24,lo8(67)
 1184 0338 01F4      		brne .L84
 600:Caterina.c    **** 	{
 601:Caterina.c    **** 		// Write the high byte to the current flash page
 602:Caterina.c    **** 		boot_page_fill(CurrAddress, FetchNextCommandByte());
 1185               		.loc 1 602 0
 1186 033a C091 0000 		lds r28,CurrAddress
 1187 033e D091 0000 		lds r29,CurrAddress+1
 1188 0342 0E94 0000 		call FetchNextCommandByte
 1189               	.LVL64:
 1190 0346 90E0      		ldi r25,0
 1191 0348 21E0      		ldi r18,lo8(1)
 1192 034a FE01      		movw r30,r28
 1193               	/* #APP */
 1194               	 ;  602 "Caterina.c" 1
 1195 034c 0C01      		movw  r0, r24
 1196 034e 2093 5700 		sts 87, r18
 1197 0352 E895      		spm
 1198 0354 1124      		clr  r1
 1199               		
 1200               	 ;  0 "" 2
 1201               	/* #NOAPP */
 1202 0356 00C0      		rjmp .L130
 1203               	.L84:
 603:Caterina.c    **** 
 604:Caterina.c    **** 		// Send confirmation byte back to the host 
 605:Caterina.c    **** 		WriteNextResponseByte('\r');
 606:Caterina.c    **** 	}
 607:Caterina.c    **** 	else if (Command == 'c')
 1204               		.loc 1 607 0
 1205 0358 8336      		cpi r24,lo8(99)
 1206 035a 01F4      		brne .L85
 608:Caterina.c    **** 	{
 609:Caterina.c    **** 		// Write the low byte to the current flash page 
 610:Caterina.c    **** 		boot_page_fill(CurrAddress | 0x01, FetchNextCommandByte());
 1207               		.loc 1 610 0
 1208 035c C090 0000 		lds r12,CurrAddress
 1209 0360 D090 0000 		lds r13,CurrAddress+1
 1210 0364 E090 0000 		lds r14,CurrAddress+2
 1211 0368 F090 0000 		lds r15,CurrAddress+3
 1212 036c 0E94 0000 		call FetchNextCommandByte
 1213               	.LVL65:
 1214 0370 B701      		movw r22,r14
 1215 0372 A601      		movw r20,r12
 1216 0374 4160      		ori r20,1
 1217 0376 90E0      		ldi r25,0
 1218 0378 21E0      		ldi r18,lo8(1)
 1219 037a FA01      		movw r30,r20
 1220               	/* #APP */
 1221               	 ;  610 "Caterina.c" 1
 1222 037c 0C01      		movw  r0, r24
 1223 037e 2093 5700 		sts 87, r18
 1224 0382 E895      		spm
 1225 0384 1124      		clr  r1
 1226               		
 1227               	 ;  0 "" 2
 611:Caterina.c    **** 
 612:Caterina.c    **** 		// Increment the address 
 613:Caterina.c    **** 		CurrAddress += 2;
 1228               		.loc 1 613 0
 1229               	/* #NOAPP */
 1230 0386 F2E0      		ldi r31,2
 1231 0388 CF0E      		add r12,r31
 1232 038a D11C      		adc r13,__zero_reg__
 1233 038c E11C      		adc r14,__zero_reg__
 1234 038e F11C      		adc r15,__zero_reg__
 1235 0390 C092 0000 		sts CurrAddress,r12
 1236 0394 D092 0000 		sts CurrAddress+1,r13
 1237 0398 E092 0000 		sts CurrAddress+2,r14
 1238 039c F092 0000 		sts CurrAddress+3,r15
 1239 03a0 00C0      		rjmp .L130
 1240               	.L85:
 614:Caterina.c    **** 
 615:Caterina.c    **** 		// Send confirmation byte back to the host 
 616:Caterina.c    **** 		WriteNextResponseByte('\r');
 617:Caterina.c    **** 	}
 618:Caterina.c    **** 	else if (Command == 'm')
 1241               		.loc 1 618 0
 1242 03a2 8D36      		cpi r24,lo8(109)
 1243 03a4 01F4      		brne .L86
 619:Caterina.c    **** 	{
 620:Caterina.c    **** 		// Commit the flash page to memory
 621:Caterina.c    **** 		boot_page_write(CurrAddress);
 1244               		.loc 1 621 0
 1245 03a6 E091 0000 		lds r30,CurrAddress
 1246 03aa F091 0000 		lds r31,CurrAddress+1
 1247 03ae 85E0      		ldi r24,lo8(5)
 1248               	/* #APP */
 1249               	 ;  621 "Caterina.c" 1
 1250 03b0 8093 5700 		sts 87, r24
 1251 03b4 E895      		spm
 1252               		
 1253               	 ;  0 "" 2
 1254               	/* #NOAPP */
 1255               	.L87:
 622:Caterina.c    **** 
 623:Caterina.c    **** 		// Wait until write operation has completed 
 624:Caterina.c    **** 		boot_spm_busy_wait();
 1256               		.loc 1 624 0 discriminator 1
 1257 03b6 07B6      		in __tmp_reg__,0x37
 1258 03b8 00FC      		sbrc __tmp_reg__,0
 1259 03ba 00C0      		rjmp .L87
 1260 03bc 00C0      		rjmp .L130
 1261               	.L86:
 625:Caterina.c    **** 
 626:Caterina.c    **** 		// Send confirmation byte back to the host 
 627:Caterina.c    **** 		WriteNextResponseByte('\r');
 628:Caterina.c    **** 	}
 629:Caterina.c    **** 	else if (Command == 'R')
 1262               		.loc 1 629 0
 1263 03be 8235      		cpi r24,lo8(82)
 1264 03c0 01F4      		brne .L88
 1265               	.LBB159:
 1266               	.LBB160:
 630:Caterina.c    **** 	{
 631:Caterina.c    **** 		#if (FLASHEND > 0xFFFF)
 632:Caterina.c    **** 		uint16_t ProgramWord = pgm_read_word_far(CurrAddress);
 633:Caterina.c    **** 		#else
 634:Caterina.c    **** 		uint16_t ProgramWord = pgm_read_word(CurrAddress);
 1267               		.loc 1 634 0
 1268 03c2 E091 0000 		lds r30,CurrAddress
 1269 03c6 F091 0000 		lds r31,CurrAddress+1
 1270               	.LVL66:
 1271               	/* #APP */
 1272               	 ;  634 "Caterina.c" 1
 1273 03ca C591      		lpm r28, Z+
 1274 03cc D491      		lpm r29, Z
 1275               		
 1276               	 ;  0 "" 2
 1277               	/* #NOAPP */
 1278               	.LBE160:
 635:Caterina.c    **** 		#endif
 636:Caterina.c    **** 
 637:Caterina.c    **** 		WriteNextResponseByte(ProgramWord >> 8);
 1279               		.loc 1 637 0
 1280 03ce 8D2F      		mov r24,r29
 1281 03d0 0E94 0000 		call WriteNextResponseByte
 1282               	.LVL67:
 638:Caterina.c    **** 		WriteNextResponseByte(ProgramWord & 0xFF);
 1283               		.loc 1 638 0
 1284 03d4 8C2F      		mov r24,r28
 1285 03d6 00C0      		rjmp .L131
 1286               	.LVL68:
 1287               	.L88:
 1288               	.LBE159:
 639:Caterina.c    **** 	}
 640:Caterina.c    **** 	#endif
 641:Caterina.c    **** 	#if !defined(NO_EEPROM_BYTE_SUPPORT)
 642:Caterina.c    **** 	else if (Command == 'D')
 1289               		.loc 1 642 0
 1290 03d8 8434      		cpi r24,lo8(68)
 1291 03da 01F4      		brne .L89
 643:Caterina.c    **** 	{
 644:Caterina.c    **** 		// Read the byte from the endpoint and write it to the EEPROM 
 645:Caterina.c    **** 		eeprom_write_byte((uint8_t*)((intptr_t)(CurrAddress >> 1)), FetchNextCommandByte());
 1292               		.loc 1 645 0
 1293 03dc 0E94 0000 		call FetchNextCommandByte
 1294               	.LVL69:
 1295 03e0 682F      		mov r22,r24
 1296 03e2 8091 0000 		lds r24,CurrAddress
 1297 03e6 9091 0000 		lds r25,CurrAddress+1
 1298 03ea A091 0000 		lds r26,CurrAddress+2
 1299 03ee B091 0000 		lds r27,CurrAddress+3
 1300 03f2 B695      		lsr r27
 1301 03f4 A795      		ror r26
 1302 03f6 9795      		ror r25
 1303 03f8 8795      		ror r24
 1304 03fa 0E94 0000 		call __eewr_byte_m32u4
 1305               	.LVL70:
 646:Caterina.c    **** 
 647:Caterina.c    **** 		// Increment the address after use
 648:Caterina.c    **** 		CurrAddress += 2;
 1306               		.loc 1 648 0
 1307 03fe 8091 0000 		lds r24,CurrAddress
 1308 0402 9091 0000 		lds r25,CurrAddress+1
 1309 0406 A091 0000 		lds r26,CurrAddress+2
 1310 040a B091 0000 		lds r27,CurrAddress+3
 1311 040e 0296      		adiw r24,2
 1312 0410 A11D      		adc r26,__zero_reg__
 1313 0412 B11D      		adc r27,__zero_reg__
 1314               	.L133:
 1315 0414 8093 0000 		sts CurrAddress,r24
 1316 0418 9093 0000 		sts CurrAddress+1,r25
 1317 041c A093 0000 		sts CurrAddress+2,r26
 1318 0420 B093 0000 		sts CurrAddress+3,r27
 1319 0424 00C0      		rjmp .L130
 1320               	.L89:
 649:Caterina.c    **** 
 650:Caterina.c    **** 		// Send confirmation byte back to the host 
 651:Caterina.c    **** 		WriteNextResponseByte('\r');
 652:Caterina.c    **** 	}
 653:Caterina.c    **** 	else if (Command == 'd')
 1321               		.loc 1 653 0
 1322 0426 8436      		cpi r24,lo8(100)
 1323 0428 01F4      		brne .L90
 654:Caterina.c    **** 	{
 655:Caterina.c    **** 		// Read the EEPROM byte and write it to the endpoint 
 656:Caterina.c    **** 		WriteNextResponseByte(eeprom_read_byte((uint8_t*)((intptr_t)(CurrAddress >> 1))));
 1324               		.loc 1 656 0
 1325 042a C090 0000 		lds r12,CurrAddress
 1326 042e D090 0000 		lds r13,CurrAddress+1
 1327 0432 E090 0000 		lds r14,CurrAddress+2
 1328 0436 F090 0000 		lds r15,CurrAddress+3
 1329 043a D701      		movw r26,r14
 1330 043c C601      		movw r24,r12
 1331 043e B695      		lsr r27
 1332 0440 A795      		ror r26
 1333 0442 9795      		ror r25
 1334 0444 8795      		ror r24
 1335 0446 0E94 0000 		call __eerd_byte_m32u4
 1336               	.LVL71:
 1337 044a 0E94 0000 		call WriteNextResponseByte
 1338               	.LVL72:
 657:Caterina.c    **** 
 658:Caterina.c    **** 		// Increment the address after use 
 659:Caterina.c    **** 		CurrAddress += 2;
 1339               		.loc 1 659 0
 1340 044e 22E0      		ldi r18,2
 1341 0450 C20E      		add r12,r18
 1342 0452 D11C      		adc r13,__zero_reg__
 1343 0454 E11C      		adc r14,__zero_reg__
 1344 0456 F11C      		adc r15,__zero_reg__
 1345 0458 C092 0000 		sts CurrAddress,r12
 1346 045c D092 0000 		sts CurrAddress+1,r13
 1347 0460 E092 0000 		sts CurrAddress+2,r14
 1348 0464 F092 0000 		sts CurrAddress+3,r15
 1349 0468 00C0      		rjmp .L44
 1350               	.L90:
 660:Caterina.c    **** 	}
 661:Caterina.c    **** 	#endif
 662:Caterina.c    **** 	else if (Command != 27)
 1351               		.loc 1 662 0
 1352 046a 8B31      		cpi r24,lo8(27)
 1353 046c 01F0      		breq .+2
 1354 046e 00C0      		rjmp .L91
 1355               	.LVL73:
 1356               	.L44:
 1357               	.LBB161:
 1358               	.LBB162:
 330:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					UENUM = EndpointNumber;
 1359               		.loc 2 330 0
 1360 0470 83E0      		ldi r24,lo8(3)
 1361 0472 8093 E900 		sts 233,r24
 1362               	.LBE162:
 1363               	.LBE161:
 1364               	.LBB163:
 1365               	.LBB164:
 420:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return ((UEINTX & (1 << RWAL)) ? true : false);
 1366               		.loc 2 420 0
 1367 0476 9091 E800 		lds r25,232
 1368               	.LVL74:
 1369               	.LBE164:
 1370               	.LBE163:
 1371               	.LBB165:
 1372               	.LBB166:
 516:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					UEINTX &= ~((1 << TXINI) | (1 << FIFOCON));
 1373               		.loc 2 516 0
 1374 047a 8091 E800 		lds r24,232
 1375 047e 8E77      		andi r24,lo8(126)
 1376 0480 8093 E800 		sts 232,r24
 1377               	.LBE166:
 1378               	.LBE165:
 663:Caterina.c    **** 	{
 664:Caterina.c    **** 		// Unknown (non-sync) command, return fail code 
 665:Caterina.c    **** 		WriteNextResponseByte('?');
 666:Caterina.c    **** 	}
 667:Caterina.c    **** 	
 668:Caterina.c    **** 
 669:Caterina.c    **** 	/* Select the IN endpoint */
 670:Caterina.c    **** 	Endpoint_SelectEndpoint(CDC_TX_EPNUM);
 671:Caterina.c    **** 
 672:Caterina.c    **** 	/* Remember if the endpoint is completely full before clearing it */
 673:Caterina.c    **** 	bool IsEndpointFull = !(Endpoint_IsReadWriteAllowed());
 674:Caterina.c    **** 
 675:Caterina.c    **** 	/* Send the endpoint data to the host */
 676:Caterina.c    **** 	Endpoint_ClearIN();
 677:Caterina.c    **** 
 678:Caterina.c    **** 	/* If a full endpoint's worth of data was sent, we need to send an empty packet afterwards to sign
 679:Caterina.c    **** 	if (IsEndpointFull)
 1379               		.loc 1 679 0
 1380 0484 95FD      		sbrc r25,5
 1381 0486 00C0      		rjmp .L120
 1382               	.L128:
 1383               	.LBB167:
 1384               	.LBB168:
 467:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return ((UEINTX & (1 << TXINI)) ? true : false);
 1385               		.loc 2 467 0
 1386 0488 8091 E800 		lds r24,232
 1387               	.LBE168:
 1388               	.LBE167:
 680:Caterina.c    **** 	{
 681:Caterina.c    **** 		while (!(Endpoint_IsINReady()))
 1389               		.loc 1 681 0
 1390 048c 80FD      		sbrc r24,0
 1391 048e 00C0      		rjmp .L93
 682:Caterina.c    **** 		{
 683:Caterina.c    **** 			if (USB_DeviceState == DEVICE_STATE_Unattached)
 1392               		.loc 1 683 0
 1393 0490 8EB3      		in r24,0x1e
 1394 0492 8111      		cpse r24,__zero_reg__
 1395 0494 00C0      		rjmp .L128
 1396 0496 00C0      		rjmp .L39
 1397               	.L93:
 1398               	.LBB169:
 1399               	.LBB170:
 516:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					UEINTX &= ~((1 << TXINI) | (1 << FIFOCON));
 1400               		.loc 2 516 0
 1401 0498 8091 E800 		lds r24,232
 1402 049c 8E77      		andi r24,lo8(126)
 1403 049e 8093 E800 		sts 232,r24
 1404 04a2 00C0      		rjmp .L120
 1405               	.L96:
 1406               	.LBE170:
 1407               	.LBE169:
 684:Caterina.c    **** 			  return;
 685:Caterina.c    **** 		}
 686:Caterina.c    **** 
 687:Caterina.c    **** 		Endpoint_ClearIN();
 688:Caterina.c    **** 	}
 689:Caterina.c    **** 
 690:Caterina.c    **** 	/* Wait until the data has been sent to the host */
 691:Caterina.c    **** 	while (!(Endpoint_IsINReady()))
 692:Caterina.c    **** 	{
 693:Caterina.c    **** 		if (USB_DeviceState == DEVICE_STATE_Unattached)
 1408               		.loc 1 693 0
 1409 04a4 8EB3      		in r24,0x1e
 1410 04a6 8823      		tst r24
 1411 04a8 01F0      		breq .L39
 1412               	.L120:
 1413               	.LBB171:
 1414               	.LBB172:
 467:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return ((UEINTX & (1 << TXINI)) ? true : false);
 1415               		.loc 2 467 0 discriminator 1
 1416 04aa 8091 E800 		lds r24,232
 1417               	.LBE172:
 1418               	.LBE171:
 691:Caterina.c    **** 	while (!(Endpoint_IsINReady()))
 1419               		.loc 1 691 0 discriminator 1
 1420 04ae 80FF      		sbrs r24,0
 1421 04b0 00C0      		rjmp .L96
 1422               	.LVL75:
 1423               	.LBB173:
 1424               	.LBB174:
 330:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					UENUM = EndpointNumber;
 1425               		.loc 2 330 0
 1426 04b2 84E0      		ldi r24,lo8(4)
 1427 04b4 8093 E900 		sts 233,r24
 1428               	.LBE174:
 1429               	.LBE173:
 1430               	.LBB175:
 1431               	.LBB176:
 531:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					UEINTX &= ~((1 << RXOUTI) | (1 << FIFOCON));
 1432               		.loc 2 531 0
 1433 04b8 8091 E800 		lds r24,232
 1434 04bc 8B77      		andi r24,lo8(123)
 1435 04be 8093 E800 		sts 232,r24
 1436               	.LVL76:
 1437               	.L39:
 1438               	/* epilogue start */
 1439               	.LBE176:
 1440               	.LBE175:
 694:Caterina.c    **** 		  return;
 695:Caterina.c    **** 	}
 696:Caterina.c    **** 
 697:Caterina.c    **** 	/* Select the OUT endpoint */
 698:Caterina.c    **** 	Endpoint_SelectEndpoint(CDC_RX_EPNUM);
 699:Caterina.c    **** 
 700:Caterina.c    **** 	/* Acknowledge the command from the host */
 701:Caterina.c    **** 	Endpoint_ClearOUT();
 702:Caterina.c    **** }
 1441               		.loc 1 702 0
 1442 04c2 DF91      		pop r29
 1443 04c4 CF91      		pop r28
 1444 04c6 1F91      		pop r17
 1445 04c8 0F91      		pop r16
 1446 04ca FF90      		pop r15
 1447 04cc EF90      		pop r14
 1448 04ce DF90      		pop r13
 1449 04d0 CF90      		pop r12
 1450 04d2 BF90      		pop r11
 1451 04d4 AF90      		pop r10
 1452 04d6 9F90      		pop r9
 1453 04d8 8F90      		pop r8
 1454 04da 7F90      		pop r7
 1455 04dc 6F90      		pop r6
 1456 04de 5F90      		pop r5
 1457 04e0 4F90      		pop r4
 1458 04e2 0895      		ret
 1459               		.cfi_endproc
 1460               	.LFE105:
 1462               		.section	.text.startup.main,"ax",@progbits
 1463               	.global	main
 1465               	main:
 1466               	.LFB97:
 112:Caterina.c    **** {
 1467               		.loc 1 112 0
 1468               		.cfi_startproc
 1469               	/* prologue: function */
 1470               	/* frame size = 0 */
 1471               	/* stack size = 0 */
 1472               	.L__stack_usage = 0
 114:Caterina.c    **** 	uint16_t bootKeyPtrVal = *bootKeyPtr;
 1473               		.loc 1 114 0
 1474 0000 8091 0008 		lds r24,2048
 1475 0004 9091 0108 		lds r25,2048+1
 115:Caterina.c    **** 	*bootKeyPtr = 0;
 1476               		.loc 1 115 0
 1477 0008 1092 0108 		sts 2048+1,__zero_reg__
 1478 000c 1092 0008 		sts 2048,__zero_reg__
 118:Caterina.c    **** 	uint8_t  mcusr_state = MCUSR;		// store the initial state of the Status register
 1479               		.loc 1 118 0
 1480 0010 84B7      		in r24,0x34
 119:Caterina.c    **** 	MCUSR = 0;							// clear all reset flags	
 1481               		.loc 1 119 0
 1482 0012 14BE      		out 0x34,__zero_reg__
 122:Caterina.c    **** 	wdt_disable();
 1483               		.loc 1 122 0
 1484 0014 88E1      		ldi r24,lo8(24)
 1485               	/* #APP */
 1486               	 ;  122 "Caterina.c" 1
 1487 0016 0FB6      		in __tmp_reg__, __SREG__
 1488 0018 F894      		cli
 1489 001a 8093 6000 		sts 96, r24
 1490 001e 1092 6000 		sts 96, __zero_reg__
 1491 0022 0FBE      		out __SREG__,__tmp_reg__
 1492               		
 1493               	 ;  0 "" 2
 125:Caterina.c    **** 	SetupHardware();
 1494               		.loc 1 125 0
 1495               	/* #NOAPP */
 1496 0024 0E94 0000 		call SetupHardware
 1497               	.LVL77:
 128:Caterina.c    **** 	sei();
 1498               		.loc 1 128 0
 1499               	/* #APP */
 1500               	 ;  128 "Caterina.c" 1
 1501 0028 7894      		sei
 1502               	 ;  0 "" 2
 130:Caterina.c    **** 	Timeout = 0;
 1503               		.loc 1 130 0
 1504               	/* #NOAPP */
 1505 002a 1092 0000 		sts Timeout+1,__zero_reg__
 1506 002e 1092 0000 		sts Timeout,__zero_reg__
 132:Caterina.c    **** 	while (RunBootloader)
 1507               		.loc 1 132 0
 1508 0032 00C0      		rjmp .L135
 1509               	.L137:
 134:Caterina.c    **** 		CDC_Task();
 1510               		.loc 1 134 0
 1511 0034 0E94 0000 		call CDC_Task
 1512               	.LVL78:
 135:Caterina.c    **** 		USB_USBTask();
 1513               		.loc 1 135 0
 1514 0038 0E94 0000 		call USB_USBTask
 1515               	.LVL79:
 137:Caterina.c    **** 		if (Timeout > TIMEOUT_PERIOD)
 1516               		.loc 1 137 0
 1517 003c 8091 0000 		lds r24,Timeout
 1518 0040 9091 0000 		lds r25,Timeout+1
 1519 0044 8134      		cpi r24,65
 1520 0046 9F41      		sbci r25,31
 1521 0048 00F0      		brlo .L136
 138:Caterina.c    **** 			RunBootloader = false;
 1522               		.loc 1 138 0
 1523 004a 1092 0000 		sts RunBootloader,__zero_reg__
 1524               	.L136:
 140:Caterina.c    **** 		LEDPulse();
 1525               		.loc 1 140 0
 1526 004e 0E94 0000 		call LEDPulse
 1527               	.LVL80:
 1528               	.L135:
 132:Caterina.c    **** 	while (RunBootloader)
 1529               		.loc 1 132 0 discriminator 1
 1530 0052 8091 0000 		lds r24,RunBootloader
 1531 0056 8111      		cpse r24,__zero_reg__
 1532 0058 00C0      		rjmp .L137
 1533               	.LBB177:
 1534               	.LBB178:
 1535               		.file 4 "./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h"
   1:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h **** /*
   2:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h ****              LUFA Library
   3:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h ****      Copyright (C) Dean Camera, 2011.
   4:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h **** 
   5:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h ****   dean [at] fourwalledcubicle [dot] com
   6:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h ****            www.lufa-lib.org
   7:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h **** */
   8:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h **** 
   9:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h **** /*
  10:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h ****   Copyright 2011  Dean Camera (dean [at] fourwalledcubicle [dot] com)
  11:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h **** 
  12:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h ****   Permission to use, copy, modify, distribute, and sell this
  13:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h ****   software and its documentation for any purpose is hereby granted
  14:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h ****   without fee, provided that the above copyright notice appear in
  15:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h ****   all copies and that both that the copyright notice and this
  16:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h ****   permission notice and warranty disclaimer appear in supporting
  17:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h ****   documentation, and that the name of the author not be used in
  18:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h ****   advertising or publicity pertaining to distribution of the
  19:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h ****   software without specific, written prior permission.
  20:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h **** 
  21:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h ****   The author disclaim all warranties with regard to this
  22:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h ****   software, including all implied warranties of merchantability
  23:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h ****   and fitness.  In no event shall the author be liable for any
  24:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h ****   special, indirect or consequential damages or any damages
  25:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h ****   whatsoever resulting from loss of use, data or profits, whether
  26:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h ****   in an action of contract, negligence or other tortious action,
  27:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h ****   arising out of or in connection with the use or performance of
  28:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h ****   this software.
  29:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h **** */
  30:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h **** 
  31:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h **** /** \file
  32:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h ****  *  \brief USB Controller definitions for the AVR8 microcontrollers.
  33:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h ****  *  \copydetails Group_USBManagement_AVR8
  34:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h ****  *
  35:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h ****  *  \note This file should not be included directly. It is automatically included as needed by the 
  36:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h ****  *        dispatch header located in LUFA/Drivers/USB/USB.h.
  37:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h ****  */
  38:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h **** 
  39:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h **** /** \ingroup Group_USBManagement
  40:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h ****  *  \defgroup Group_USBManagement_AVR8 USB Interface Management (AVR8)
  41:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h ****  *  \brief USB Controller definitions for the AVR8 microcontrollers.
  42:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h ****  *
  43:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h ****  *  Functions, macros, variables, enums and types related to the setup and management of the USB in
  44:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h ****  *
  45:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h ****  *  @{
  46:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h ****  */
  47:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h **** 
  48:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h **** #ifndef __USBCONTROLLER_AVR8_H__
  49:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h **** #define __USBCONTROLLER_AVR8_H__
  50:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h **** 
  51:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h **** 	/* Includes: */
  52:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h **** 		#include "../../../../Common/Common.h"
  53:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h **** 		#include "../USBMode.h"
  54:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h **** 		#include "../Events.h"
  55:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h **** 		#include "../USBTask.h"
  56:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h **** 		#include "../USBInterrupt.h"
  57:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h **** 
  58:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h **** 		#if defined(USB_CAN_BE_HOST) || defined(__DOXYGEN__)
  59:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h **** 			#include "../Host.h"
  60:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h **** 			#include "../OTG.h"
  61:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h **** 			#include "../Pipe.h"
  62:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h **** 			#include "../HostStandardReq.h"
  63:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h **** 			#include "../PipeStream.h"
  64:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h **** 		#endif
  65:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h **** 
  66:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h **** 		#if defined(USB_CAN_BE_DEVICE) || defined(__DOXYGEN__)
  67:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h **** 			#include "../Device.h"
  68:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h **** 			#include "../Endpoint.h"
  69:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h **** 			#include "../DeviceStandardReq.h"
  70:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h **** 			#include "../EndpointStream.h"
  71:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h **** 		#endif
  72:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h **** 
  73:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h **** 	/* Enable C linkage for C++ Compilers: */
  74:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h **** 		#if defined(__cplusplus)
  75:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h **** 			extern "C" {
  76:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h **** 		#endif
  77:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h **** 
  78:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h **** 	/* Preprocessor Checks and Defines: */
  79:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h **** 		#if !defined(__INCLUDE_FROM_USB_DRIVER)
  80:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h **** 			#error Do not include this file directly. Include LUFA/Drivers/USB/USB.h instead.
  81:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h **** 		#endif
  82:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h **** 
  83:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h **** 		#if !defined(F_USB)
  84:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h **** 			#error F_USB is not defined. You must define F_USB to the frequency of the unprescaled USB contr
  85:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h **** 		#endif
  86:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h **** 
  87:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h **** 		#if (F_USB == 8000000)
  88:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h **** 			#if (defined(__AVR_AT90USB82__) || defined(__AVR_AT90USB162__) || \
  89:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h **** 			     defined(__AVR_ATmega8U2__) || defined(__AVR_ATmega16U2__) || \
  90:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h **** 			     defined(__AVR_ATmega32U2__))
  91:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h **** 				#define USB_PLL_PSC                0
  92:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h **** 			#elif (defined(__AVR_ATmega16U4__) || defined(__AVR_ATmega32U4__))
  93:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h **** 				#define USB_PLL_PSC                0
  94:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h **** 			#elif (defined(__AVR_AT90USB646__)  || defined(__AVR_AT90USB1286__) || defined(__AVR_ATmega32U6_
  95:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h **** 				#define USB_PLL_PSC                ((1 << PLLP1) | (1 << PLLP0))
  96:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h **** 			#elif (defined(__AVR_AT90USB647__)  || defined(__AVR_AT90USB1287__))
  97:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h **** 				#define USB_PLL_PSC                ((1 << PLLP1) | (1 << PLLP0))
  98:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h **** 			#endif
  99:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h **** 		#elif (F_USB == 16000000)
 100:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h **** 			#if (defined(__AVR_AT90USB82__) || defined(__AVR_AT90USB162__) || \
 101:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h **** 			     defined(__AVR_ATmega8U2__) || defined(__AVR_ATmega16U2__) || \
 102:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h **** 			     defined(__AVR_ATmega32U2__))
 103:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h **** 				#define USB_PLL_PSC                (1 << PLLP0)
 104:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h **** 			#elif (defined(__AVR_ATmega16U4__) || defined(__AVR_ATmega32U4__))
 105:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h **** 				#define USB_PLL_PSC                (1 << PINDIV)
 106:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h **** 			#elif (defined(__AVR_AT90USB646__) || defined(__AVR_AT90USB647__) || defined(__AVR_ATmega32U6__)
 107:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h **** 				#define USB_PLL_PSC                ((1 << PLLP2) | (1 << PLLP1))
 108:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h **** 			#elif (defined(__AVR_AT90USB1286__) || defined(__AVR_AT90USB1287__))
 109:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h **** 				#define USB_PLL_PSC                ((1 << PLLP2) | (1 << PLLP0))
 110:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h **** 			#endif
 111:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h **** 		#endif
 112:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h **** 
 113:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h **** 		#if !defined(USB_PLL_PSC)
 114:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h **** 			#error No PLL prescale value available for chosen F_USB value and AVR model.
 115:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h **** 		#endif
 116:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h **** 
 117:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h **** 	/* Public Interface - May be used in end-application: */
 118:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h **** 		/* Macros: */
 119:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h **** 			/** \name USB Controller Option Masks */
 120:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h **** 			//@{
 121:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h **** 			/** Regulator disable option mask for \ref USB_Init(). This indicates that the internal 3.3V USB
 122:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h **** 			 *  regulator should be disabled and the AVR's VCC level used for the data pads.
 123:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h **** 			 *
 124:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h **** 			 *  \note See USB AVR data sheet for more information on the internal pad regulator.
 125:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h **** 			 */
 126:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h **** 			#define USB_OPT_REG_DISABLED               (1 << 1)
 127:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h **** 
 128:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h **** 			/** Regulator enable option mask for \ref USB_Init(). This indicates that the internal 3.3V USB 
 129:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h **** 			 *  regulator should be enabled to regulate the data pin voltages from the VBUS level down to a 
 130:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h **** 			 *  the range allowable by the USB standard.
 131:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h **** 			 *
 132:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h **** 			 *  \note See USB AVR data sheet for more information on the internal pad regulator.
 133:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h **** 			 */
 134:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h **** 			#define USB_OPT_REG_ENABLED                (0 << 1)
 135:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h **** 
 136:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h **** 			/** Manual PLL control option mask for \ref USB_Init(). This indicates to the library that the u
 137:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h **** 			 *  will take full responsibility for controlling the AVR's PLL (used to generate the high frequ
 138:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h **** 			 *  that the USB controller requires) and ensuring that it is locked at the correct frequency fo
 139:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h **** 			 */
 140:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h **** 			#define USB_OPT_MANUAL_PLL                 (1 << 2)
 141:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h **** 
 142:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h **** 			/** Automatic PLL control option mask for \ref USB_Init(). This indicates to the library that th
 143:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h **** 			 *  take full responsibility for controlling the AVR's PLL (used to generate the high frequency 
 144:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h **** 			 *  that the USB controller requires) and ensuring that it is locked at the correct frequency fo
 145:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h **** 			 */
 146:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h **** 			#define USB_OPT_AUTO_PLL                   (0 << 2)
 147:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h **** 			//@}
 148:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h **** 
 149:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h **** 			#if !defined(USB_STREAM_TIMEOUT_MS) || defined(__DOXYGEN__)
 150:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h **** 				/** Constant for the maximum software timeout period of the USB data stream transfer functions
 151:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h **** 				 *  (both control and standard) when in either device or host mode. If the next packet of a str
 152:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h **** 				 *  is not received or acknowledged within this time period, the stream function will fail.
 153:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h **** 				 *
 154:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h **** 				 *  This value may be overridden in the user project makefile as the value of the
 155:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h **** 				 *  \ref USB_STREAM_TIMEOUT_MS token, and passed to the compiler using the -D switch.
 156:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h **** 				 */
 157:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h **** 				#define USB_STREAM_TIMEOUT_MS       100
 158:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h **** 			#endif
 159:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h **** 
 160:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h **** 		/* Inline Functions: */
 161:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h **** 			#if defined(USB_SERIES_4_AVR) || defined(USB_SERIES_6_AVR) || defined(USB_SERIES_7_AVR) || defin
 162:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h **** 				/** Determines if the VBUS line is currently high (i.e. the USB host is supplying power).
 163:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h **** 				 *
 164:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h **** 				 *  \note This function is not available on some AVR models which do not support hardware VBUS 
 165:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h **** 				 *
 166:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h **** 				 *  \return Boolean \c true if the VBUS line is currently detecting power from a host, \c false
 167:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h **** 				 */
 168:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h **** 				static inline bool USB_VBUS_GetStatus(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
 169:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h **** 				static inline bool USB_VBUS_GetStatus(void)
 170:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h **** 				{
 171:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h **** 					return ((USBSTA & (1 << VBUS)) ? true : false);
 172:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h **** 				}
 173:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h **** 			#endif
 174:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h **** 
 175:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h **** 			/** Detaches the device from the USB bus. This has the effect of removing the device from any
 176:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h **** 			 *  attached host, ceasing USB communications. If no host is present, this prevents any host fro
 177:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h **** 			 *  enumerating the device once attached until \ref USB_Attach() is called.
 178:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h **** 			 */
 179:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h **** 			static inline void USB_Detach(void) ATTR_ALWAYS_INLINE;
 180:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h **** 			static inline void USB_Detach(void)
 181:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h **** 			{
 182:./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h **** 				UDCON  |=  (1 << DETACH);
 1536               		.loc 4 182 0
 1537 005a 8091 E000 		lds r24,224
 1538 005e 8160      		ori r24,lo8(1)
 1539 0060 8093 E000 		sts 224,r24
 1540               	.LBE178:
 1541               	.LBE177:
 147:Caterina.c    **** 	StartSketch();
 1542               		.loc 1 147 0
 1543 0064 0E94 0000 		call StartSketch
 1544               	.LVL81:
 148:Caterina.c    **** }
 1545               		.loc 1 148 0
 1546 0068 80E0      		ldi r24,0
 1547 006a 90E0      		ldi r25,0
 1548 006c 0895      		ret
 1549               		.cfi_endproc
 1550               	.LFE97:
 1552               		.comm	LLEDPulse,2,1
 1553               	.global	bootKeyPtr
 1554               		.section	.rodata
 1557               	bootKeyPtr:
 1558 0000 0008      		.word	2048
 1559               	.global	bootKey
 1560               		.data
 1563               	bootKey:
 1564 0000 7777      		.word	30583
 1565               	.global	Timeout
 1566               		.section .bss
 1569               	Timeout:
 1570 0000 0000      		.zero	2
 1571               	.global	RxLEDPulse
 1574               	RxLEDPulse:
 1575 0002 0000      		.zero	2
 1576               	.global	TxLEDPulse
 1579               	TxLEDPulse:
 1580 0004 0000      		.zero	2
 1581               		.data
 1584               	RunBootloader:
 1585 0002 01        		.byte	1
 1588               	LineEncoding:
 1589 0003 00        		.byte	0
 1590 0004 00        		.byte	0
 1591 0005 00        		.byte	0
 1592 0006 00        		.byte	0
 1593 0007 00        		.byte	0
 1594 0008 00        		.byte	0
 1595 0009 08        		.byte	8
 1596               		.local	CurrAddress
 1597               		.comm	CurrAddress,4,1
 1598               		.text
 1599               	.Letext0:
 1600               		.file 5 "c:\\program files (x86)\\atmel\\avr tools\\avr toolchain\\bin\\../lib/gcc/avr/4.7.2/../..
 1601               		.file 6 "./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../StdRequestType.h"
 1602               		.file 7 "./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../Device.h"
 1603               		.file 8 "./LUFA-111009/LUFA/Drivers/USB/Class/Device/../Common/CDC.h"
 1604               		.file 9 "./LUFA-111009/LUFA/Drivers/USB/Core/USBTask.h"
 1605               		.file 10 "./LUFA-111009/LUFA/Drivers/USB/Core/AVR8/../AVR8/EndpointStream_AVR8.h"
 1606               		.file 11 "c:\\program files (x86)\\atmel\\avr tools\\avr toolchain\\bin\\../lib/gcc/avr/4.7.2/../.
DEFINED SYMBOLS
                            *ABS*:00000000 Caterina.c
C:\Users\limpkin\AppData\Local\Temp\cckh9MXK.s:2      *ABS*:0000003e __SP_H__
C:\Users\limpkin\AppData\Local\Temp\cckh9MXK.s:3      *ABS*:0000003d __SP_L__
C:\Users\limpkin\AppData\Local\Temp\cckh9MXK.s:4      *ABS*:0000003f __SREG__
C:\Users\limpkin\AppData\Local\Temp\cckh9MXK.s:5      *ABS*:00000000 __tmp_reg__
C:\Users\limpkin\AppData\Local\Temp\cckh9MXK.s:6      *ABS*:00000001 __zero_reg__
C:\Users\limpkin\AppData\Local\Temp\cckh9MXK.s:12     .text.FetchNextCommandByte:00000000 FetchNextCommandByte
C:\Users\limpkin\AppData\Local\Temp\cckh9MXK.s:84     .text.WriteNextResponseByte:00000000 WriteNextResponseByte
C:\Users\limpkin\AppData\Local\Temp\cckh9MXK.s:1579   .bss:00000004 TxLEDPulse
C:\Users\limpkin\AppData\Local\Temp\cckh9MXK.s:159    .text.StartSketch:00000000 StartSketch
C:\Users\limpkin\AppData\Local\Temp\cckh9MXK.s:199    .text.LEDPulse:00000000 LEDPulse
                            *COM*:00000002 LLEDPulse
C:\Users\limpkin\AppData\Local\Temp\cckh9MXK.s:220    .text.SetupHardware:00000000 SetupHardware
C:\Users\limpkin\AppData\Local\Temp\cckh9MXK.s:292    .text.__vector_17:00000000 __vector_17
C:\Users\limpkin\AppData\Local\Temp\cckh9MXK.s:1574   .bss:00000002 RxLEDPulse
C:\Users\limpkin\AppData\Local\Temp\cckh9MXK.s:1569   .bss:00000000 Timeout
C:\Users\limpkin\AppData\Local\Temp\cckh9MXK.s:397    .text.EVENT_USB_Device_ConfigurationChanged:00000000 EVENT_USB_Device_ConfigurationChanged
C:\Users\limpkin\AppData\Local\Temp\cckh9MXK.s:440    .text.EVENT_USB_Device_ControlRequest:00000000 EVENT_USB_Device_ControlRequest
C:\Users\limpkin\AppData\Local\Temp\cckh9MXK.s:1588   .data:00000003 LineEncoding
C:\Users\limpkin\AppData\Local\Temp\cckh9MXK.s:525    .text.CDC_Task:00000000 CDC_Task
                             .bss:00000006 CurrAddress
C:\Users\limpkin\AppData\Local\Temp\cckh9MXK.s:1465   .text.startup.main:00000000 main
C:\Users\limpkin\AppData\Local\Temp\cckh9MXK.s:1584   .data:00000002 RunBootloader
C:\Users\limpkin\AppData\Local\Temp\cckh9MXK.s:1557   .rodata:00000000 bootKeyPtr
C:\Users\limpkin\AppData\Local\Temp\cckh9MXK.s:1563   .data:00000000 bootKey
C:\Users\limpkin\AppData\Local\Temp\cckh9MXK.s:520    .rodata.str1.1:00000000 .LC0

UNDEFINED SYMBOLS
USB_Init
Endpoint_ConfigureEndpoint_Prv
USB_ControlRequest
Endpoint_Write_Control_Stream_LE
Endpoint_Read_Control_Stream_LE
__eerd_byte_m32u4
__eewr_byte_m32u4
USB_USBTask
__do_copy_data
__do_clear_bss
