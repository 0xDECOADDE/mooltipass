#
# Makefile
#
# Created: 2014-01-29
# Author: Mikael Albertsson
#

BASEDIR = ../../source_code

CROSS   ?= avr-
CC      := $(CROSS)gcc
LD      := $(CROSS)gcc
OBJCOPY := $(CROSS)objcopy
OBJDUMP := $(CROSS)objdump
SIZE    := $(CROSS)size
AR      := $(CROSS)ar

LIBS := -lm -lmooltipass

# library sources for the mooltipass library
#LIBRARIES := CARD FLASH USB OLED UTILS GRAPHICS
LIBRARIES := oledmp spi CARD FLASH USB UTILS

# Search paths for the mooltipass libraries
LIBRARYPATHS := $(BASEDIR)/src $(BASEDIR)/src/lib

# get full path for each library
LIBDIRS := $(foreach path, $(LIBRARYPATHS), \
    		   $(foreach lib, $(LIBRARIES),  \
		   $(wildcard $(path)/$(lib)/.)))

LIBOBJS := $(foreach dir, $(LIBDIRS), $(patsubst %.c, build/%.o, $(wildcard $(addprefix $(dir)/, *.c))))
MOOLTIPASS_LIB := build/libmooltipass.a

SRCS := $(wildcard *.c) $(BASEDIR)/src/interrupts.c
OBJS := $(patsubst %.c, build/%.o, $(SRCS))
DEPS := $(patsubst %, deps/%.dep, $(SRCS))

TARGET  := oled_demo

# Compiler and linker configuration.
FORMAT  := ihex
MCU     := atmega32u4

# Set CONFIG=DEBUG in the shell from which you invoke make to build a debug
# build.
CONFIG  ?= RELEASE
DEFINES := F_CPU=16000000UL F_USB=16000000UL

CFLAGS  := -Wall -mmcu=$(MCU) -funsigned-char -funsigned-bitfields -fpack-struct -fshort-enums -ffunction-sections 
CFLAGS += -std=gnu99
LDFLAGS := -Wl,-gc-sections

CFLAGS += -I$(BASEDIR)/src $(addprefix -I , $(LIBDIRS))

ifeq ($(CONFIG), RELEASE)
  DEFINES += NDEBUG
  CFLAGS  += -Os
else ifeq ($(CONFIG), DEBUG)
  DEFINES += DEBUG
  CFLAGS  += -O1 -g2 -Wa,-g
endif

# Add all defines, each prefixed with -D.
CFLAGS += $(foreach def,$(DEFINES),$(def:%=-D%))

.PHONY: all
all: $(TARGET).hex $(TARGET).eep $(TARGET).lss size

# Display the size of generated elf file
ELFSIZE = $(SIZE) --mcu=$(MCU) --format=avr $(TARGET).elf

size:
	@if test -f $(TARGET).elf; then echo; $(ELFSIZE); 2>/dev/null; echo; fi

# Pattern rule to generate .d files from .c files. The .d files are make-files,
# generated by gcc with all the dependencies of the .c file. They are included
# above and will make all .o files depend on the correct prerequisite sources.
build/%.d: %.c
	@set -e; $(CC) -M -MT '$(<:.c=.o)' $(CFLAGS) $< | sed -e 's,\($*\)\.o[ :]*,\1.o $@: ,g' > $@

# dependency generation to handle headers
%.o: %.c
	mkdir -p deps
	$(CC) -MMD -MP -MF deps/$<.dep -o $@ $<

build/%.o: %.c
	mkdir -p $(dir $@)
	$(CC) $(CFLAGS) -c $< -o $@

# Include the auto-generated make files that gcc generated in the %.d rule
# above.
-include $(OBJS:.o=.d)

# Target to link the object files into the final hex file.
$(TARGET).elf: $(OBJS) $(MOOLTIPASS_LIB)
	@echo "objs: $(OBJS)"
	@echo ""
	@echo "Linking $@"
	$(LD) $(CFLAGS) $(LDFLAGS) -o $@ $(OBJS) -Lbuild $(LIBS)

# Extract the sections that should be in the .hex file from the .elf file.
%.hex: %.elf
	$(OBJCOPY) -O $(FORMAT) -R .eeprom -R .fuse -R .lock -R .signature $< $@

# Extract the eeprom parts from the .elf file.
%.eep: %.elf
	-$(OBJCOPY) -j .eeprom --set-section-flags=.eeprom="alloc,load" \
	--change-section-lma .eeprom=0 --no-change-warnings -O $(FORMAT) $< $@ || exit 0

%.lss: %.elf
	$(OBJDUMP) -h -S -z $< > $@

$(MOOLTIPASS_LIB): $(LIBOBJS)
	$(AR) rcs $@ $?

.PHONY: fuses flash clean
# Target to set the fuses of the mooltipass device.
fuses:
	avrdude $(AVRDUDEFLAGS) -p $(MCU) -U lfuse:w:0xff:m
	avrdude $(AVRDUDEFLAGS) -p $(MCU) -U hfuse:w:0xd9:m
	avrdude $(AVRDUDEFLAGS) -p $(MCU) -U efuse:w:0xfb:m

# Target to flash the hex image to the mooltipass device.
flash: $(TARGET).hex
	avrdude $(AVRDUDEFLAGS) -p $(MCU) -U flash:w:$<:i

clean:
	@rm -f $(OBJS) $(OBJS:.o=.d) $(TARGET).hex $(TARGET).eep $(TARGET).lss $(TARGET).elf
	@rm -rf build
